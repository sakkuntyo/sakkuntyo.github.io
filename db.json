{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/readme.md","path":"readme.md","modified":0,"renderable":0},{"_id":"source/images/byobu-exit1.png","path":"images/byobu-exit1.png","modified":0,"renderable":0},{"_id":"source/images/byobu-focus-window.png","path":"images/byobu-focus-window.png","modified":0,"renderable":0},{"_id":"source/images/byobu-exit2.png","path":"images/byobu-exit2.png","modified":0,"renderable":0},{"_id":"source/images/byobu-focus2.png","path":"images/byobu-focus2.png","modified":0,"renderable":0},{"_id":"source/images/byobu-focus1.png","path":"images/byobu-focus1.png","modified":0,"renderable":0},{"_id":"source/images/byobu-horizon.png","path":"images/byobu-horizon.png","modified":0,"renderable":0},{"_id":"source/images/byobu-move1.png","path":"images/byobu-move1.png","modified":0,"renderable":0},{"_id":"source/images/byobu-newindow.png","path":"images/byobu-newindow.png","modified":0,"renderable":0},{"_id":"source/images/byobu-move2.png","path":"images/byobu-move2.png","modified":0,"renderable":0},{"_id":"source/images/byobu-vertical.png","path":"images/byobu-vertical.png","modified":0,"renderable":0},{"_id":"source/images/byobu1.png","path":"images/byobu1.png","modified":0,"renderable":0},{"_id":"source/images/github-settings-keys2.png","path":"images/github-settings-keys2.png","modified":0,"renderable":0},{"_id":"source/images/nmon.png","path":"images/nmon.png","modified":0,"renderable":0},{"_id":"source/images/laravel-dev-create.png","path":"images/laravel-dev-create.png","modified":0,"renderable":0},{"_id":"source/images/nmon2.png","path":"images/nmon2.png","modified":0,"renderable":0},{"_id":"source/images/nmon1.png","path":"images/nmon1.png","modified":0,"renderable":0},{"_id":"source/images/nmon4.png","path":"images/nmon4.png","modified":0,"renderable":0},{"_id":"source/images/nmon5.png","path":"images/nmon5.png","modified":0,"renderable":0},{"_id":"source/images/nmon3.png","path":"images/nmon3.png","modified":0,"renderable":0},{"_id":"source/images/wsl-mount-for-windows2.png","path":"images/wsl-mount-for-windows2.png","modified":0,"renderable":0},{"_id":"source/images/wsl-mount-for-windows1.png","path":"images/wsl-mount-for-windows1.png","modified":0,"renderable":0},{"_id":"source/images/wsl-mount-for-windows4.png","path":"images/wsl-mount-for-windows4.png","modified":0,"renderable":0},{"_id":"source/images/wsl-mount-for-windows5.png","path":"images/wsl-mount-for-windows5.png","modified":0,"renderable":0},{"_id":"source/images/github-settings-keys.png","path":"images/github-settings-keys.png","modified":0,"renderable":0},{"_id":"source/images/github-settings2.png","path":"images/github-settings2.png","modified":0,"renderable":0},{"_id":"source/images/wsl-mount-for-windows3.png","path":"images/wsl-mount-for-windows3.png","modified":0,"renderable":0},{"_id":"source/images/wsl-mount-for-windows6.png","path":"images/wsl-mount-for-windows6.png","modified":0,"renderable":0},{"_id":"source/images/github-settings.png","path":"images/github-settings.png","modified":0,"renderable":0},{"_id":"themes/next-sakkuntyo/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/readme.md","hash":"1ab9f6c29725c1edbd8c1043e375f94c4bb88ecb","modified":1574001292519},{"_id":"themes/next-sakkuntyo/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1579702240760},{"_id":"themes/next-sakkuntyo/.all-contributorsrc","hash":"1eba597197a2044d93bff26e1c470723c73f06ad","modified":1579702240754},{"_id":"themes/next-sakkuntyo/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1579702240764},{"_id":"themes/next-sakkuntyo/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1579702240767},{"_id":"themes/next-sakkuntyo/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1579702240857},{"_id":"themes/next-sakkuntyo/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1579702240869},{"_id":"themes/next-sakkuntyo/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1579702240861},{"_id":"themes/next-sakkuntyo/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1579702240865},{"_id":"themes/next-sakkuntyo/README.md","hash":"e0fcd99c0a6db47fe5739df32d6ab39c44c65196","modified":1579702240875},{"_id":"themes/next-sakkuntyo/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1579702240888},{"_id":"themes/next-sakkuntyo/_config.yml","hash":"7a582f5cdc3b90cfcc1ea8c4e405c73b15b1f6d8","modified":1579702240883},{"_id":"themes/next-sakkuntyo/gulpfile.js","hash":"94e80ca87826b90744618b00d08bc7e5eefbaef4","modified":1579702241019},{"_id":"themes/next-sakkuntyo/package.json","hash":"04cdcb7cb13a4d21739b49babd93e01ad5da24c3","modified":1579702241684},{"_id":"source/_posts/anyenv.md","hash":"c157daa335292ae819b8893c73af128a9ffca11f","modified":1581264156744},{"_id":"source/_posts/git-howto-simple.md","hash":"a3aa4d6fcd702b70afb016fcd3bcdcc3caa0980e","modified":1574001292484},{"_id":"source/_posts/github-addkey.md","hash":"ad00a79dba7ebb9f0f85cb05760628ecbdc84990","modified":1581264315368},{"_id":"source/_posts/git-mingw-gcc.md","hash":"9be53536aa6d750e8b817da5b024cb5819a39594","modified":1581264216241},{"_id":"source/_posts/byobu.md","hash":"dc45347605f8d30e01fbb655718e2f57bb41d7bd","modified":1580917350003},{"_id":"source/_posts/go-cms-ponzu.md","hash":"11cd487b4518fb9021ef34f13ff10fa965591ee1","modified":1580582637211},{"_id":"source/_posts/github-command-operation.md","hash":"5a30ddd5b892be0bd872637c267d9b4d47f7d2fe","modified":1581264266321},{"_id":"source/_posts/hexo-generate-sitemap.md","hash":"93b856d4ce24741862323557670da838e68bf2f4","modified":1581264182208},{"_id":"source/_posts/initrd-unpack-edit-compress.md","hash":"e2243e3fb312f2f9160f7d1d79a472d817b9cbf1","modified":1581264307001},{"_id":"source/_posts/laravel-build-develop-environment-debian.md","hash":"0515dc702547571ab1d38738e11628eaaa399c28","modified":1574001292496},{"_id":"source/_posts/linux-mac-windows-nodejs-install-js.md","hash":"f3676e4dc8d67720c4c601ff864100d8d9a88c8f","modified":1581264293881},{"_id":"source/_posts/miniconda-python.md","hash":"c7e71a1761b1e333e4b0b167c0696dc107221311","modified":1581193748504},{"_id":"source/_posts/nmon.md","hash":"8a120345aa9ff16321269fdbabf2d4a627914075","modified":1581264152032},{"_id":"source/_posts/neovim-vim-lsp.md","hash":"c6dd8fca1f04b4d0658d10fda00860c68981aded","modified":1581264161065},{"_id":"source/_posts/linux-debian-time-adjustment.md","hash":"7cc591e40127e10e20561720a8961b3672d4bf6c","modified":1574001292500},{"_id":"source/_posts/npx.md","hash":"afcb196f37ca2d0b3b2ff6116b369be2f99497f2","modified":1580582444955},{"_id":"source/_posts/mount-networkdrive-for-wsl.md","hash":"34803d9338e9a4e98c5aabf178ff4e7c27c7babe","modified":1581442038646},{"_id":"source/_posts/nodenv.md","hash":"a080835366ec9bb50715b410ff3a3a44ceee52ca","modified":1580907378340},{"_id":"source/_posts/powershell.md","hash":"868eb5af758fef39e4a24de42d7a132e55191629","modified":1581264143858},{"_id":"source/_posts/shell-basename.md","hash":"86b8de1309fc5d3d740bbe868f62af5672b2fcab","modified":1580532431174},{"_id":"source/_posts/ubuntu-nginx-webserver-md.md","hash":"d45a13344362c1e2f96b68b80e567e21fc88dbf8","modified":1581264249585},{"_id":"source/_posts/ubuntu-apache-webserver.md","hash":"7df04c3e559fc882e4613e4e7a2f3d90d14296ef","modified":1581264239713},{"_id":"source/_posts/wsl-ubuntu-byobu.md","hash":"6416d33dcb1bebd0833e116f8bef0aa4ab6240e5","modified":1581603878994},{"_id":"source/_drafts/Microsoft製-Androidタブレットを作成する.md","hash":"c2786b549ec570a893015b935fc189aad80340e7","modified":1574001292474},{"_id":"source/_posts/wsl-mount-for-windows.md","hash":"81a43da5ed3543cd93b7b01c702e565ead8c9d16","modified":1581429900022},{"_id":"source/_posts/vagrant-up-mint19-desktop.md","hash":"f496ffa7ea50a102097edb68d3bb28da965e1a3c","modified":1581264808624},{"_id":"source/_posts/wsl-ubuntu-root.md","hash":"c422a066f70879170832eb8943b0b3d2b8befa5f","modified":1580305770263},{"_id":"source/images/byobu-exit1.png","hash":"01c0c67ee8c7b5bb9ab8928e89737cbb9bc91438","modified":1580917032056},{"_id":"source/_drafts/VDIでAndroidを起動する.md","hash":"7821705493c3509e6f227a312f2c0a8afa29444a","modified":1574001292477},{"_id":"source/images/byobu-focus-window.png","hash":"fc5d6f34b7d2ae2c5ab6788536083a0a4259dea6","modified":1580916965669},{"_id":"source/_posts/xsel-commandline-clipboard.md","hash":"bc4f3c2c0f67f6c8875308f33f85d625d15db17b","modified":1579702240750},{"_id":"source/images/byobu-exit2.png","hash":"e53af4739c21cdcb5a6b2272dcf8f9b54c92796f","modified":1580917064372},{"_id":"source/_drafts/go-install.md","hash":"e3240827aeb0daa03ac0e6a36b1981806a2ab065","modified":1581097455049},{"_id":"source/_drafts/【2019年秋】RyzenとCore-iシリーズ比較.md","hash":"fecc34dbd183c266bd7dd93527b90ae614b4ee4c","modified":1574001292480},{"_id":"source/_drafts/hugo-github-user-site-deploy.md","hash":"f9bf013961264e3a631c0f6f01dfd7df01a4c853","modified":1580135737988},{"_id":"source/images/byobu-focus2.png","hash":"d1a9db89e4691d9d4cf6adc1241831bbec44aa88","modified":1580916845637},{"_id":"source/images/byobu-focus1.png","hash":"1a088f173b81d2bb55baf7992b55d007ab8e09fe","modified":1580916836266},{"_id":"source/images/byobu-horizon.png","hash":"e7cbd619657bd13df8422b0fbd5860921719e863","modified":1580916537948},{"_id":"source/images/byobu-move1.png","hash":"52a499a1730b49189f82b3fbeab4978e574745e0","modified":1580916589803},{"_id":"source/images/byobu-newindow.png","hash":"bb5110721de91be047db5d0b8c0ca9840961999e","modified":1580916899004},{"_id":"source/images/byobu-move2.png","hash":"11096b24eacf13beeb1bb1128f3c90f420eae023","modified":1580916605235},{"_id":"source/images/byobu-vertical.png","hash":"5f81b86588479ef08b2601db2a5c17aa8b952db7","modified":1580916506046},{"_id":"source/images/byobu1.png","hash":"08374d8d705cd5bebaef66959ee30d37feb41114","modified":1580915354739},{"_id":"source/images/github-settings-keys2.png","hash":"c58ca309336676cbb3cff068a25d240a37415c15","modified":1574001292514},{"_id":"source/images/nmon.png","hash":"f936ea136794c842ffede4f795731df890496a9d","modified":1580917578978},{"_id":"source/images/laravel-dev-create.png","hash":"72e11e0a9fdcc00c4081688d39c7ccf05d496970","modified":1574001292518},{"_id":"source/images/nmon2.png","hash":"91924c11741708d6216443660a9db1f44d25b064","modified":1581000449802},{"_id":"source/images/nmon1.png","hash":"07e8eaeb1deaa47fc79e8ab4543bbee89aa5dc94","modified":1581000405337},{"_id":"source/images/nmon4.png","hash":"a7d1eca5e2e0b7747166a37f262ce93e0b9a891c","modified":1581003385347},{"_id":"source/images/nmon5.png","hash":"06d03a8993d75d35739668fb8f18ac40dd0a5614","modified":1581003550276},{"_id":"source/images/nmon3.png","hash":"04c9de46f6f0d0f06d96fcf57c6736eb38503593","modified":1581003146371},{"_id":"source/images/wsl-mount-for-windows2.png","hash":"fa8409b9fcc17ff36f2c785d3ced8e8d3bc24d1a","modified":1581429098073},{"_id":"source/images/wsl-mount-for-windows1.png","hash":"b5e5a1398a3ed6121552af334d247de2bef4296d","modified":1581429067096},{"_id":"source/images/wsl-mount-for-windows4.png","hash":"51a4603945dc8121776097b6784514904b6147c3","modified":1581429393875},{"_id":"source/images/wsl-mount-for-windows5.png","hash":"bf628b3dfd3b0a5b550a9f2aeb66884929b8acfa","modified":1581429527070},{"_id":"themes/next-sakkuntyo/.github/PULL_REQUEST_TEMPLATE.md","hash":"2a4ff75ccb91d9001032c08e22489096b850bf4f","modified":1579702240807},{"_id":"themes/next-sakkuntyo/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1579702240771},{"_id":"themes/next-sakkuntyo/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1579702240818},{"_id":"themes/next-sakkuntyo/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1579702240813},{"_id":"themes/next-sakkuntyo/.github/CONTRIBUTING.md","hash":"c62433b1746823d0f09b671d0b12a42d2300e768","modified":1579702240778},{"_id":"themes/next-sakkuntyo/.github/issue_label_bot.yaml","hash":"b09c85aa449f46bc025317ed196ec33a877f7c23","modified":1579702240827},{"_id":"themes/next-sakkuntyo/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1579702240832},{"_id":"themes/next-sakkuntyo/.github/stale.yml","hash":"941209526c2f7d916c76163c9e1ac1af9d956679","modified":1579702240847},{"_id":"themes/next-sakkuntyo/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1579702240823},{"_id":"themes/next-sakkuntyo/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1579702240836},{"_id":"themes/next-sakkuntyo/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1579702240841},{"_id":"themes/next-sakkuntyo/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1579702240852},{"_id":"themes/next-sakkuntyo/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1579702240893},{"_id":"themes/next-sakkuntyo/docs/ALGOLIA-SEARCH.md","hash":"20f8a3d7db6e797a5a3ed8c84837315cb8e09e5b","modified":1579702240898},{"_id":"themes/next-sakkuntyo/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1579702240916},{"_id":"themes/next-sakkuntyo/docs/DATA-FILES.md","hash":"a85ae0f3a9655eea9acd3f6209b72eb002f2058d","modified":1579702240911},{"_id":"themes/next-sakkuntyo/docs/AUTHORS.md","hash":"87d5bf72b7be09e9e7cf8d0036b2c81fbfbe7069","modified":1579702240904},{"_id":"themes/next-sakkuntyo/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1579702240928},{"_id":"themes/next-sakkuntyo/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1579702240921},{"_id":"themes/next-sakkuntyo/docs/MATH.md","hash":"aa90364b1ac069b4f8cfdb48b4879311856224e6","modified":1579702240934},{"_id":"themes/next-sakkuntyo/languages/en.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1579702241030},{"_id":"themes/next-sakkuntyo/languages/es.yml","hash":"7dc1d7d5ea1078ee3b9bc8e0e8d0f15f52a7a4aa","modified":1579702241034},{"_id":"themes/next-sakkuntyo/languages/default.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1579702241030},{"_id":"themes/next-sakkuntyo/languages/hu.yml","hash":"e4a5f43fb45acd992def3de3b600aa4df4c95ed7","modified":1579702241048},{"_id":"themes/next-sakkuntyo/languages/de.yml","hash":"3d8920676d89494d7d1c74d4238680151ea6d9df","modified":1579702241024},{"_id":"themes/next-sakkuntyo/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1579702240940},{"_id":"themes/next-sakkuntyo/languages/fa.yml","hash":"269b5cb70774485d7dbbcf98eec72c9e84e135b2","modified":1579702241039},{"_id":"themes/next-sakkuntyo/languages/fr.yml","hash":"dfdcfa536c40d06125dff373d042c50e08fcafd8","modified":1579702241043},{"_id":"themes/next-sakkuntyo/languages/it.yml","hash":"311597c620059dbb99474f19b2110a4485ecf70b","modified":1579702241056},{"_id":"themes/next-sakkuntyo/languages/ja.yml","hash":"4f929842b3d6aaed709ea99da679d3910ee184e5","modified":1579702241061},{"_id":"themes/next-sakkuntyo/languages/pt.yml","hash":"af9d9b581dca45ab9789ca41d3492883a911e383","modified":1579702241078},{"_id":"themes/next-sakkuntyo/languages/ko.yml","hash":"5f5194dd0f5a3c8484e7668bce6fbe23340e531a","modified":1579702241065},{"_id":"themes/next-sakkuntyo/languages/nl.yml","hash":"561c77ca68e9d51a5ce8c89d3361fdb033c96bba","modified":1579702241069},{"_id":"themes/next-sakkuntyo/languages/id.yml","hash":"5665dece8435964a27b5061d7283f339f84721f0","modified":1579702241052},{"_id":"themes/next-sakkuntyo/languages/zh-HK.yml","hash":"93d10d6e448c519004b09b11fba980b5036c93af","modified":1579702241103},{"_id":"themes/next-sakkuntyo/languages/pt-BR.yml","hash":"13b579911e44a8b213e1860f9a50c341be1bf95e","modified":1579702241073},{"_id":"themes/next-sakkuntyo/languages/ru.yml","hash":"b485c57dd7b447406dafd0dcfdfc9356266708c9","modified":1579702241082},{"_id":"themes/next-sakkuntyo/languages/uk.yml","hash":"4cbdbb0ed09487c9b435be21ac35f62182f53283","modified":1579702241090},{"_id":"themes/next-sakkuntyo/languages/zh-CN.yml","hash":"e92e1e07a89c9fab27f445f9ec0fa35049fef38c","modified":1579702241099},{"_id":"themes/next-sakkuntyo/languages/tr.yml","hash":"39caf8a3677fd6dfbd523e73f8482a509e87b603","modified":1579702241086},{"_id":"themes/next-sakkuntyo/languages/vi.yml","hash":"3c6bb816ee7278afcddac06998c9ebe47ee19aef","modified":1579702241095},{"_id":"themes/next-sakkuntyo/layout/category.swig","hash":"fe34f1a67b429fd40909c2e01689a83e7fe7e7cc","modified":1579702241661},{"_id":"themes/next-sakkuntyo/languages/zh-TW.yml","hash":"ae2aa1c6ec1a5a01a3a3bde17bcc3a82f9a35fa7","modified":1579702241107},{"_id":"themes/next-sakkuntyo/layout/post.swig","hash":"5c14c9ece50c423c761f73b2001f28c4f21f665b","modified":1579702241676},{"_id":"themes/next-sakkuntyo/layout/archive.swig","hash":"945c236a6f0219caead51a2321204b73854b1ca5","modified":1581096759968},{"_id":"themes/next-sakkuntyo/layout/_layout.swig","hash":"a40f054f4013463f01d61f9b71b47f536fc6a75c","modified":1579702241112},{"_id":"themes/next-sakkuntyo/layout/index.swig","hash":"5bad87bfe875a403a76ea0b56139f5e7d1841fd0","modified":1579702241666},{"_id":"themes/next-sakkuntyo/layout/page.swig","hash":"623c5873eccf1e842ec4fa1eaac0614f235bb50f","modified":1579702241671},{"_id":"source/images/github-settings-keys.png","hash":"2d180f8334de1db26ff75d7efe56098404577cae","modified":1574001292512},{"_id":"source/images/github-settings2.png","hash":"a42afcecd8d35c6b8072242ab23730f389f9c982","modified":1574001292517},{"_id":"themes/next-sakkuntyo/layout/tag.swig","hash":"60d92af61fa0087cbdd4decf590b9f7c111d1abe","modified":1579702241680},{"_id":"source/images/wsl-mount-for-windows3.png","hash":"7a8ca2761f91770573bec34cd0ca944f2dd5ae87","modified":1581429188125},{"_id":"source/images/wsl-mount-for-windows6.png","hash":"7f2a45f7861d61e34661bc99a40fa159176ed3ed","modified":1581429833608},{"_id":"source/images/github-settings.png","hash":"46e86aa2d811133455ad8d5090b08c8e2b6540cc","modified":1574001292515},{"_id":"themes/next-sakkuntyo/.github/ISSUE_TEMPLATE/feature-request.md","hash":"3b27149a4f9ed002ca84483f95ed558470a32b31","modified":1579702240802},{"_id":"themes/next-sakkuntyo/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1579702240946},{"_id":"themes/next-sakkuntyo/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1579702240964},{"_id":"themes/next-sakkuntyo/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c0b9e8a851016da44d9479539dd0b1270fe75571","modified":1579702240789},{"_id":"themes/next-sakkuntyo/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"b28c02cd246f3fe0352b75729c52c5931c8ac84f","modified":1579702240796},{"_id":"themes/next-sakkuntyo/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1579702240952},{"_id":"themes/next-sakkuntyo/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1579702240975},{"_id":"themes/next-sakkuntyo/docs/ru/README.md","hash":"3ceab62de4db29e2257dd5a187c7f8731a207f84","modified":1579702240957},{"_id":"themes/next-sakkuntyo/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1579702240985},{"_id":"themes/next-sakkuntyo/docs/zh-CN/CONTRIBUTING.md","hash":"80524da09eb2061a5b6202a34df6cabb6043c120","modified":1579702240980},{"_id":"themes/next-sakkuntyo/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"5ad2c2d0a11443a03b3fd912925bc0dcfbcda88c","modified":1579702240969},{"_id":"themes/next-sakkuntyo/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1579702240990},{"_id":"themes/next-sakkuntyo/docs/zh-CN/MATH.md","hash":"a658a72589738e11aefaa3a714b188ffd5aac822","modified":1579702241001},{"_id":"themes/next-sakkuntyo/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"4ee0607ddcfb2fe0e5868aced6d5814d1ada4405","modified":1579702241014},{"_id":"themes/next-sakkuntyo/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8ceaad956a1afedf179b2e0b98a67adee9afec08","modified":1579702240995},{"_id":"themes/next-sakkuntyo/docs/zh-CN/README.md","hash":"0981aaf68145a05b02cd10c95d38cbaf97622944","modified":1579702241006},{"_id":"themes/next-sakkuntyo/layout/_partials/pagination.swig","hash":"b9d3f6534efb9e637ac46318fa07c2e5607bf830","modified":1579702241268},{"_id":"themes/next-sakkuntyo/layout/_partials/footer.swig","hash":"9d9a5d6a2f0d4f65fe57c3737c91ecaf276c1f5c","modified":1579702241206},{"_id":"themes/next-sakkuntyo/layout/_partials/widgets.swig","hash":"58f12810a730ba8e3129c9b0d1a7cce42ac6f2d2","modified":1579702241324},{"_id":"themes/next-sakkuntyo/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1579702241273},{"_id":"themes/next-sakkuntyo/layout/_macro/post-collapse.swig","hash":"43572a13a654aed5b5123c6adda4d5c3f2883cb8","modified":1579702241120},{"_id":"themes/next-sakkuntyo/layout/_macro/sidebar.swig","hash":"99e808c3d132badd6a932943c862dd8e330615bc","modified":1579702241131},{"_id":"themes/next-sakkuntyo/layout/_partials/comments.swig","hash":"e0f59221b6010bd3e05d34fac915556f51b8a458","modified":1579702241194},{"_id":"themes/next-sakkuntyo/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1579702241330},{"_id":"themes/next-sakkuntyo/layout/_scripts/noscript.swig","hash":"e08feac6f8904d7f2006e350514a2f07eb9fff44","modified":1579702241335},{"_id":"themes/next-sakkuntyo/layout/_macro/post.swig","hash":"b91a4342d5ad3eb9c036323c9b57468806946638","modified":1579702241125},{"_id":"themes/next-sakkuntyo/layout/_scripts/vendors.swig","hash":"9499cb319f76246e4627c534e486ff8bd70e159f","modified":1579702241392},{"_id":"themes/next-sakkuntyo/layout/_scripts/three.swig","hash":"10cb2740877086b673a0e03a16bbdeee951caa56","modified":1579702241387},{"_id":"themes/next-sakkuntyo/layout/_third-party/index.swig","hash":"32e4fe8dd8b3c40a17314569d1a14bde55251074","modified":1579702241559},{"_id":"themes/next-sakkuntyo/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1579702241449},{"_id":"themes/next-sakkuntyo/layout/_scripts/pjax.swig","hash":"105004ddcc7fe9f4fd7ad1007b628ba8c08c1e27","modified":1579702241356},{"_id":"themes/next-sakkuntyo/layout/_third-party/facebook-sdk.swig","hash":"3cf1a1a83ceddef4033a2964150f81b979ced6ff","modified":1579702241550},{"_id":"themes/next-sakkuntyo/layout/_third-party/quicklink.swig","hash":"65f94b115c42d33e6a90b1f8e62075c6d4ac60c1","modified":1579702241587},{"_id":"themes/next-sakkuntyo/layout/_third-party/vkontakte-api.swig","hash":"e0d012bdbae5545d90143030116114c34219bd37","modified":1579702241647},{"_id":"themes/next-sakkuntyo/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1579702242223},{"_id":"themes/next-sakkuntyo/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1579702241595},{"_id":"themes/next-sakkuntyo/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1579702242288},{"_id":"themes/next-sakkuntyo/source/js/bookmark.js","hash":"60cab6771a57c268da331920edd6d7fcd2713d42","modified":1579702242295},{"_id":"themes/next-sakkuntyo/source/js/motion.js","hash":"71e5caff1d87b1b7256f61e6b318bedf495f9e75","modified":1579702242318},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1579702242237},{"_id":"themes/next-sakkuntyo/source/js/next-boot.js","hash":"a6a82905c6abb8e0ec418ef6b0509b946b955807","modified":1579702242328},{"_id":"themes/next-sakkuntyo/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1579702242235},{"_id":"themes/next-sakkuntyo/source/images/apple-touch-icon-next.png","hash":"910e4daf6c96b026ed56df788c675229d5b0178a","modified":1579702242234},{"_id":"themes/next-sakkuntyo/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1579702242229},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1579702242242},{"_id":"themes/next-sakkuntyo/source/js/local-search.js","hash":"0579159bf994e3726b3ba063e5905f79465fdfb1","modified":1579702242301},{"_id":"themes/next-sakkuntyo/source/js/utils.js","hash":"33a76cda8ecad2bea9db13e1f77c6e22fd6452fe","modified":1579702242354},{"_id":"themes/next-sakkuntyo/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1579702242257},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1579702242247},{"_id":"themes/next-sakkuntyo/source/images/favicon-32x32-next.png","hash":"ee4ce828a1ebd14c0b7546fd7c9ea091af1c199b","modified":1579702242272},{"_id":"themes/next-sakkuntyo/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1579702242262},{"_id":"themes/next-sakkuntyo/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1579702242267},{"_id":"themes/next-sakkuntyo/source/images/favicon-16x16-next.png","hash":"18cad54ace3fe10da978ecd487d5c98be35c600f","modified":1579702242271},{"_id":"themes/next-sakkuntyo/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1579702242279},{"_id":"themes/next-sakkuntyo/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1579702242274},{"_id":"themes/next-sakkuntyo/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1579702242283},{"_id":"themes/next-sakkuntyo/scripts/helpers/engine.js","hash":"896a581feb9432e58a325ad04d66d6310a12374e","modified":1579702241735},{"_id":"themes/next-sakkuntyo/scripts/events/index.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1579702241689},{"_id":"themes/next-sakkuntyo/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1579702241736},{"_id":"themes/next-sakkuntyo/scripts/helpers/next-inject.js","hash":"33eb6f38de575b973fed237032c34d878594fdc1","modified":1579702241737},{"_id":"themes/next-sakkuntyo/scripts/helpers/next-js.js","hash":"b28a8ed6d033946acbb5b91f6d8b884857410dd9","modified":1579702241738},{"_id":"themes/next-sakkuntyo/scripts/helpers/next-url.js","hash":"18f879fb8227c6dc58b919c437fe61db61969caa","modified":1579702241743},{"_id":"themes/next-sakkuntyo/scripts/helpers/next-vendors.js","hash":"d512f44195f68b0ff93f3c82afff9161cdf1b7d6","modified":1579702241745},{"_id":"themes/next-sakkuntyo/scripts/filters/excerpt.js","hash":"827c3733fa14b018dd1f07e41686c207880e823a","modified":1579702241724},{"_id":"themes/next-sakkuntyo/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1579702241726},{"_id":"themes/next-sakkuntyo/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1579702241723},{"_id":"themes/next-sakkuntyo/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1579702241731},{"_id":"themes/next-sakkuntyo/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1579702241733},{"_id":"themes/next-sakkuntyo/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1579702241751},{"_id":"themes/next-sakkuntyo/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1579702241755},{"_id":"themes/next-sakkuntyo/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1579702241753},{"_id":"themes/next-sakkuntyo/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1579702241754},{"_id":"themes/next-sakkuntyo/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1579702241756},{"_id":"themes/next-sakkuntyo/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1579702241757},{"_id":"themes/next-sakkuntyo/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1579702241764},{"_id":"themes/next-sakkuntyo/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1579702241763},{"_id":"themes/next-sakkuntyo/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1579702241766},{"_id":"themes/next-sakkuntyo/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1579702241765},{"_id":"themes/next-sakkuntyo/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1579702241767},{"_id":"themes/next-sakkuntyo/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1579702242096},{"_id":"themes/next-sakkuntyo/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1579702242095},{"_id":"themes/next-sakkuntyo/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1579702242252},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1579702241141},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/index.swig","hash":"ac6a3995c1330d2d73300b2427006509d0f8dba5","modified":1579702241157},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1579702241136},{"_id":"themes/next-sakkuntyo/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1579702242368},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/lean-analytics.swig","hash":"fb7729b69ef443db1f3f2755506ee998cfe4b973","modified":1579702241161},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/firestore.swig","hash":"67e63c25d509f02a6057ee9724f1b6efd647f72f","modified":1579702241145},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1579702241186},{"_id":"themes/next-sakkuntyo/layout/_partials/head/head-unique.swig","hash":"0edd29b972aceecccb65b3e63d79c01f6639d0c5","modified":1579702241212},{"_id":"themes/next-sakkuntyo/layout/_partials/header/brand.swig","hash":"7487ca8f0e4b16351ea0d6b35dc52b0d32176d57","modified":1579702241231},{"_id":"themes/next-sakkuntyo/layout/_partials/header/index.swig","hash":"e0767e09a632264f189570e95ccf70fb1dad9110","modified":1579702241236},{"_id":"themes/next-sakkuntyo/layout/_partials/analytics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1579702241173},{"_id":"themes/next-sakkuntyo/layout/_partials/head/head.swig","hash":"6236a874b93ac1be56fc21df8534a7ae8acffcfc","modified":1579702241221},{"_id":"themes/next-sakkuntyo/layout/_partials/header/menu-item.swig","hash":"6da15fe72f7b6ebe2c510f5c773f30ea0133fb0a","modified":1579702241241},{"_id":"themes/next-sakkuntyo/layout/_partials/header/sub-menu.swig","hash":"02a4706ce7ed6f6d2f660948a74e9e8cd6dfa1fd","modified":1579702241251},{"_id":"themes/next-sakkuntyo/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1579702241264},{"_id":"themes/next-sakkuntyo/layout/_partials/header/menu.swig","hash":"bfd55f4ef59dc5e88a7c45eb709021528fcf2b51","modified":1579702241246},{"_id":"themes/next-sakkuntyo/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1579702241257},{"_id":"themes/next-sakkuntyo/layout/_partials/post/post-related.swig","hash":"f05225f7d0ada3853c425899b515056b96ca49bf","modified":1579702241288},{"_id":"themes/next-sakkuntyo/layout/_partials/post/post-copyright.swig","hash":"b68ccb90e2ee42bd98c93fc030a29d38689dd55c","modified":1579702241278},{"_id":"themes/next-sakkuntyo/layout/_partials/post/post-reward.swig","hash":"90a0869c6cc351d92fc97bf42fdc6e1bfa6bc513","modified":1579702241293},{"_id":"themes/next-sakkuntyo/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1579702241298},{"_id":"themes/next-sakkuntyo/layout/_partials/post/post-footer.swig","hash":"b654d63d2ed221a8b642223e220392e5172d8f4d","modified":1579702241283},{"_id":"themes/next-sakkuntyo/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1579702241308},{"_id":"themes/next-sakkuntyo/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1579702241313},{"_id":"themes/next-sakkuntyo/layout/_partials/sidebar/site-overview.swig","hash":"381f6a88d117293d6e0fe53c43ee30fc71caf817","modified":1579702241318},{"_id":"themes/next-sakkuntyo/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1579702241367},{"_id":"themes/next-sakkuntyo/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1579702241304},{"_id":"themes/next-sakkuntyo/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1579702241372},{"_id":"themes/next-sakkuntyo/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1579702241383},{"_id":"themes/next-sakkuntyo/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1579702241378},{"_id":"themes/next-sakkuntyo/layout/_scripts/pages/schedule.swig","hash":"9e44c795565837ba318fd739e42713de365673fd","modified":1579702241341},{"_id":"themes/next-sakkuntyo/layout/_third-party/analytics/google-analytics.swig","hash":"9f73476ebcf5cd3b7f55525b3f35dc7e9f01e154","modified":1579702241426},{"_id":"themes/next-sakkuntyo/layout/_third-party/analytics/application-insights.swig","hash":"7fd0459d2f1cfe1254f2c2b8087dc094c8cb0e84","modified":1579702241400},{"_id":"themes/next-sakkuntyo/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1579702241443},{"_id":"themes/next-sakkuntyo/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1579702241411},{"_id":"themes/next-sakkuntyo/layout/_third-party/analytics/growingio.swig","hash":"42aa3022f7739a552c7a55de316d8c0994b2fdc1","modified":1579702241435},{"_id":"themes/next-sakkuntyo/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1579702241474},{"_id":"themes/next-sakkuntyo/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1579702241470},{"_id":"themes/next-sakkuntyo/layout/_third-party/comments/disqusjs.swig","hash":"df8413cba22deffca94cf4edd6d9f8d35d2bb58f","modified":1579702241516},{"_id":"themes/next-sakkuntyo/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1579702241459},{"_id":"themes/next-sakkuntyo/layout/_third-party/comments/livere.swig","hash":"6f95bc4d7ffaddc3c0df0ef3eeeaac58ff83f560","modified":1579702241533},{"_id":"themes/next-sakkuntyo/layout/_third-party/comments/gitalk.swig","hash":"261c4f1ab42f692279a310943b807ed34516df7c","modified":1579702241525},{"_id":"themes/next-sakkuntyo/layout/_third-party/comments/valine.swig","hash":"6fbf4cca91ad4ca150b1ea38d562f4bd7ba4c340","modified":1579702241542},{"_id":"themes/next-sakkuntyo/layout/_third-party/comments/disqus.swig","hash":"86092b31761948486ecb379eb7445f66a158769d","modified":1579702241501},{"_id":"themes/next-sakkuntyo/layout/_third-party/math/index.swig","hash":"bc23c9eb9c06b0b377695f44373c14c5cde1d0e3","modified":1579702241564},{"_id":"themes/next-sakkuntyo/layout/_third-party/math/katex.swig","hash":"b9d7a99534e9c2608765b958eae3b5c50f5e4889","modified":1579702241569},{"_id":"themes/next-sakkuntyo/layout/_third-party/comments/changyan.swig","hash":"1130b8bd60f3b84397974486e6586d7f0afaf836","modified":1579702241479},{"_id":"themes/next-sakkuntyo/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1579702241628},{"_id":"themes/next-sakkuntyo/layout/_third-party/search/algolia-search.swig","hash":"ad7a22ee0f183481c7843ecd881b9f9e8e037e31","modified":1579702241605},{"_id":"themes/next-sakkuntyo/layout/_third-party/tags/mermaid.swig","hash":"a54308f934c33b12f6bf28e4ce90e517f38cab57","modified":1579702241632},{"_id":"themes/next-sakkuntyo/layout/_third-party/tags/pdf.swig","hash":"7597800b6ce2f545baea797d95d1b8c7cf624299","modified":1579702241640},{"_id":"themes/next-sakkuntyo/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1579702241614},{"_id":"themes/next-sakkuntyo/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1579702241610},{"_id":"themes/next-sakkuntyo/layout/_third-party/math/mathjax.swig","hash":"dff6835d0b03ecc2db6919ca27cfb7b63949e6a8","modified":1579702241574},{"_id":"themes/next-sakkuntyo/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1579702242090},{"_id":"themes/next-sakkuntyo/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1579702242097},{"_id":"themes/next-sakkuntyo/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1579702241619},{"_id":"themes/next-sakkuntyo/source/css/_variables/Mist.styl","hash":"b9d7058db61df7bbd2b58779efe45621a06ffc18","modified":1579702242201},{"_id":"themes/next-sakkuntyo/source/css/_variables/Gemini.styl","hash":"52550138127ae9ebbe049bcdacd94d767c003855","modified":1579702242196},{"_id":"themes/next-sakkuntyo/source/css/_mixins/base.styl","hash":"0a25f3df1b5c39794365efde387647da81da884a","modified":1579702242101},{"_id":"themes/next-sakkuntyo/source/css/_variables/Muse.styl","hash":"c261d685c5ed0df34718d94bb2ba977c0ed443e6","modified":1579702242205},{"_id":"themes/next-sakkuntyo/source/css/_variables/Pisces.styl","hash":"50bc57e66331c0f15a4527010b4ca3316ac92403","modified":1579702242210},{"_id":"themes/next-sakkuntyo/source/js/schemes/pisces.js","hash":"1e47ffdda23f7f645a2a883a90e2e9d9ddbf9a46","modified":1579702242346},{"_id":"themes/next-sakkuntyo/source/js/schemes/muse.js","hash":"a0f4bbb965867ff4b0a09df6c50e927d707a753c","modified":1579702242336},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1579702242390},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1579702242402},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1579702242411},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1579702242396},{"_id":"themes/next-sakkuntyo/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1579702242482},{"_id":"themes/next-sakkuntyo/scripts/events/lib/config.js","hash":"b710d896fccd34657a70244645470e476a4e069f","modified":1579702241695},{"_id":"themes/next-sakkuntyo/scripts/events/lib/injects.js","hash":"2a5f7c7e507bb354ec05a881bc9a1f4f2f28197c","modified":1579702241702},{"_id":"themes/next-sakkuntyo/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1579702241701},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1579702241706},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/changyan.js","hash":"3ac62f5510f22e9d970089bb01f96ba2134ae161","modified":1579702241705},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1579702241713},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/disqus.js","hash":"ccfac51bde0063ab7ef88182f8cbc98c210e78c9","modified":1579702241714},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/disqusjs.js","hash":"178c4618b29a1e06221285146071e72e24c40499","modified":1579702241715},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/facebook-comments-plugin.js","hash":"e3c74b24f3818f2504fd0c7a954adaa6681bb969","modified":1579702241717},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1579702241718},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/livere.js","hash":"3c4bdc2a682f9889a532e1cb856bc5caeb4208e1","modified":1579702241719},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/vkontakte.js","hash":"031337c2e2157628a15a5f4d96fa6e3fcf2733fe","modified":1579702241721},{"_id":"themes/next-sakkuntyo/scripts/filters/comment/valine.js","hash":"e34d38aee93558b2c68a7fa6203c2e4806405d62","modified":1579702241720},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1579702242406},{"_id":"themes/next-sakkuntyo/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1579702242458},{"_id":"themes/next-sakkuntyo/source/css/_common/components/back-to-top.styl","hash":"e0db0d9205cd47c48edba81c7397e09ed24783fa","modified":1579702241776},{"_id":"themes/next-sakkuntyo/source/css/_common/components/rainbow.styl","hash":"8e9deaf1e0a27d5bf5f0401bf04f5637df12b6c4","modified":1579702241864},{"_id":"themes/next-sakkuntyo/source/css/_common/components/components.styl","hash":"65a38b8a443c7da0f9492d10b3d9c9bf1e82c649","modified":1579702241781},{"_id":"themes/next-sakkuntyo/source/css/_common/components/back-to-top-sidebar.styl","hash":"cda066b495a4b6b10c7bc88b2a9b82722156b66b","modified":1579702241771},{"_id":"themes/next-sakkuntyo/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1579702241872},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/mobile.styl","hash":"990bd301ce2de0a6b936781c58318f3945d81bc2","modified":1579702241942},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/outline.styl","hash":"253be42759a997fa7e63e79d43f6fe432055d1f4","modified":1579702241947},{"_id":"themes/next-sakkuntyo/source/css/_common/components/reading-progress.styl","hash":"0dd11537a4b9a4d2faf3ad5cdae0f0f770a99ccf","modified":1579702241868},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1579702242007},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/buttons.styl","hash":"1df11aefe6ec824973affe42fda3660f29781613","modified":1579702242003},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/pagination.styl","hash":"48df8ba940038b5f6c8496f27a091f90d61f1263","modified":1579702242036},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/base.styl","hash":"f4c09c704448257ba034e932abeaf630a5c0c4e5","modified":1579702241998},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tables.styl","hash":"4ddbc8b2dba6fad900c5eca793a31f18ba850f5a","modified":1579702242047},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/toggles.styl","hash":"03b95661d365252721b0c673b736a7a3e5e0c894","modified":1579702242085},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1579702242032},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Mist/_menu.styl","hash":"991bef91bbff50850729156bacb9070a1dd90d16","modified":1579702242131},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1579702242126},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1579702242116},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1579702242121},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1579702242042},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Muse/_logo.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1579702242151},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Mist/_posts-expand.styl","hash":"aaa7aeb01e2f6db2e5ac404ac06d71725ff83fa3","modified":1579702242135},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Mist/index.styl","hash":"c6560cfb2f720dc8179a3a5785415baa5c6b1f2d","modified":1579702242140},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Gemini/index.styl","hash":"eb8f4c0960b9720f721ae4705088b9c11ebc7ba9","modified":1579702242109},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Muse/_layout.styl","hash":"aab4583b237f7d2e7a49f702793ad32b80e833b5","modified":1579702242146},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Muse/index.styl","hash":"41b1d10a530913908e026fd991216e234766d148","modified":1579702242164},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Muse/_menu.styl","hash":"29b32951d7b41b09c5d33325f01519779c8847b1","modified":1579702242155},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Muse/_sidebar.styl","hash":"eeab294e14abbae231107e1a327e907b25323136","modified":1579702242160},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Pisces/_brand.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1579702242169},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Pisces/_menu.styl","hash":"d221cc1dc78f9a4a17c8376cd0b5145f9fe9a335","modified":1579702242178},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Pisces/_sidebar.styl","hash":"fcc6c42d7976a531f054c05b2d3d4ccf861a8107","modified":1579702242183},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Pisces/_layout.styl","hash":"7ea9f7970cb779920b184ac35c364c5c7456cda0","modified":1579702242173},{"_id":"themes/next-sakkuntyo/source/css/_variables/base.styl","hash":"f99be76f2c72368cc5fbdafc02b676513de17e1e","modified":1579702242215},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1579702242192},{"_id":"themes/next-sakkuntyo/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e2d8d1f393dbf0ae0960ce9944ad89fba804ce74","modified":1579702242188},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1579702242424},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1579702242430},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1579702242417},{"_id":"themes/next-sakkuntyo/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1579702241786},{"_id":"themes/next-sakkuntyo/source/css/_common/components/pages/schedule.styl","hash":"bd24ba69935effe204795ed6fad7ab54e140ee4a","modified":1579702241799},{"_id":"themes/next-sakkuntyo/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1579702241790},{"_id":"themes/next-sakkuntyo/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1579702241794},{"_id":"themes/next-sakkuntyo/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1579702241804},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-eof.styl","hash":"4735c5a76d12713f35d06e2f4d539919ca2196db","modified":1579702241817},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-copyright.styl","hash":"ac2105c5a7f581b1c0f2b59f2c0c3e87a7c28383","modified":1579702241813},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-collapse.styl","hash":"8efce700b8113ff39e9a696d5b3dfdc644e7ee7d","modified":1579702241808},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-expand.styl","hash":"602a3c3d2785965b23412b5c219dfe74b5fb0844","modified":1579702241821},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-gallery.styl","hash":"caa9a78993d549117cdc8fa7a76c473a5e7f0f67","modified":1579702241826},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-header.styl","hash":"f748c264b46d4a118d59c8ad797bb47df67ffa0e","modified":1579702241830},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1579702241835},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1579702241844},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-widgets.styl","hash":"8b6481a0ac60007cf3defa3c9d85a6e412c91d6e","modified":1579702241854},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-reward.styl","hash":"541d6257023915a7caca7540f12cdf283ce025f3","modified":1579702241839},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post.styl","hash":"5248880398c1318624bdab95109c1c9fdb8eec02","modified":1579702241859},{"_id":"themes/next-sakkuntyo/source/css/_common/components/post/post-tags.styl","hash":"469d5e4e188f484abff24eddd5640fa4d4d77ed1","modified":1579702241849},{"_id":"themes/next-sakkuntyo/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1579702241878},{"_id":"themes/next-sakkuntyo/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1579702241886},{"_id":"themes/next-sakkuntyo/source/css/_common/components/third-party/search.styl","hash":"38ce7d692b8bc6fde02e3271dfd50ad37e107e4e","modified":1579702241891},{"_id":"themes/next-sakkuntyo/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1579702241882},{"_id":"themes/next-sakkuntyo/source/css/_common/components/third-party/third-party.styl","hash":"4525465f40f82bd66e5f34e986440c75a9e2d2b2","modified":1579702241898},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1579702241910},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/footer/footer.styl","hash":"d7a4cc66dde4789bf208f8a0dec0e4a19945f3a6","modified":1579702241904},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/github-banner.styl","hash":"a475ca66b201b21a7c4022006743b3a79098829d","modified":1579702241914},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1579702241923},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/header.styl","hash":"b98ba750be29c09784ff337f9e2a6e7a062aa3c0","modified":1579702241919},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/site-nav.styl","hash":"b5ba1b3d5535ccf1e5df6f4cd8ee0147d7278be9","modified":1579702241938},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1579702241952},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/site-meta.styl","hash":"a35cce63504df289a0847a6d827e5a0885e7fe4a","modified":1579702241934},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1579702241957},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/header/menu.styl","hash":"ec4acfafef2054173e173959cf5da6d0448c7c12","modified":1579702241928},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"d055f8420583c7a009818dcdfaada592308bd628","modified":1579702241969},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1579702241961},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f3108a247549fbdf11071d023add3f1b34ad2b23","modified":1579702241974},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"41ccae779f918e6f9f5f625789a7360f1362454c","modified":1579702241965},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar.styl","hash":"17c3f58fb84453603621d6a718fcc821c8d6bced","modified":1579702241988},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"6ce78b92aa58e41c0e5c4f742d812eb74ad965c1","modified":1579702241984},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1579702241992},{"_id":"themes/next-sakkuntyo/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"728ddfaf0959e1ec6cee3fea0e69d13cf817eb25","modified":1579702241979},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1579702242017},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"2124abd41b69ff152f4bb39e78d8fbce96a45c65","modified":1579702242013},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/highlight/highlight.styl","hash":"4efe9174369bfe2125bd167feac18a07271635d6","modified":1579702242022},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1579702242027},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"879f9cec9c88d65b2e31af4346b2bc0f6941f05d","modified":1579702242058},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/note.styl","hash":"a1eed8fe7f97885a9234502a197abf2e90ba22b6","modified":1579702242067},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1579702242062},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1579702242052},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1579702242445},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1579702242071},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1579702242081},{"_id":"themes/next-sakkuntyo/source/css/_common/scaffolding/tags/tabs.styl","hash":"2f39b2f07c2bbca34e2f1e4805ea374566b79dbf","modified":1579702242076},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1579702242452},{"_id":"themes/next-sakkuntyo/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1579702242439},{"_id":"public/post-sitemap.xml","hash":"7879e34c7f78fce7a037c046c6753bd923eb1252","modified":1581603889316},{"_id":"public/tag-sitemap.xml","hash":"9805f3e793ed98dd8cd73321b741c401efbd1445","modified":1581603889317},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1581603889318},{"_id":"public/sitemap.xml","hash":"321f99acf5afb6cfd7ea4b2e6bb554afe2d37fd8","modified":1581603889323},{"_id":"public/2020/02/12/mount-networkdrive-for-wsl/index.html","hash":"551f005bdad151f5e25561faac0f7f20f86c922d","modified":1581603889706},{"_id":"public/2020/02/01/npx/index.html","hash":"671f03e5885255ace645e13937bc4d1da36727cb","modified":1581603889707},{"_id":"public/2020/01/31/shell-basename/index.html","hash":"cd6b9f212b475380e831b4abd566f790fbf0b1df","modified":1581603889707},{"_id":"public/2020/01/29/wsl-ubuntu-root/index.html","hash":"3589d7211c8a554b2e8eb3e89efd66cc697ea89a","modified":1581603889709},{"_id":"public/2020/01/12/xsel-commandline-clipboard/index.html","hash":"bec05f5d5d12c5de96744fa185d848eae7f6ded5","modified":1581603889709},{"_id":"public/2019/12/27/github-command-operation/index.html","hash":"80ac20b5905bdd6a2715c5d8a5bd80ba5f1491d1","modified":1581603889709},{"_id":"public/archives/index.html","hash":"bf612c4f19b03386572163b92a842787e4d5cd89","modified":1581603889709},{"_id":"public/archives/2019/index.html","hash":"98e0c0cdd5235328c289acfe6a9ff27a9b8bfe3f","modified":1581603889709},{"_id":"public/archives/page/2/index.html","hash":"23480b734fa592d3ab955ca958f0c8bff6689cc9","modified":1581603889709},{"_id":"public/archives/page/3/index.html","hash":"57dce60d9a64170247db0ffc483d418feef98989","modified":1581603889709},{"_id":"public/archives/2019/10/index.html","hash":"5c7327849988cf062e8b70512a35835c01bf100c","modified":1581603889709},{"_id":"public/archives/2019/11/index.html","hash":"743d17e84d27cf1ecc56110a09b913a96b8da56f","modified":1581603889709},{"_id":"public/archives/2019/12/index.html","hash":"851176d1e2685f923ac56bb3617ce15022c178e7","modified":1581603889709},{"_id":"public/archives/2020/index.html","hash":"e8d867ecf0d94216a0a05abb0d0d1c428f2137aa","modified":1581603889709},{"_id":"public/archives/2020/01/index.html","hash":"94222804fdfff78ba26b174150523098d876f8ef","modified":1581603889709},{"_id":"public/archives/2020/02/index.html","hash":"4be69207e96f93b2fd23937bac875248bdb23a8c","modified":1581603889709},{"_id":"public/archives/2020/page/2/index.html","hash":"f8f426e048d3f012ae785dfccca3dbbd72c8fee6","modified":1581603889709},{"_id":"public/tags/anyenv/index.html","hash":"28ab08a5a6c3eaed4b6d4260cdadc1da556d1026","modified":1581603889709},{"_id":"public/tags/Git/index.html","hash":"e7b9eaa95f9bf85878353ea2fa06ef5e60fb821d","modified":1581603889709},{"_id":"public/archives/2020/02/page/2/index.html","hash":"79b7b9c8187ec5ac1387f43b7a904b9380cde50b","modified":1581603889709},{"_id":"public/tags/GitHub/index.html","hash":"1b45db00f033458fbf2e83627318d341428dac7f","modified":1581603889709},{"_id":"public/tags/GitBash/index.html","hash":"65b2a60ac849d3059cb576b89552c7bd1d431f43","modified":1581603889710},{"_id":"public/tags/gcc/index.html","hash":"e258bec176a5a30eead3b64270283acafbce30c9","modified":1581603889710},{"_id":"public/tags/mingw/index.html","hash":"d5734351a461bc6a57635b3eecdda31be2ddabdc","modified":1581603889710},{"_id":"public/tags/byobu/index.html","hash":"b00fd18ad55bf1b24fc1045b8f5e59676a56d600","modified":1581603889710},{"_id":"public/tags/golang/index.html","hash":"fb3b114a99e3230994fd3951aaed64ca42f4f7d1","modified":1581603889710},{"_id":"public/tags/cmd/index.html","hash":"24bc295667d980ec4a03b47233ce765fb37d2abb","modified":1581603889710},{"_id":"public/tags/ponzu/index.html","hash":"bd74cd4340c79ebc5f758b3a5166281d70892bfe","modified":1581603889710},{"_id":"public/tags/hub/index.html","hash":"3988c4152c05e8eb0a4e05074eefe441dafda88f","modified":1581603889710},{"_id":"public/tags/Hexo/index.html","hash":"a31ebe45a0d982f43d4d6846cadb8a21ec99b14d","modified":1581603889710},{"_id":"public/tags/sitemap-xml/index.html","hash":"31dae68e2451986b886a275e25d6ae1ddb10da95","modified":1581603889710},{"_id":"public/tags/php/index.html","hash":"7fba0c37f53c5fe159b8649262c56d27c9061a10","modified":1581603889710},{"_id":"public/tags/windows/index.html","hash":"c9c405f07517b02798aa2c4ddef6d5fabaa6efc1","modified":1581603889710},{"_id":"public/tags/nodejs/index.html","hash":"7033ecba5065cb36b7e2a30209378acc26f5dbb6","modified":1581603889710},{"_id":"public/tags/mac/index.html","hash":"53f734fdc849b06a3cbb0cc163d2ba349f64d9af","modified":1581603889710},{"_id":"public/tags/map/index.html","hash":"176c20714ba15d1ea550c71076abebae6f2a8226","modified":1581603889710},{"_id":"public/tags/miniconda/index.html","hash":"edb2eff43ec5c8e1510d17cc50be54744f1ee44e","modified":1581603889710},{"_id":"public/tags/nmon/index.html","hash":"034f53479fcca83d76452d34d39fa046ade8adab","modified":1581603889710},{"_id":"public/tags/vim/index.html","hash":"eb391c4753e2c177a0fe0b69dc2b2727f1704c1e","modified":1581603889710},{"_id":"public/tags/Neovim/index.html","hash":"5e579cc42f8c7ae48ef98a18f5b0aef5b40b8fdd","modified":1581603889710},{"_id":"public/tags/vim-plug/index.html","hash":"94e525454bda61b1ea76b369296e621d7423dece","modified":1581603889710},{"_id":"public/tags/vim-lsp/index.html","hash":"ddb75ca5460b98fcd15f59360efe6a5c6a2c05e6","modified":1581603889710},{"_id":"public/tags/Linux/index.html","hash":"61ff18bf148c0f6213448f8321e34487a967c1cd","modified":1581603889710},{"_id":"public/tags/Debian/index.html","hash":"03763d9fa8b3240c0a31b67ed09076d26648304e","modified":1581603889710},{"_id":"public/2020/02/08/powershell/index.html","hash":"9e941124603a3208fe492c6ded828c57418f990d","modified":1581603889710},{"_id":"public/2020/02/09/miniconda-python/index.html","hash":"532c5c9a824f40f682ce7a340b7bc6e265874be8","modified":1581603889710},{"_id":"public/2020/02/11/wsl-mount-for-windows/index.html","hash":"c3766f8d11515b12266fad1e2391c128ad7727d7","modified":1581603889711},{"_id":"public/2020/02/06/nmon/index.html","hash":"c8a12f0468a1e1fd4edbbf78155271dbba8aad14","modified":1581603889711},{"_id":"public/2020/02/04/nodenv/index.html","hash":"0d96af9b54ccf25b40ba212f9b5d375787fe97b7","modified":1581603889711},{"_id":"public/2020/02/05/anyenv/index.html","hash":"630bbbc7c03d4d920980e6011da91e9e5ffdd65f","modified":1581603889711},{"_id":"public/2020/02/05/byobu/index.html","hash":"a3fce913ab0b4e1c4e59e70a2f50a403ec6b9299","modified":1581603889711},{"_id":"public/2020/02/02/neovim-vim-lsp/index.html","hash":"8190a59c1d02c9d99d387add7ef90db7ffd8082d","modified":1581603889711},{"_id":"public/2020/02/02/go-cms-ponzu/index.html","hash":"1f6d9edc9fef4671f4ae6f17a7301b133aa40d7f","modified":1581603889711},{"_id":"public/2020/01/30/hexo-generate-sitemap/index.html","hash":"99c5c49ee57ab0e593e459fcb0ffa27091a3e77f","modified":1581603889711},{"_id":"public/2020/01/30/git-mingw-gcc/index.html","hash":"e88e208c42481c4dd94593824133aab947ad6ecf","modified":1581603889711},{"_id":"public/2020/01/23/ubuntu-apache-webserver/index.html","hash":"88e6a75a90e454d187b105c9d048c7b7fb6cc7f7","modified":1581603889711},{"_id":"public/2020/01/22/ubuntu-nginx-webserver-md/index.html","hash":"be95a121d69a31bdec3e893d0e2b0611a4338ec3","modified":1581603889711},{"_id":"public/2019/11/16/linux-mac-windows-nodejs-install-js/index.html","hash":"2c8648e0467f60cb8607e925325f9438243171e6","modified":1581603889711},{"_id":"public/2019/11/15/linux-debian-time-adjustment/index.html","hash":"081afa410f83ba9f3ee1f383e54ca6836a696091","modified":1581603889711},{"_id":"public/2019/11/03/laravel-build-develop-environment-debian/index.html","hash":"21cce971ba362f4771ed95cfd84e7956791ebf97","modified":1581603889711},{"_id":"public/2019/10/26/vagrant-up-mint19-desktop/index.html","hash":"9b00877792e72ed2475b8d781007aee8794e7123","modified":1581603889711},{"_id":"public/2019/10/12/git-howto-simple/index.html","hash":"325c37d9507da34aca07c75043fa66b984b5f74d","modified":1581603889711},{"_id":"public/2019/10/20/initrd-unpack-edit-compress/index.html","hash":"9d66abd8f9c0d2511e3fc6a71ce5d35f8e6b2081","modified":1581603889711},{"_id":"public/2019/10/20/github-addkey/index.html","hash":"1f4e9a7d8a23f39028c60623595e141dfce73357","modified":1581603889711},{"_id":"public/2020/02/13/wsl-ubuntu-byobu/index.html","hash":"b1428eae27a77b99e6a155bed7d545768bb70d9d","modified":1581603889718},{"_id":"public/tags/timedatectl/index.html","hash":"964cef55ee0907869fb21d2135b40425bb9096fc","modified":1581603889718},{"_id":"public/tags/wsl/index.html","hash":"113cb3b44206946e253489a4df596b9c58d1ba31","modified":1581603889718},{"_id":"public/tags/PowerShell/index.html","hash":"7a18aa6649363ecb54c4cacf53d14bd70d5370a7","modified":1581603889719},{"_id":"public/tags/sh/index.html","hash":"c0df4c12ad5364c4b12db97cbb17340587506036","modified":1581603889719},{"_id":"public/tags/basename/index.html","hash":"ea26945122f600cbdf1b9df371d805cd1980abb3","modified":1581603889719},{"_id":"public/tags/Apache/index.html","hash":"3513ace495fe574ad5e2853865961369887dffa6","modified":1581603889719},{"_id":"public/tags/WSL/index.html","hash":"e6d1de60cc417b7350039ae0aafad6c047716a66","modified":1581603889719},{"_id":"public/tags/vagrant/index.html","hash":"8d739b874708d38db44c4b206940fb3dfd6bbf4c","modified":1581603889719},{"_id":"public/tags/Ubuntu/index.html","hash":"55adc5102913fcfc1df9d3e5b1e1155285bde726","modified":1581603889719},{"_id":"public/tags/BoW/index.html","hash":"2f38efb8022b2cc8cf3d138cd740dcedb6826e8c","modified":1581603889719},{"_id":"public/tags/ubuntu/index.html","hash":"10008290c0d95997997e48d800af0c13e97fa5d5","modified":1581603889719},{"_id":"public/tags/xsel/index.html","hash":"65e1e1fa49aa4aa891ebcb03cf994f4175e388e8","modified":1581603889719},{"_id":"public/tags/nginx/index.html","hash":"d225457f00fe53bf10f899b5d2516c7cb07e8dd7","modified":1581603889719},{"_id":"public/tags/npx/index.html","hash":"85e4873cda3af854e1a1e577539f96089ad21bc5","modified":1581603889719},{"_id":"public/tags/npm/index.html","hash":"da6559b7867c429a435556828737cf862acb5f87","modified":1581603889719},{"_id":"public/tags/init/index.html","hash":"57777e30c8e08c81a2c858aa3263f55d9f525a57","modified":1581603889719},{"_id":"public/index.html","hash":"928e78bc1c5da09ee147095645e295f63e431b80","modified":1581603889719},{"_id":"public/page/3/index.html","hash":"73daaeff305a557c1f43509a4644ce4cda3d3e93","modified":1581603889719},{"_id":"public/page/2/index.html","hash":"64b78e3635c58bbbf8ecff54f367162565148b58","modified":1581603889719},{"_id":"public/readme.md","hash":"1ab9f6c29725c1edbd8c1043e375f94c4bb88ecb","modified":1581603889725},{"_id":"public/images/byobu-focus2.png","hash":"d1a9db89e4691d9d4cf6adc1241831bbec44aa88","modified":1581603889725},{"_id":"public/images/byobu-focus-window.png","hash":"fc5d6f34b7d2ae2c5ab6788536083a0a4259dea6","modified":1581603889725},{"_id":"public/images/byobu-focus1.png","hash":"1a088f173b81d2bb55baf7992b55d007ab8e09fe","modified":1581603889725},{"_id":"public/images/byobu-exit2.png","hash":"e53af4739c21cdcb5a6b2272dcf8f9b54c92796f","modified":1581603889725},{"_id":"public/images/byobu-move1.png","hash":"52a499a1730b49189f82b3fbeab4978e574745e0","modified":1581603889725},{"_id":"public/images/byobu-newindow.png","hash":"bb5110721de91be047db5d0b8c0ca9840961999e","modified":1581603889725},{"_id":"public/images/byobu-horizon.png","hash":"e7cbd619657bd13df8422b0fbd5860921719e863","modified":1581603889725},{"_id":"public/images/byobu-move2.png","hash":"11096b24eacf13beeb1bb1128f3c90f420eae023","modified":1581603889725},{"_id":"public/images/byobu-vertical.png","hash":"5f81b86588479ef08b2601db2a5c17aa8b952db7","modified":1581603889725},{"_id":"public/images/nmon.png","hash":"f936ea136794c842ffede4f795731df890496a9d","modified":1581603889725},{"_id":"public/images/nmon1.png","hash":"07e8eaeb1deaa47fc79e8ab4543bbee89aa5dc94","modified":1581603889725},{"_id":"public/images/nmon2.png","hash":"91924c11741708d6216443660a9db1f44d25b064","modified":1581603889725},{"_id":"public/images/nmon3.png","hash":"04c9de46f6f0d0f06d96fcf57c6736eb38503593","modified":1581603889725},{"_id":"public/images/nmon4.png","hash":"a7d1eca5e2e0b7747166a37f262ce93e0b9a891c","modified":1581603889726},{"_id":"public/images/wsl-mount-for-windows2.png","hash":"fa8409b9fcc17ff36f2c785d3ced8e8d3bc24d1a","modified":1581603889726},{"_id":"public/images/nmon5.png","hash":"06d03a8993d75d35739668fb8f18ac40dd0a5614","modified":1581603889726},{"_id":"public/images/wsl-mount-for-windows1.png","hash":"b5e5a1398a3ed6121552af334d247de2bef4296d","modified":1581603889726},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1581603889726},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1581603889726},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1581603889727},{"_id":"public/images/apple-touch-icon-next.png","hash":"910e4daf6c96b026ed56df788c675229d5b0178a","modified":1581603889727},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1581603889727},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1581603889727},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1581603889727},{"_id":"public/images/favicon-32x32-next.png","hash":"ee4ce828a1ebd14c0b7546fd7c9ea091af1c199b","modified":1581603889727},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1581603889727},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1581603889727},{"_id":"public/images/favicon-16x16-next.png","hash":"18cad54ace3fe10da978ecd487d5c98be35c600f","modified":1581603889727},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1581603889727},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1581603889727},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1581603889727},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1581603889727},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1581603889727},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1581603889745},{"_id":"public/images/byobu1.png","hash":"08374d8d705cd5bebaef66959ee30d37feb41114","modified":1581603891211},{"_id":"public/images/github-settings-keys2.png","hash":"c58ca309336676cbb3cff068a25d240a37415c15","modified":1581603891211},{"_id":"public/images/wsl-mount-for-windows4.png","hash":"51a4603945dc8121776097b6784514904b6147c3","modified":1581603891212},{"_id":"public/images/laravel-dev-create.png","hash":"72e11e0a9fdcc00c4081688d39c7ccf05d496970","modified":1581603891212},{"_id":"public/images/byobu-exit1.png","hash":"01c0c67ee8c7b5bb9ab8928e89737cbb9bc91438","modified":1581603891212},{"_id":"public/images/wsl-mount-for-windows3.png","hash":"7a8ca2761f91770573bec34cd0ca944f2dd5ae87","modified":1581603891212},{"_id":"public/images/github-settings2.png","hash":"a42afcecd8d35c6b8072242ab23730f389f9c982","modified":1581603891212},{"_id":"public/images/github-settings-keys.png","hash":"2d180f8334de1db26ff75d7efe56098404577cae","modified":1581603891212},{"_id":"public/images/wsl-mount-for-windows5.png","hash":"bf628b3dfd3b0a5b550a9f2aeb66884929b8acfa","modified":1581603891212},{"_id":"public/images/wsl-mount-for-windows6.png","hash":"7f2a45f7861d61e34661bc99a40fa159176ed3ed","modified":1581603891212},{"_id":"public/images/github-settings.png","hash":"46e86aa2d811133455ad8d5090b08c8e2b6540cc","modified":1581603891213},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1581603891213},{"_id":"public/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1581603891443},{"_id":"public/js/bookmark.js","hash":"60cab6771a57c268da331920edd6d7fcd2713d42","modified":1581603891443},{"_id":"public/js/motion.js","hash":"71e5caff1d87b1b7256f61e6b318bedf495f9e75","modified":1581603891443},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1581603891443},{"_id":"public/js/schemes/pisces.js","hash":"1e47ffdda23f7f645a2a883a90e2e9d9ddbf9a46","modified":1581603891443},{"_id":"public/js/schemes/muse.js","hash":"a0f4bbb965867ff4b0a09df6c50e927d707a753c","modified":1581603891443},{"_id":"public/js/next-boot.js","hash":"a6a82905c6abb8e0ec418ef6b0509b946b955807","modified":1581603891443},{"_id":"public/css/main.css","hash":"f3e689e7dd9ac5b643f79387c295fca5faf73db4","modified":1581603891443},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1581603891443},{"_id":"public/js/local-search.js","hash":"0579159bf994e3726b3ba063e5905f79465fdfb1","modified":1581603891794},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1581603891794},{"_id":"public/js/utils.js","hash":"33a76cda8ecad2bea9db13e1f77c6e22fd6452fe","modified":1581603891794},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1581603891881},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1581603892059},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1581603892117},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1581603892168},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1581603892168}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"post","title":"anyenvで各env系ツールをインストール","date":"2020-02-04T15:01:54.000Z","_content":"\n# 環境\n\n- LinuxMint19 Mate\n\n# 手順\n\n## anyenvをインストール\n\n### anyenvをclone\n\n```bash\n$ git clone https://github.com/riywo/anyenv ~/.anyenv\n```\n\n### パスを通す\n\nターミナル起動時にanyenvのパスを通す設定を書く\n\n```bash\n$ echo 'PATH=${PATH}:${HOME}/.anyenv/bin' >> ~/.bashrc\n$ echo 'eval \"$(anyenv init -)\"' >> ~/.bashrc\n$ source ~/.bashrc\n\nanyenv用のインストールフォルダを作成する\n一度だけ実行する必要がある\n$ anyenv install --init\n```\n\n## インストール出来るenvを確認\n\n```bash\n$ anyenv install -l\n  Renv\n  crenv\n  denv\n  erlenv\n  exenv\n  goenv\n  hsenv\n  jenv\n  luaenv\n  nodenv\n  phpenv\n  plenv\n  pyenv\n  rbenv\n  sbtenv\n  scalaenv\n  swiftenv\n  tfenv\n```\n\n## 好きなenvをインストール\n\n今回はrbenvをインストールします\n\n```bash\n$ anyenv install rbenv\nインストール後、シェルを再起動させる必要がある様なので以下実行\n$ exec $SHELL -l\n```\n\n## rbenvが使える事を確認\n\n```bash\n$ rbenv --version\n```\n\n## anyenvでインストールしたenvの確認\n\n```bash\n$ anyenv local -l\nrbenv: no local version configured for this directory\n```\n\n## envをアンインストール\n\n```bash\n$ anyenv uninstall rbenv\nrbenvが使えなくなる\n$ rbenv\nanyenv: env `rbenv' not installed\n```\n","source":"_posts/anyenv.md","raw":"---\nlayout: post\ntitle: anyenvで各env系ツールをインストール\ndate: 2020-02-05 00:01:54\ntags: [anyenv]\n---\n\n# 環境\n\n- LinuxMint19 Mate\n\n# 手順\n\n## anyenvをインストール\n\n### anyenvをclone\n\n```bash\n$ git clone https://github.com/riywo/anyenv ~/.anyenv\n```\n\n### パスを通す\n\nターミナル起動時にanyenvのパスを通す設定を書く\n\n```bash\n$ echo 'PATH=${PATH}:${HOME}/.anyenv/bin' >> ~/.bashrc\n$ echo 'eval \"$(anyenv init -)\"' >> ~/.bashrc\n$ source ~/.bashrc\n\nanyenv用のインストールフォルダを作成する\n一度だけ実行する必要がある\n$ anyenv install --init\n```\n\n## インストール出来るenvを確認\n\n```bash\n$ anyenv install -l\n  Renv\n  crenv\n  denv\n  erlenv\n  exenv\n  goenv\n  hsenv\n  jenv\n  luaenv\n  nodenv\n  phpenv\n  plenv\n  pyenv\n  rbenv\n  sbtenv\n  scalaenv\n  swiftenv\n  tfenv\n```\n\n## 好きなenvをインストール\n\n今回はrbenvをインストールします\n\n```bash\n$ anyenv install rbenv\nインストール後、シェルを再起動させる必要がある様なので以下実行\n$ exec $SHELL -l\n```\n\n## rbenvが使える事を確認\n\n```bash\n$ rbenv --version\n```\n\n## anyenvでインストールしたenvの確認\n\n```bash\n$ anyenv local -l\nrbenv: no local version configured for this directory\n```\n\n## envをアンインストール\n\n```bash\n$ anyenv uninstall rbenv\nrbenvが使えなくなる\n$ rbenv\nanyenv: env `rbenv' not installed\n```\n","slug":"anyenv","published":1,"updated":"2020-02-09T16:02:36.744Z","_id":"ck6ku49pt00008lvq1w2onfmu","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>LinuxMint19 Mate</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"anyenvをインストール\"><a href=\"#anyenvをインストール\" class=\"headerlink\" title=\"anyenvをインストール\"></a>anyenvをインストール</h2><h3 id=\"anyenvをclone\"><a href=\"#anyenvをclone\" class=\"headerlink\" title=\"anyenvをclone\"></a>anyenvをclone</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/riywo/anyenv ~/.anyenv</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"パスを通す\"><a href=\"#パスを通す\" class=\"headerlink\" title=\"パスを通す\"></a>パスを通す</h3><p>ターミナル起動時にanyenvのパスを通す設定を書く</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'PATH=$&#123;PATH&#125;:$&#123;HOME&#125;/.anyenv/bin'</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'eval \"$(anyenv init -)\"'</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">anyenv用のインストールフォルダを作成する</span><br><span class=\"line\">一度だけ実行する必要がある</span><br><span class=\"line\">$ anyenv install --init</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"インストール出来るenvを確認\"><a href=\"#インストール出来るenvを確認\" class=\"headerlink\" title=\"インストール出来るenvを確認\"></a>インストール出来るenvを確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv install -l</span><br><span class=\"line\">  Renv</span><br><span class=\"line\">  crenv</span><br><span class=\"line\">  denv</span><br><span class=\"line\">  erlenv</span><br><span class=\"line\">  exenv</span><br><span class=\"line\">  goenv</span><br><span class=\"line\">  hsenv</span><br><span class=\"line\">  jenv</span><br><span class=\"line\">  luaenv</span><br><span class=\"line\">  nodenv</span><br><span class=\"line\">  phpenv</span><br><span class=\"line\">  plenv</span><br><span class=\"line\">  pyenv</span><br><span class=\"line\">  rbenv</span><br><span class=\"line\">  sbtenv</span><br><span class=\"line\">  scalaenv</span><br><span class=\"line\">  swiftenv</span><br><span class=\"line\">  tfenv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"好きなenvをインストール\"><a href=\"#好きなenvをインストール\" class=\"headerlink\" title=\"好きなenvをインストール\"></a>好きなenvをインストール</h2><p>今回はrbenvをインストールします</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv install rbenv</span><br><span class=\"line\">インストール後、シェルを再起動させる必要がある様なので以下実行</span><br><span class=\"line\">$ <span class=\"built_in\">exec</span> <span class=\"variable\">$SHELL</span> -l</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"rbenvが使える事を確認\"><a href=\"#rbenvが使える事を確認\" class=\"headerlink\" title=\"rbenvが使える事を確認\"></a>rbenvが使える事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rbenv --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"anyenvでインストールしたenvの確認\"><a href=\"#anyenvでインストールしたenvの確認\" class=\"headerlink\" title=\"anyenvでインストールしたenvの確認\"></a>anyenvでインストールしたenvの確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv <span class=\"built_in\">local</span> -l</span><br><span class=\"line\">rbenv: no <span class=\"built_in\">local</span> version configured <span class=\"keyword\">for</span> this directory</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"envをアンインストール\"><a href=\"#envをアンインストール\" class=\"headerlink\" title=\"envをアンインストール\"></a>envをアンインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv uninstall rbenv</span><br><span class=\"line\">rbenvが使えなくなる</span><br><span class=\"line\">$ rbenv</span><br><span class=\"line\">anyenv: env `rbenv<span class=\"string\">' not installed</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>LinuxMint19 Mate</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"anyenvをインストール\"><a href=\"#anyenvをインストール\" class=\"headerlink\" title=\"anyenvをインストール\"></a>anyenvをインストール</h2><h3 id=\"anyenvをclone\"><a href=\"#anyenvをclone\" class=\"headerlink\" title=\"anyenvをclone\"></a>anyenvをclone</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/riywo/anyenv ~/.anyenv</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"パスを通す\"><a href=\"#パスを通す\" class=\"headerlink\" title=\"パスを通す\"></a>パスを通す</h3><p>ターミナル起動時にanyenvのパスを通す設定を書く</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'PATH=$&#123;PATH&#125;:$&#123;HOME&#125;/.anyenv/bin'</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'eval \"$(anyenv init -)\"'</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\">anyenv用のインストールフォルダを作成する</span><br><span class=\"line\">一度だけ実行する必要がある</span><br><span class=\"line\">$ anyenv install --init</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"インストール出来るenvを確認\"><a href=\"#インストール出来るenvを確認\" class=\"headerlink\" title=\"インストール出来るenvを確認\"></a>インストール出来るenvを確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv install -l</span><br><span class=\"line\">  Renv</span><br><span class=\"line\">  crenv</span><br><span class=\"line\">  denv</span><br><span class=\"line\">  erlenv</span><br><span class=\"line\">  exenv</span><br><span class=\"line\">  goenv</span><br><span class=\"line\">  hsenv</span><br><span class=\"line\">  jenv</span><br><span class=\"line\">  luaenv</span><br><span class=\"line\">  nodenv</span><br><span class=\"line\">  phpenv</span><br><span class=\"line\">  plenv</span><br><span class=\"line\">  pyenv</span><br><span class=\"line\">  rbenv</span><br><span class=\"line\">  sbtenv</span><br><span class=\"line\">  scalaenv</span><br><span class=\"line\">  swiftenv</span><br><span class=\"line\">  tfenv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"好きなenvをインストール\"><a href=\"#好きなenvをインストール\" class=\"headerlink\" title=\"好きなenvをインストール\"></a>好きなenvをインストール</h2><p>今回はrbenvをインストールします</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv install rbenv</span><br><span class=\"line\">インストール後、シェルを再起動させる必要がある様なので以下実行</span><br><span class=\"line\">$ <span class=\"built_in\">exec</span> <span class=\"variable\">$SHELL</span> -l</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"rbenvが使える事を確認\"><a href=\"#rbenvが使える事を確認\" class=\"headerlink\" title=\"rbenvが使える事を確認\"></a>rbenvが使える事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rbenv --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"anyenvでインストールしたenvの確認\"><a href=\"#anyenvでインストールしたenvの確認\" class=\"headerlink\" title=\"anyenvでインストールしたenvの確認\"></a>anyenvでインストールしたenvの確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv <span class=\"built_in\">local</span> -l</span><br><span class=\"line\">rbenv: no <span class=\"built_in\">local</span> version configured <span class=\"keyword\">for</span> this directory</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"envをアンインストール\"><a href=\"#envをアンインストール\" class=\"headerlink\" title=\"envをアンインストール\"></a>envをアンインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ anyenv uninstall rbenv</span><br><span class=\"line\">rbenvが使えなくなる</span><br><span class=\"line\">$ rbenv</span><br><span class=\"line\">anyenv: env `rbenv<span class=\"string\">' not installed</span></span><br></pre></td></tr></table></figure>\n\n"},{"title":"GitHubに公開鍵を追加","date":"2019-10-20T03:42:45.000Z","_content":"\n# 前提環境\n\n- Ubuntu\n\n# GitHubに公開鍵を追加する理由\n\n- sshを使ってリモートリポジトリの操作を出来る様になる\n- GitHub上にあるリポジトリをsshで操作する様に作られた手順、ツールが沢山ある\n\n> **注意**\n> sshを使わなくてもhttpで操作する事が可能\n> ただし、その場合はGitHubアカウントのパスワード入力が多々必要になる\n\n# 手順\n\n## 秘密鍵・公開鍵を作成する\n\n```bash\n$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): sakkuntyo-mint #鍵の名前です、今回はLinuxMint用に作成したためこの名前\nEnter passphrase (empty for no passphrase): #パスワード、無くても良い\nEnter same passphrase again: #パスワードの再確認\nYour identification has been saved in sakkuntyo-mint.\nYour public key has been saved in sakkuntyo-mint.pub.\nThe key fingerprint is:\nSHA256:7XG5j/GRtAxIs3/dkUxVIZDrcyG+6g7LVxqvNVK1bEg root@DESKTOP-2QSQU2N\nThe key's randomart image is:\n+---[RSA 2048]----+\n|           .o. .=|\n|           .  . .|\n|          oE.. . |\n|         o.*+o+ .|\n|        S Bo=+o+ |\n|         o.O.* +o|\n|       . .*oB * o|\n|      . oooo.* . |\n|       o+=o . o  |\n+----[SHA256]-----+\n```\n\n## 鍵ファイルが出来た事を確認する\n\n```bash\n$ ls\nsakkuntyo-mint sakkuntyo-mint.pub\n```\n\n.pubが付いているのが公開鍵\nついていないのが秘密鍵\n\n## GitHubに配置する\n\n### github.comのsettingsを開く\n\n![github-settings](/images/github-settings.png)\n![github-settings2](/images/github-settings2.png)\n\n### 「SHS and GPG keys」を開き、公開鍵の名前と公開鍵の内容を登録\n\nTitleは何でも大丈夫\n\n![github-settings](/images/github-settings-keys.png)\n![github-settings](/images/github-settings-keys2.png)\n\nこれで公開鍵が登録されました\n\n## sshクライアントにgitの設定を追加\n\n~/.ssh/configを編集し、以下の4行を追加\n\n```\nHost git\n  hostname github.com\n  user git\n  identityfile ~/.ssh/sakkuntyo-mint #秘密鍵のパス\n```\n\n秘密鍵をconfigで指定した場所に置きなおす\n\n```bash\n$ mv sakkuntyo-mint ~/.ssh/\n```\n秘密鍵の権限を自分だけが読める様に変更\n\n```bash\n$ chmod 0600 ~/.ssh/sakkuntyo-mint\n```\n\n## プライベートリポジトリをcloneしてみる\n\nプライベートリポジトリをhttpでcloneしようとするとパスワードが求められますが\nsshを使ってcloneした場合にはパスワードは求められなくなります\n\n```bash\n$ git clone git:sakkuntyo/private-repo\n```\n","source":"_posts/github-addkey.md","raw":"---\ntitle: GitHubに公開鍵を追加\ndate: 2019-10-20 12:42:45\ntags: [GitHub]\n---\n\n# 前提環境\n\n- Ubuntu\n\n# GitHubに公開鍵を追加する理由\n\n- sshを使ってリモートリポジトリの操作を出来る様になる\n- GitHub上にあるリポジトリをsshで操作する様に作られた手順、ツールが沢山ある\n\n> **注意**\n> sshを使わなくてもhttpで操作する事が可能\n> ただし、その場合はGitHubアカウントのパスワード入力が多々必要になる\n\n# 手順\n\n## 秘密鍵・公開鍵を作成する\n\n```bash\n$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): sakkuntyo-mint #鍵の名前です、今回はLinuxMint用に作成したためこの名前\nEnter passphrase (empty for no passphrase): #パスワード、無くても良い\nEnter same passphrase again: #パスワードの再確認\nYour identification has been saved in sakkuntyo-mint.\nYour public key has been saved in sakkuntyo-mint.pub.\nThe key fingerprint is:\nSHA256:7XG5j/GRtAxIs3/dkUxVIZDrcyG+6g7LVxqvNVK1bEg root@DESKTOP-2QSQU2N\nThe key's randomart image is:\n+---[RSA 2048]----+\n|           .o. .=|\n|           .  . .|\n|          oE.. . |\n|         o.*+o+ .|\n|        S Bo=+o+ |\n|         o.O.* +o|\n|       . .*oB * o|\n|      . oooo.* . |\n|       o+=o . o  |\n+----[SHA256]-----+\n```\n\n## 鍵ファイルが出来た事を確認する\n\n```bash\n$ ls\nsakkuntyo-mint sakkuntyo-mint.pub\n```\n\n.pubが付いているのが公開鍵\nついていないのが秘密鍵\n\n## GitHubに配置する\n\n### github.comのsettingsを開く\n\n![github-settings](/images/github-settings.png)\n![github-settings2](/images/github-settings2.png)\n\n### 「SHS and GPG keys」を開き、公開鍵の名前と公開鍵の内容を登録\n\nTitleは何でも大丈夫\n\n![github-settings](/images/github-settings-keys.png)\n![github-settings](/images/github-settings-keys2.png)\n\nこれで公開鍵が登録されました\n\n## sshクライアントにgitの設定を追加\n\n~/.ssh/configを編集し、以下の4行を追加\n\n```\nHost git\n  hostname github.com\n  user git\n  identityfile ~/.ssh/sakkuntyo-mint #秘密鍵のパス\n```\n\n秘密鍵をconfigで指定した場所に置きなおす\n\n```bash\n$ mv sakkuntyo-mint ~/.ssh/\n```\n秘密鍵の権限を自分だけが読める様に変更\n\n```bash\n$ chmod 0600 ~/.ssh/sakkuntyo-mint\n```\n\n## プライベートリポジトリをcloneしてみる\n\nプライベートリポジトリをhttpでcloneしようとするとパスワードが求められますが\nsshを使ってcloneした場合にはパスワードは求められなくなります\n\n```bash\n$ git clone git:sakkuntyo/private-repo\n```\n","slug":"github-addkey","published":1,"updated":"2020-02-09T16:05:15.368Z","_id":"ck6ku49q200018lvqyz99qb5e","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前提環境\"><a href=\"#前提環境\" class=\"headerlink\" title=\"前提環境\"></a>前提環境</h1><ul>\n<li>Ubuntu</li>\n</ul>\n<h1 id=\"GitHubに公開鍵を追加する理由\"><a href=\"#GitHubに公開鍵を追加する理由\" class=\"headerlink\" title=\"GitHubに公開鍵を追加する理由\"></a>GitHubに公開鍵を追加する理由</h1><ul>\n<li>sshを使ってリモートリポジトリの操作を出来る様になる</li>\n<li>GitHub上にあるリポジトリをsshで操作する様に作られた手順、ツールが沢山ある</li>\n</ul>\n<blockquote>\n<p><strong>注意</strong><br>sshを使わなくてもhttpで操作する事が可能<br>ただし、その場合はGitHubアカウントのパスワード入力が多々必要になる</p>\n</blockquote>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"秘密鍵・公開鍵を作成する\"><a href=\"#秘密鍵・公開鍵を作成する\" class=\"headerlink\" title=\"秘密鍵・公開鍵を作成する\"></a>秘密鍵・公開鍵を作成する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/root/.ssh/id_rsa): sakkuntyo-mint <span class=\"comment\">#鍵の名前です、今回はLinuxMint用に作成したためこの名前</span></span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase): <span class=\"comment\">#パスワード、無くても良い</span></span><br><span class=\"line\">Enter same passphrase again: <span class=\"comment\">#パスワードの再確認</span></span><br><span class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> sakkuntyo-mint.</span><br><span class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> sakkuntyo-mint.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:7XG5j/GRtAxIs3/dkUxVIZDrcyG+6g7LVxqvNVK1bEg root@DESKTOP-2QSQU2N</span><br><span class=\"line\">The key<span class=\"string\">'s randomart image is:</span></span><br><span class=\"line\"><span class=\"string\">+---[RSA 2048]----+</span></span><br><span class=\"line\"><span class=\"string\">|           .o. .=|</span></span><br><span class=\"line\"><span class=\"string\">|           .  . .|</span></span><br><span class=\"line\"><span class=\"string\">|          oE.. . |</span></span><br><span class=\"line\"><span class=\"string\">|         o.*+o+ .|</span></span><br><span class=\"line\"><span class=\"string\">|        S Bo=+o+ |</span></span><br><span class=\"line\"><span class=\"string\">|         o.O.* +o|</span></span><br><span class=\"line\"><span class=\"string\">|       . .*oB * o|</span></span><br><span class=\"line\"><span class=\"string\">|      . oooo.* . |</span></span><br><span class=\"line\"><span class=\"string\">|       o+=o . o  |</span></span><br><span class=\"line\"><span class=\"string\">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"鍵ファイルが出来た事を確認する\"><a href=\"#鍵ファイルが出来た事を確認する\" class=\"headerlink\" title=\"鍵ファイルが出来た事を確認する\"></a>鍵ファイルが出来た事を確認する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls</span><br><span class=\"line\">sakkuntyo-mint sakkuntyo-mint.pub</span><br></pre></td></tr></table></figure>\n\n<p>.pubが付いているのが公開鍵<br>ついていないのが秘密鍵</p>\n<h2 id=\"GitHubに配置する\"><a href=\"#GitHubに配置する\" class=\"headerlink\" title=\"GitHubに配置する\"></a>GitHubに配置する</h2><h3 id=\"github-comのsettingsを開く\"><a href=\"#github-comのsettingsを開く\" class=\"headerlink\" title=\"github.comのsettingsを開く\"></a>github.comのsettingsを開く</h3><p><img src=\"/images/github-settings.png\" alt=\"github-settings\"><br><img src=\"/images/github-settings2.png\" alt=\"github-settings2\"></p>\n<h3 id=\"「SHS-and-GPG-keys」を開き、公開鍵の名前と公開鍵の内容を登録\"><a href=\"#「SHS-and-GPG-keys」を開き、公開鍵の名前と公開鍵の内容を登録\" class=\"headerlink\" title=\"「SHS and GPG keys」を開き、公開鍵の名前と公開鍵の内容を登録\"></a>「SHS and GPG keys」を開き、公開鍵の名前と公開鍵の内容を登録</h3><p>Titleは何でも大丈夫</p>\n<p><img src=\"/images/github-settings-keys.png\" alt=\"github-settings\"><br><img src=\"/images/github-settings-keys2.png\" alt=\"github-settings\"></p>\n<p>これで公開鍵が登録されました</p>\n<h2 id=\"sshクライアントにgitの設定を追加\"><a href=\"#sshクライアントにgitの設定を追加\" class=\"headerlink\" title=\"sshクライアントにgitの設定を追加\"></a>sshクライアントにgitの設定を追加</h2><p>~/.ssh/configを編集し、以下の4行を追加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host git</span><br><span class=\"line\">  hostname github.com</span><br><span class=\"line\">  user git</span><br><span class=\"line\">  identityfile ~/.ssh/sakkuntyo-mint #秘密鍵のパス</span><br></pre></td></tr></table></figure>\n\n<p>秘密鍵をconfigで指定した場所に置きなおす</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mv sakkuntyo-mint ~/.ssh/</span><br></pre></td></tr></table></figure>\n\n<p>秘密鍵の権限を自分だけが読める様に変更</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ chmod 0600 ~/.ssh/sakkuntyo-mint</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"プライベートリポジトリをcloneしてみる\"><a href=\"#プライベートリポジトリをcloneしてみる\" class=\"headerlink\" title=\"プライベートリポジトリをcloneしてみる\"></a>プライベートリポジトリをcloneしてみる</h2><p>プライベートリポジトリをhttpでcloneしようとするとパスワードが求められますが<br>sshを使ってcloneした場合にはパスワードは求められなくなります</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git:sakkuntyo/private-repo</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前提環境\"><a href=\"#前提環境\" class=\"headerlink\" title=\"前提環境\"></a>前提環境</h1><ul>\n<li>Ubuntu</li>\n</ul>\n<h1 id=\"GitHubに公開鍵を追加する理由\"><a href=\"#GitHubに公開鍵を追加する理由\" class=\"headerlink\" title=\"GitHubに公開鍵を追加する理由\"></a>GitHubに公開鍵を追加する理由</h1><ul>\n<li>sshを使ってリモートリポジトリの操作を出来る様になる</li>\n<li>GitHub上にあるリポジトリをsshで操作する様に作られた手順、ツールが沢山ある</li>\n</ul>\n<blockquote>\n<p><strong>注意</strong><br>sshを使わなくてもhttpで操作する事が可能<br>ただし、その場合はGitHubアカウントのパスワード入力が多々必要になる</p>\n</blockquote>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"秘密鍵・公開鍵を作成する\"><a href=\"#秘密鍵・公開鍵を作成する\" class=\"headerlink\" title=\"秘密鍵・公開鍵を作成する\"></a>秘密鍵・公開鍵を作成する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/root/.ssh/id_rsa): sakkuntyo-mint <span class=\"comment\">#鍵の名前です、今回はLinuxMint用に作成したためこの名前</span></span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase): <span class=\"comment\">#パスワード、無くても良い</span></span><br><span class=\"line\">Enter same passphrase again: <span class=\"comment\">#パスワードの再確認</span></span><br><span class=\"line\">Your identification has been saved <span class=\"keyword\">in</span> sakkuntyo-mint.</span><br><span class=\"line\">Your public key has been saved <span class=\"keyword\">in</span> sakkuntyo-mint.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:7XG5j/GRtAxIs3/dkUxVIZDrcyG+6g7LVxqvNVK1bEg root@DESKTOP-2QSQU2N</span><br><span class=\"line\">The key<span class=\"string\">'s randomart image is:</span></span><br><span class=\"line\"><span class=\"string\">+---[RSA 2048]----+</span></span><br><span class=\"line\"><span class=\"string\">|           .o. .=|</span></span><br><span class=\"line\"><span class=\"string\">|           .  . .|</span></span><br><span class=\"line\"><span class=\"string\">|          oE.. . |</span></span><br><span class=\"line\"><span class=\"string\">|         o.*+o+ .|</span></span><br><span class=\"line\"><span class=\"string\">|        S Bo=+o+ |</span></span><br><span class=\"line\"><span class=\"string\">|         o.O.* +o|</span></span><br><span class=\"line\"><span class=\"string\">|       . .*oB * o|</span></span><br><span class=\"line\"><span class=\"string\">|      . oooo.* . |</span></span><br><span class=\"line\"><span class=\"string\">|       o+=o . o  |</span></span><br><span class=\"line\"><span class=\"string\">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"鍵ファイルが出来た事を確認する\"><a href=\"#鍵ファイルが出来た事を確認する\" class=\"headerlink\" title=\"鍵ファイルが出来た事を確認する\"></a>鍵ファイルが出来た事を確認する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls</span><br><span class=\"line\">sakkuntyo-mint sakkuntyo-mint.pub</span><br></pre></td></tr></table></figure>\n\n<p>.pubが付いているのが公開鍵<br>ついていないのが秘密鍵</p>\n<h2 id=\"GitHubに配置する\"><a href=\"#GitHubに配置する\" class=\"headerlink\" title=\"GitHubに配置する\"></a>GitHubに配置する</h2><h3 id=\"github-comのsettingsを開く\"><a href=\"#github-comのsettingsを開く\" class=\"headerlink\" title=\"github.comのsettingsを開く\"></a>github.comのsettingsを開く</h3><p><img src=\"/images/github-settings.png\" alt=\"github-settings\"><br><img src=\"/images/github-settings2.png\" alt=\"github-settings2\"></p>\n<h3 id=\"「SHS-and-GPG-keys」を開き、公開鍵の名前と公開鍵の内容を登録\"><a href=\"#「SHS-and-GPG-keys」を開き、公開鍵の名前と公開鍵の内容を登録\" class=\"headerlink\" title=\"「SHS and GPG keys」を開き、公開鍵の名前と公開鍵の内容を登録\"></a>「SHS and GPG keys」を開き、公開鍵の名前と公開鍵の内容を登録</h3><p>Titleは何でも大丈夫</p>\n<p><img src=\"/images/github-settings-keys.png\" alt=\"github-settings\"><br><img src=\"/images/github-settings-keys2.png\" alt=\"github-settings\"></p>\n<p>これで公開鍵が登録されました</p>\n<h2 id=\"sshクライアントにgitの設定を追加\"><a href=\"#sshクライアントにgitの設定を追加\" class=\"headerlink\" title=\"sshクライアントにgitの設定を追加\"></a>sshクライアントにgitの設定を追加</h2><p>~/.ssh/configを編集し、以下の4行を追加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host git</span><br><span class=\"line\">  hostname github.com</span><br><span class=\"line\">  user git</span><br><span class=\"line\">  identityfile ~/.ssh/sakkuntyo-mint #秘密鍵のパス</span><br></pre></td></tr></table></figure>\n\n<p>秘密鍵をconfigで指定した場所に置きなおす</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mv sakkuntyo-mint ~/.ssh/</span><br></pre></td></tr></table></figure>\n\n<p>秘密鍵の権限を自分だけが読める様に変更</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ chmod 0600 ~/.ssh/sakkuntyo-mint</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"プライベートリポジトリをcloneしてみる\"><a href=\"#プライベートリポジトリをcloneしてみる\" class=\"headerlink\" title=\"プライベートリポジトリをcloneしてみる\"></a>プライベートリポジトリをcloneしてみる</h2><p>プライベートリポジトリをhttpでcloneしようとするとパスワードが求められますが<br>sshを使ってcloneした場合にはパスワードは求められなくなります</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git:sakkuntyo/private-repo</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"GitBashにgccをインストール","date":"2020-01-30T11:44:26.000Z","_content":"\ngo installしてたら「gcc.exe」が無いとビルドできないぞ！\nと言われたので、mingw64のバイナリから持ってくる方法を覚えました。\n\n# 前提\n\n- Windows10\n  - Git\n\n# 手順\n\n## Gitをインストール\n\nWindows向けのGitは[ここ](https://git-scm.com/download/win)からインストーラを入手できます。\n\n起動し、全て「はい」を選択したとして次の手順に進みます。\n\n## MinGW-w64のバイナリをダウンロード\n\n[ここ](https://sourceforge.net/projects/mingw-w64/files/External%20binary%20packages%20%28Win64%20hosted%29/)の下の方にあるx86_64-win32-sjljを選択しダウンロードします。\n\nこのファイルはダウンロードフォルダに置いておいてください。\n解凍するために、7zipをインストールします。\n\n## 7-zipのインストール\n\n[ここ](https://www.7-zip.org/)からダウンロードし、インストールします。\n\n## 解凍\n\nGitBashを管理者権限で開き、以下コマンドを実行して解凍します。\n\n```bash\n$ cd ~/Downloads\n前半は7z.exeのパス、xはeXtractのx、最後は7zipファイルのファイル名\n$ /c/Program\\ Files/7-Zip/7z.exe x x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\n7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21\n\nScanning the drive for archives:\n1 file, 52785774 bytes (51 MiB)\n\nExtracting archive: x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\n--\nPath = x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\nType = 7z\nPhysical Size = 52785774\nHeaders Size = 109370\nMethod = LZMA2:26 LZMA:20 BCJ2\nSolid = +\nBlocks = 2\n\nEverything is Ok\n\nFolders: 340\nFiles: 13669\nSize:       527855563\nCompressed: 52785774\n```\n\n解凍が終わると、またコマンドが打てる様になるため、mingw64フォルダが作成されている事を確認します。\n\n```bash\n$ ls\nmingw64  x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\n```\n\n## gccなどをGitのインストールディレクトリにコピー\n\nGitBashを管理者権限で開き、以下のコマンドを実行します。\n\n```bash\n解凍してできたmingw64フォルダ内のbinフォルダに移動\n$ cd ~/Downloads/mingw64/bin\ntarで既存のファイルに上書きはしないオプションを付けて、Gitのmingw64/binにコピー\n$ tar -cvf - . | tar -xvf - --keep-newer-files -C /c/Program\\ Files/Git/mingw64/bin/\n```\n\nこの後GitBashを起動し直すと、gccが使用出来る様になっています。\n","source":"_posts/git-mingw-gcc.md","raw":"---\nlayout: post\ntitle: GitBashにgccをインストール\ndate: 2020-01-30 20:44:26\ntags: [Git,GitBash,gcc,mingw]\n---\n\ngo installしてたら「gcc.exe」が無いとビルドできないぞ！\nと言われたので、mingw64のバイナリから持ってくる方法を覚えました。\n\n# 前提\n\n- Windows10\n  - Git\n\n# 手順\n\n## Gitをインストール\n\nWindows向けのGitは[ここ](https://git-scm.com/download/win)からインストーラを入手できます。\n\n起動し、全て「はい」を選択したとして次の手順に進みます。\n\n## MinGW-w64のバイナリをダウンロード\n\n[ここ](https://sourceforge.net/projects/mingw-w64/files/External%20binary%20packages%20%28Win64%20hosted%29/)の下の方にあるx86_64-win32-sjljを選択しダウンロードします。\n\nこのファイルはダウンロードフォルダに置いておいてください。\n解凍するために、7zipをインストールします。\n\n## 7-zipのインストール\n\n[ここ](https://www.7-zip.org/)からダウンロードし、インストールします。\n\n## 解凍\n\nGitBashを管理者権限で開き、以下コマンドを実行して解凍します。\n\n```bash\n$ cd ~/Downloads\n前半は7z.exeのパス、xはeXtractのx、最後は7zipファイルのファイル名\n$ /c/Program\\ Files/7-Zip/7z.exe x x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\n7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21\n\nScanning the drive for archives:\n1 file, 52785774 bytes (51 MiB)\n\nExtracting archive: x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\n--\nPath = x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\nType = 7z\nPhysical Size = 52785774\nHeaders Size = 109370\nMethod = LZMA2:26 LZMA:20 BCJ2\nSolid = +\nBlocks = 2\n\nEverything is Ok\n\nFolders: 340\nFiles: 13669\nSize:       527855563\nCompressed: 52785774\n```\n\n解凍が終わると、またコマンドが打てる様になるため、mingw64フォルダが作成されている事を確認します。\n\n```bash\n$ ls\nmingw64  x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z\n```\n\n## gccなどをGitのインストールディレクトリにコピー\n\nGitBashを管理者権限で開き、以下のコマンドを実行します。\n\n```bash\n解凍してできたmingw64フォルダ内のbinフォルダに移動\n$ cd ~/Downloads/mingw64/bin\ntarで既存のファイルに上書きはしないオプションを付けて、Gitのmingw64/binにコピー\n$ tar -cvf - . | tar -xvf - --keep-newer-files -C /c/Program\\ Files/Git/mingw64/bin/\n```\n\nこの後GitBashを起動し直すと、gccが使用出来る様になっています。\n","slug":"git-mingw-gcc","published":1,"updated":"2020-02-09T16:03:36.241Z","_id":"ck6ku49q600038lvqlhpigu98","comments":1,"photos":[],"link":"","content":"<p>go installしてたら「gcc.exe」が無いとビルドできないぞ！<br>と言われたので、mingw64のバイナリから持ってくる方法を覚えました。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><ul>\n<li>Windows10<ul>\n<li>Git</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Gitをインストール\"><a href=\"#Gitをインストール\" class=\"headerlink\" title=\"Gitをインストール\"></a>Gitをインストール</h2><p>Windows向けのGitは<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">ここ</a>からインストーラを入手できます。</p>\n<p>起動し、全て「はい」を選択したとして次の手順に進みます。</p>\n<h2 id=\"MinGW-w64のバイナリをダウンロード\"><a href=\"#MinGW-w64のバイナリをダウンロード\" class=\"headerlink\" title=\"MinGW-w64のバイナリをダウンロード\"></a>MinGW-w64のバイナリをダウンロード</h2><p><a href=\"https://sourceforge.net/projects/mingw-w64/files/External%20binary%20packages%20%28Win64%20hosted%29/\" target=\"_blank\" rel=\"noopener\">ここ</a>の下の方にあるx86_64-win32-sjljを選択しダウンロードします。</p>\n<p>このファイルはダウンロードフォルダに置いておいてください。<br>解凍するために、7zipをインストールします。</p>\n<h2 id=\"7-zipのインストール\"><a href=\"#7-zipのインストール\" class=\"headerlink\" title=\"7-zipのインストール\"></a>7-zipのインストール</h2><p><a href=\"https://www.7-zip.org/\" target=\"_blank\" rel=\"noopener\">ここ</a>からダウンロードし、インストールします。</p>\n<h2 id=\"解凍\"><a href=\"#解凍\" class=\"headerlink\" title=\"解凍\"></a>解凍</h2><p>GitBashを管理者権限で開き、以下コマンドを実行して解凍します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/Downloads</span><br><span class=\"line\">前半は7z.exeのパス、xはeXtractのx、最後は7zipファイルのファイル名</span><br><span class=\"line\">$ /c/Program\\ Files/7-Zip/7z.exe x x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br><span class=\"line\">7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21</span><br><span class=\"line\"></span><br><span class=\"line\">Scanning the drive <span class=\"keyword\">for</span> archives:</span><br><span class=\"line\">1 file, 52785774 bytes (51 MiB)</span><br><span class=\"line\"></span><br><span class=\"line\">Extracting archive: x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br><span class=\"line\">--</span><br><span class=\"line\">Path = x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br><span class=\"line\">Type = 7z</span><br><span class=\"line\">Physical Size = 52785774</span><br><span class=\"line\">Headers Size = 109370</span><br><span class=\"line\">Method = LZMA2:26 LZMA:20 BCJ2</span><br><span class=\"line\">Solid = +</span><br><span class=\"line\">Blocks = 2</span><br><span class=\"line\"></span><br><span class=\"line\">Everything is Ok</span><br><span class=\"line\"></span><br><span class=\"line\">Folders: 340</span><br><span class=\"line\">Files: 13669</span><br><span class=\"line\">Size:       527855563</span><br><span class=\"line\">Compressed: 52785774</span><br></pre></td></tr></table></figure>\n\n<p>解凍が終わると、またコマンドが打てる様になるため、mingw64フォルダが作成されている事を確認します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls</span><br><span class=\"line\">mingw64  x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"gccなどをGitのインストールディレクトリにコピー\"><a href=\"#gccなどをGitのインストールディレクトリにコピー\" class=\"headerlink\" title=\"gccなどをGitのインストールディレクトリにコピー\"></a>gccなどをGitのインストールディレクトリにコピー</h2><p>GitBashを管理者権限で開き、以下のコマンドを実行します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解凍してできたmingw64フォルダ内のbinフォルダに移動</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/Downloads/mingw64/bin</span><br><span class=\"line\">tarで既存のファイルに上書きはしないオプションを付けて、Gitのmingw64/binにコピー</span><br><span class=\"line\">$ tar -cvf - . | tar -xvf - --keep-newer-files -C /c/Program\\ Files/Git/mingw64/bin/</span><br></pre></td></tr></table></figure>\n\n<p>この後GitBashを起動し直すと、gccが使用出来る様になっています。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>go installしてたら「gcc.exe」が無いとビルドできないぞ！<br>と言われたので、mingw64のバイナリから持ってくる方法を覚えました。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><ul>\n<li>Windows10<ul>\n<li>Git</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Gitをインストール\"><a href=\"#Gitをインストール\" class=\"headerlink\" title=\"Gitをインストール\"></a>Gitをインストール</h2><p>Windows向けのGitは<a href=\"https://git-scm.com/download/win\" target=\"_blank\" rel=\"noopener\">ここ</a>からインストーラを入手できます。</p>\n<p>起動し、全て「はい」を選択したとして次の手順に進みます。</p>\n<h2 id=\"MinGW-w64のバイナリをダウンロード\"><a href=\"#MinGW-w64のバイナリをダウンロード\" class=\"headerlink\" title=\"MinGW-w64のバイナリをダウンロード\"></a>MinGW-w64のバイナリをダウンロード</h2><p><a href=\"https://sourceforge.net/projects/mingw-w64/files/External%20binary%20packages%20%28Win64%20hosted%29/\" target=\"_blank\" rel=\"noopener\">ここ</a>の下の方にあるx86_64-win32-sjljを選択しダウンロードします。</p>\n<p>このファイルはダウンロードフォルダに置いておいてください。<br>解凍するために、7zipをインストールします。</p>\n<h2 id=\"7-zipのインストール\"><a href=\"#7-zipのインストール\" class=\"headerlink\" title=\"7-zipのインストール\"></a>7-zipのインストール</h2><p><a href=\"https://www.7-zip.org/\" target=\"_blank\" rel=\"noopener\">ここ</a>からダウンロードし、インストールします。</p>\n<h2 id=\"解凍\"><a href=\"#解凍\" class=\"headerlink\" title=\"解凍\"></a>解凍</h2><p>GitBashを管理者権限で開き、以下コマンドを実行して解凍します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/Downloads</span><br><span class=\"line\">前半は7z.exeのパス、xはeXtractのx、最後は7zipファイルのファイル名</span><br><span class=\"line\">$ /c/Program\\ Files/7-Zip/7z.exe x x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br><span class=\"line\">7-Zip 19.00 (x64) : Copyright (c) 1999-2018 Igor Pavlov : 2019-02-21</span><br><span class=\"line\"></span><br><span class=\"line\">Scanning the drive <span class=\"keyword\">for</span> archives:</span><br><span class=\"line\">1 file, 52785774 bytes (51 MiB)</span><br><span class=\"line\"></span><br><span class=\"line\">Extracting archive: x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br><span class=\"line\">--</span><br><span class=\"line\">Path = x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br><span class=\"line\">Type = 7z</span><br><span class=\"line\">Physical Size = 52785774</span><br><span class=\"line\">Headers Size = 109370</span><br><span class=\"line\">Method = LZMA2:26 LZMA:20 BCJ2</span><br><span class=\"line\">Solid = +</span><br><span class=\"line\">Blocks = 2</span><br><span class=\"line\"></span><br><span class=\"line\">Everything is Ok</span><br><span class=\"line\"></span><br><span class=\"line\">Folders: 340</span><br><span class=\"line\">Files: 13669</span><br><span class=\"line\">Size:       527855563</span><br><span class=\"line\">Compressed: 52785774</span><br></pre></td></tr></table></figure>\n\n<p>解凍が終わると、またコマンドが打てる様になるため、mingw64フォルダが作成されている事を確認します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls</span><br><span class=\"line\">mingw64  x86_64-8.1.0-release-posix-sjlj-rt_v6-rev0.7z</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"gccなどをGitのインストールディレクトリにコピー\"><a href=\"#gccなどをGitのインストールディレクトリにコピー\" class=\"headerlink\" title=\"gccなどをGitのインストールディレクトリにコピー\"></a>gccなどをGitのインストールディレクトリにコピー</h2><p>GitBashを管理者権限で開き、以下のコマンドを実行します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解凍してできたmingw64フォルダ内のbinフォルダに移動</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/Downloads/mingw64/bin</span><br><span class=\"line\">tarで既存のファイルに上書きはしないオプションを付けて、Gitのmingw64/binにコピー</span><br><span class=\"line\">$ tar -cvf - . | tar -xvf - --keep-newer-files -C /c/Program\\ Files/Git/mingw64/bin/</span><br></pre></td></tr></table></figure>\n\n<p>この後GitBashを起動し直すと、gccが使用出来る様になっています。</p>\n"},{"title":"Gitの使い方","date":"2019-10-12T11:38:05.000Z","_content":"\n# 必要な基礎知識\n\n- リポジトリ\n  - リモートリポジトリ\n    - 皆で操作するために作られる\n  - ローカルリポジトリ\n    - 自分が操作するために作られる\n- ブランチ\n  - リポジトリに含まれる機能\n  - デフォルトでmasterブランチが作られる\n  - ブランチ同士を突き合わせて差分を見てからマージを行う\n- ワーキングツリー\n  - 現在のファイルの状態\n- インデックス\n  - 現在のファイルの管理状態\n  - git add \"ファイル名\" と操作を行うと、指定したファイルがステージング状態(コミットに含まれる状態)となる\n  - インデックスをリセットしたい場合には、git resetする\n  - 状態\n    - ステージング\n      - 次のコミットに含まれる状態\n    - 非ステージング\n      - 次のコミットに含まれない状態\n    - 非トラッキング\n      - ブランチ内で全く管理していない状態\n- コミット\n  - ファイルの状態を確定する操作\n  - ログを見たり、以前の状態に戻す際に必要となる\n- プッシュ\n  - ローカルで変更されたブランチをリモートリポジトリに反映させる際に行う操作\n\n# リポジトリ作成からプッシュまでの手順\n\n基本的にはコマンドを使うことは無いかと思いますが、ここではコマンド操作による説明を行います。\n\n## 1.リモートリポジトリを作成する\n\n```cmd\n> mkdir \"プロジェクト名\"\n> cd \"プロジェクト名\"\n> git init --bare\nInitialized empty Git repository in /path/プロジェクト名/\n```\n\n## 2.リモートリポジトリを複製し、ローカルリポジトリを作成する\n\n```cmd\n> mkdir work\n> cd work\n> git clone \"1で作成したフォルダのパス\"\n```\n\n## 3.ブランチを分ける\n\n```cmd\n> git checkout -b \"ブランチ名\"\n```\n\n> **ポイント**\n> checkout -bでは、ブランチの作成と切替を同時に行います。\n\n## 4.現在のブランチを確認する\n\n```cmd\n> git branch -a -vvv\n```\n\n> **ポイント1** \n> *がついているブランチが現在選択中のブランチとなります。</p>\n\n> **ポイント2** \n> remotesで始まる名前の物は、リモートリポジトリにあるブランチとなります。\n\n> **注意** \n> masterブランチに１つもコミットが無い状態での\n> ブランチ作成、切替を行った状態では、何も表示されない様です。\n\n## 5.変更\n\nファイルを修正、追加するなどして変更を加えます\n\n## 6.git add前に状態を確認\n\nUntracked files(非トラッキング)となっている事がわかります。\n\n```cmd\n> git status\n```\n\n## 7.git addする\n\n```cmd\n> git add \"\"今回新規作成されたファイル\"\n```\n\n## 8.ステージング後に状態を確認\n\nChanges to be commited(ステージング)に含まれている事がわかります。\n\n```cmd\n> git status\n```\n\n## 9.変更を確定する\n\n```cmd\n> git commit -m \"ログに残すメッセージ\"\n```\n\n## 10.ログを確認する\n\n```cmd\n> git log\n```\n\n## 11.プッシュする\n\n```cmd\n> git push origin HEAD\n```\n\n> **ポイント**\n> originとは、clone時に自動で作成されるリモートリポジトリのURLの名前となります。\n> HEADとは、現在のブランチの最新コミットの状態を指します。\n> この二つを組み合わせる事で、ブランチ名を指定する事なく、プッシュする事が可能です。\n","source":"_posts/git-howto-simple.md","raw":"---\ntitle: Gitの使い方\ndate: 2019-10-12 20:38:05\ntags: [Git]\n---\n\n# 必要な基礎知識\n\n- リポジトリ\n  - リモートリポジトリ\n    - 皆で操作するために作られる\n  - ローカルリポジトリ\n    - 自分が操作するために作られる\n- ブランチ\n  - リポジトリに含まれる機能\n  - デフォルトでmasterブランチが作られる\n  - ブランチ同士を突き合わせて差分を見てからマージを行う\n- ワーキングツリー\n  - 現在のファイルの状態\n- インデックス\n  - 現在のファイルの管理状態\n  - git add \"ファイル名\" と操作を行うと、指定したファイルがステージング状態(コミットに含まれる状態)となる\n  - インデックスをリセットしたい場合には、git resetする\n  - 状態\n    - ステージング\n      - 次のコミットに含まれる状態\n    - 非ステージング\n      - 次のコミットに含まれない状態\n    - 非トラッキング\n      - ブランチ内で全く管理していない状態\n- コミット\n  - ファイルの状態を確定する操作\n  - ログを見たり、以前の状態に戻す際に必要となる\n- プッシュ\n  - ローカルで変更されたブランチをリモートリポジトリに反映させる際に行う操作\n\n# リポジトリ作成からプッシュまでの手順\n\n基本的にはコマンドを使うことは無いかと思いますが、ここではコマンド操作による説明を行います。\n\n## 1.リモートリポジトリを作成する\n\n```cmd\n> mkdir \"プロジェクト名\"\n> cd \"プロジェクト名\"\n> git init --bare\nInitialized empty Git repository in /path/プロジェクト名/\n```\n\n## 2.リモートリポジトリを複製し、ローカルリポジトリを作成する\n\n```cmd\n> mkdir work\n> cd work\n> git clone \"1で作成したフォルダのパス\"\n```\n\n## 3.ブランチを分ける\n\n```cmd\n> git checkout -b \"ブランチ名\"\n```\n\n> **ポイント**\n> checkout -bでは、ブランチの作成と切替を同時に行います。\n\n## 4.現在のブランチを確認する\n\n```cmd\n> git branch -a -vvv\n```\n\n> **ポイント1** \n> *がついているブランチが現在選択中のブランチとなります。</p>\n\n> **ポイント2** \n> remotesで始まる名前の物は、リモートリポジトリにあるブランチとなります。\n\n> **注意** \n> masterブランチに１つもコミットが無い状態での\n> ブランチ作成、切替を行った状態では、何も表示されない様です。\n\n## 5.変更\n\nファイルを修正、追加するなどして変更を加えます\n\n## 6.git add前に状態を確認\n\nUntracked files(非トラッキング)となっている事がわかります。\n\n```cmd\n> git status\n```\n\n## 7.git addする\n\n```cmd\n> git add \"\"今回新規作成されたファイル\"\n```\n\n## 8.ステージング後に状態を確認\n\nChanges to be commited(ステージング)に含まれている事がわかります。\n\n```cmd\n> git status\n```\n\n## 9.変更を確定する\n\n```cmd\n> git commit -m \"ログに残すメッセージ\"\n```\n\n## 10.ログを確認する\n\n```cmd\n> git log\n```\n\n## 11.プッシュする\n\n```cmd\n> git push origin HEAD\n```\n\n> **ポイント**\n> originとは、clone時に自動で作成されるリモートリポジトリのURLの名前となります。\n> HEADとは、現在のブランチの最新コミットの状態を指します。\n> この二つを組み合わせる事で、ブランチ名を指定する事なく、プッシュする事が可能です。\n","slug":"git-howto-simple","published":1,"updated":"2019-11-17T14:34:52.484Z","_id":"ck6ku49q700048lvqm6k12ysj","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"必要な基礎知識\"><a href=\"#必要な基礎知識\" class=\"headerlink\" title=\"必要な基礎知識\"></a>必要な基礎知識</h1><ul>\n<li>リポジトリ<ul>\n<li>リモートリポジトリ<ul>\n<li>皆で操作するために作られる</li>\n</ul>\n</li>\n<li>ローカルリポジトリ<ul>\n<li>自分が操作するために作られる</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ブランチ<ul>\n<li>リポジトリに含まれる機能</li>\n<li>デフォルトでmasterブランチが作られる</li>\n<li>ブランチ同士を突き合わせて差分を見てからマージを行う</li>\n</ul>\n</li>\n<li>ワーキングツリー<ul>\n<li>現在のファイルの状態</li>\n</ul>\n</li>\n<li>インデックス<ul>\n<li>現在のファイルの管理状態</li>\n<li>git add “ファイル名” と操作を行うと、指定したファイルがステージング状態(コミットに含まれる状態)となる</li>\n<li>インデックスをリセットしたい場合には、git resetする</li>\n<li>状態<ul>\n<li>ステージング<ul>\n<li>次のコミットに含まれる状態</li>\n</ul>\n</li>\n<li>非ステージング<ul>\n<li>次のコミットに含まれない状態</li>\n</ul>\n</li>\n<li>非トラッキング<ul>\n<li>ブランチ内で全く管理していない状態</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>コミット<ul>\n<li>ファイルの状態を確定する操作</li>\n<li>ログを見たり、以前の状態に戻す際に必要となる</li>\n</ul>\n</li>\n<li>プッシュ<ul>\n<li>ローカルで変更されたブランチをリモートリポジトリに反映させる際に行う操作</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"リポジトリ作成からプッシュまでの手順\"><a href=\"#リポジトリ作成からプッシュまでの手順\" class=\"headerlink\" title=\"リポジトリ作成からプッシュまでの手順\"></a>リポジトリ作成からプッシュまでの手順</h1><p>基本的にはコマンドを使うことは無いかと思いますが、ここではコマンド操作による説明を行います。</p>\n<h2 id=\"1-リモートリポジトリを作成する\"><a href=\"#1-リモートリポジトリを作成する\" class=\"headerlink\" title=\"1.リモートリポジトリを作成する\"></a>1.リモートリポジトリを作成する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">mkdir</span> \"プロジェクト名\"</span><br><span class=\"line\">&gt; <span class=\"built_in\">cd</span> \"プロジェクト名\"</span><br><span class=\"line\">&gt; git init --bare</span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /<span class=\"built_in\">path</span>/プロジェクト名/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-リモートリポジトリを複製し、ローカルリポジトリを作成する\"><a href=\"#2-リモートリポジトリを複製し、ローカルリポジトリを作成する\" class=\"headerlink\" title=\"2.リモートリポジトリを複製し、ローカルリポジトリを作成する\"></a>2.リモートリポジトリを複製し、ローカルリポジトリを作成する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">mkdir</span> work</span><br><span class=\"line\">&gt; <span class=\"built_in\">cd</span> work</span><br><span class=\"line\">&gt; git clone \"<span class=\"number\">1</span>で作成したフォルダのパス\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-ブランチを分ける\"><a href=\"#3-ブランチを分ける\" class=\"headerlink\" title=\"3.ブランチを分ける\"></a>3.ブランチを分ける</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout -b \"ブランチ名\"</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント</strong><br>checkout -bでは、ブランチの作成と切替を同時に行います。</p>\n</blockquote>\n<h2 id=\"4-現在のブランチを確認する\"><a href=\"#4-現在のブランチを確認する\" class=\"headerlink\" title=\"4.現在のブランチを確認する\"></a>4.現在のブランチを確認する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch -a -vvv</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント1</strong><br>*がついているブランチが現在選択中のブランチとなります。</p><p></p>\n</blockquote>\n<blockquote>\n<p><strong>ポイント2</strong><br>remotesで始まる名前の物は、リモートリポジトリにあるブランチとなります。</p>\n</blockquote>\n<blockquote>\n<p><strong>注意</strong><br>masterブランチに１つもコミットが無い状態での<br>ブランチ作成、切替を行った状態では、何も表示されない様です。</p>\n</blockquote>\n<h2 id=\"5-変更\"><a href=\"#5-変更\" class=\"headerlink\" title=\"5.変更\"></a>5.変更</h2><p>ファイルを修正、追加するなどして変更を加えます</p>\n<h2 id=\"6-git-add前に状態を確認\"><a href=\"#6-git-add前に状態を確認\" class=\"headerlink\" title=\"6.git add前に状態を確認\"></a>6.git add前に状態を確認</h2><p>Untracked files(非トラッキング)となっている事がわかります。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git status</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-git-addする\"><a href=\"#7-git-addする\" class=\"headerlink\" title=\"7.git addする\"></a>7.git addする</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git add \"\"今回新規作成されたファイル\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-ステージング後に状態を確認\"><a href=\"#8-ステージング後に状態を確認\" class=\"headerlink\" title=\"8.ステージング後に状態を確認\"></a>8.ステージング後に状態を確認</h2><p>Changes to be commited(ステージング)に含まれている事がわかります。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git status</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-変更を確定する\"><a href=\"#9-変更を確定する\" class=\"headerlink\" title=\"9.変更を確定する\"></a>9.変更を確定する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git commit -m \"ログに残すメッセージ\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-ログを確認する\"><a href=\"#10-ログを確認する\" class=\"headerlink\" title=\"10.ログを確認する\"></a>10.ログを確認する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git log</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-プッシュする\"><a href=\"#11-プッシュする\" class=\"headerlink\" title=\"11.プッシュする\"></a>11.プッシュする</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git push origin HEAD</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント</strong><br>originとは、clone時に自動で作成されるリモートリポジトリのURLの名前となります。<br>HEADとは、現在のブランチの最新コミットの状態を指します。<br>この二つを組み合わせる事で、ブランチ名を指定する事なく、プッシュする事が可能です。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"必要な基礎知識\"><a href=\"#必要な基礎知識\" class=\"headerlink\" title=\"必要な基礎知識\"></a>必要な基礎知識</h1><ul>\n<li>リポジトリ<ul>\n<li>リモートリポジトリ<ul>\n<li>皆で操作するために作られる</li>\n</ul>\n</li>\n<li>ローカルリポジトリ<ul>\n<li>自分が操作するために作られる</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ブランチ<ul>\n<li>リポジトリに含まれる機能</li>\n<li>デフォルトでmasterブランチが作られる</li>\n<li>ブランチ同士を突き合わせて差分を見てからマージを行う</li>\n</ul>\n</li>\n<li>ワーキングツリー<ul>\n<li>現在のファイルの状態</li>\n</ul>\n</li>\n<li>インデックス<ul>\n<li>現在のファイルの管理状態</li>\n<li>git add “ファイル名” と操作を行うと、指定したファイルがステージング状態(コミットに含まれる状態)となる</li>\n<li>インデックスをリセットしたい場合には、git resetする</li>\n<li>状態<ul>\n<li>ステージング<ul>\n<li>次のコミットに含まれる状態</li>\n</ul>\n</li>\n<li>非ステージング<ul>\n<li>次のコミットに含まれない状態</li>\n</ul>\n</li>\n<li>非トラッキング<ul>\n<li>ブランチ内で全く管理していない状態</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>コミット<ul>\n<li>ファイルの状態を確定する操作</li>\n<li>ログを見たり、以前の状態に戻す際に必要となる</li>\n</ul>\n</li>\n<li>プッシュ<ul>\n<li>ローカルで変更されたブランチをリモートリポジトリに反映させる際に行う操作</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"リポジトリ作成からプッシュまでの手順\"><a href=\"#リポジトリ作成からプッシュまでの手順\" class=\"headerlink\" title=\"リポジトリ作成からプッシュまでの手順\"></a>リポジトリ作成からプッシュまでの手順</h1><p>基本的にはコマンドを使うことは無いかと思いますが、ここではコマンド操作による説明を行います。</p>\n<h2 id=\"1-リモートリポジトリを作成する\"><a href=\"#1-リモートリポジトリを作成する\" class=\"headerlink\" title=\"1.リモートリポジトリを作成する\"></a>1.リモートリポジトリを作成する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">mkdir</span> \"プロジェクト名\"</span><br><span class=\"line\">&gt; <span class=\"built_in\">cd</span> \"プロジェクト名\"</span><br><span class=\"line\">&gt; git init --bare</span><br><span class=\"line\">Initialized empty Git repository <span class=\"keyword\">in</span> /<span class=\"built_in\">path</span>/プロジェクト名/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-リモートリポジトリを複製し、ローカルリポジトリを作成する\"><a href=\"#2-リモートリポジトリを複製し、ローカルリポジトリを作成する\" class=\"headerlink\" title=\"2.リモートリポジトリを複製し、ローカルリポジトリを作成する\"></a>2.リモートリポジトリを複製し、ローカルリポジトリを作成する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">mkdir</span> work</span><br><span class=\"line\">&gt; <span class=\"built_in\">cd</span> work</span><br><span class=\"line\">&gt; git clone \"<span class=\"number\">1</span>で作成したフォルダのパス\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-ブランチを分ける\"><a href=\"#3-ブランチを分ける\" class=\"headerlink\" title=\"3.ブランチを分ける\"></a>3.ブランチを分ける</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git checkout -b \"ブランチ名\"</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント</strong><br>checkout -bでは、ブランチの作成と切替を同時に行います。</p>\n</blockquote>\n<h2 id=\"4-現在のブランチを確認する\"><a href=\"#4-現在のブランチを確認する\" class=\"headerlink\" title=\"4.現在のブランチを確認する\"></a>4.現在のブランチを確認する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git branch -a -vvv</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント1</strong><br>*がついているブランチが現在選択中のブランチとなります。</p><p></p>\n</blockquote>\n<blockquote>\n<p><strong>ポイント2</strong><br>remotesで始まる名前の物は、リモートリポジトリにあるブランチとなります。</p>\n</blockquote>\n<blockquote>\n<p><strong>注意</strong><br>masterブランチに１つもコミットが無い状態での<br>ブランチ作成、切替を行った状態では、何も表示されない様です。</p>\n</blockquote>\n<h2 id=\"5-変更\"><a href=\"#5-変更\" class=\"headerlink\" title=\"5.変更\"></a>5.変更</h2><p>ファイルを修正、追加するなどして変更を加えます</p>\n<h2 id=\"6-git-add前に状態を確認\"><a href=\"#6-git-add前に状態を確認\" class=\"headerlink\" title=\"6.git add前に状態を確認\"></a>6.git add前に状態を確認</h2><p>Untracked files(非トラッキング)となっている事がわかります。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git status</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-git-addする\"><a href=\"#7-git-addする\" class=\"headerlink\" title=\"7.git addする\"></a>7.git addする</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git add \"\"今回新規作成されたファイル\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-ステージング後に状態を確認\"><a href=\"#8-ステージング後に状態を確認\" class=\"headerlink\" title=\"8.ステージング後に状態を確認\"></a>8.ステージング後に状態を確認</h2><p>Changes to be commited(ステージング)に含まれている事がわかります。</p>\n<figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git status</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-変更を確定する\"><a href=\"#9-変更を確定する\" class=\"headerlink\" title=\"9.変更を確定する\"></a>9.変更を確定する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git commit -m \"ログに残すメッセージ\"</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-ログを確認する\"><a href=\"#10-ログを確認する\" class=\"headerlink\" title=\"10.ログを確認する\"></a>10.ログを確認する</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git log</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-プッシュする\"><a href=\"#11-プッシュする\" class=\"headerlink\" title=\"11.プッシュする\"></a>11.プッシュする</h2><figure class=\"highlight cmd\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; git push origin HEAD</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント</strong><br>originとは、clone時に自動で作成されるリモートリポジトリのURLの名前となります。<br>HEADとは、現在のブランチの最新コミットの状態を指します。<br>この二つを組み合わせる事で、ブランチ名を指定する事なく、プッシュする事が可能です。</p>\n</blockquote>\n"},{"layout":"post","title":"ターミナルでタブみたいな機能が使える、byobuの使い方","date":"2020-02-05T14:54:39.000Z","_content":"\n[byobu](https://byobu.org/)を使うと、一つのターミナルで複数のプロンプトが使えます。\n\n実行と同時にリソースの消費具合を確認したいから、右側にnmon、左側でvim、なんて事が出来る様になります。\n\n内部ではtmux(ターミナルマルチプレクサー)又はscreenが動いていて、\nbyobuはtmuxをショートカットベースで使いやすくしてくれます。\n\n![byobu](/images/byobu1.png)\n\n# 環境\n\n- Ubuntu 18.04\n\n# インストール\n\n```bash\n$ apt update\n$ apt install byobu -y\n```\n\n# 使い方\n\n## byobuを起動する\n\n```bash\n$ byobu\n```\n\n以降の全てのショートカットはbyobuを起動した状態で行います。\n\n## 画面を垂直に分割する\n\nトップの画像はターミナルを垂直に分割した物です。\n\nCtrl-F2\n\n![垂直に分割](/images/byobu-vertical.png)\n\n## 画面を水平に分割する\n\nShift-F2\n\n![水平に分割](/images/byobu-horizon.png)\n\n## 分割された他のプロンプトにフォーカスを移動\n\n操作するプロンプトを変更したい時に\n\n- 次へ\n  - Ctrl-F4\n- 前へ\n  - Ctrl-F3\n\n![フォーカス移動前](/images/byobu-focus1.png)\n![フォーカス移動後](/images/byobu-focus2.png)\n\n## 分割されたプロンプトの移動\n\n- 次へ\n  - Shift-F4\n- 前へ\n  - Shift-F3\n\n![移動前](/images/byobu-move1.png)\n![移動後](/images/byobu-move2.png)\n\n## 新しいウィンドウを作成\n\nF2\n\n![新規ウィンドウ](/images/byobu-newindow.png)\n\n## 他のウィンドウに移動\n\n- 次へ\n  - F4\n- 前へ\n  - F3\n\n![ウィンドウのフォーカス移動](/images/byobu-focus-window.png)\n![ウィンドウのフォーカス移動](/images/byobu-focus-window.png)\n\n## 分割されたプロンプト(ウィンドウ)を終了\n\n終了したいプロンプトにフォーカスし、exitします。\n\n```bash\n$ exit\n```\n\n![終了](/images/byobu-exit1.png)\n![終了後](/images/byobu-exit2.png)\n\n## 画面の共有\n\n他の人と同じ所にSSHした状態でbyobuを起動すると、同じ画面(セッション)を共有できます。\n\n気になる方は試してみてください。\n","source":"_posts/byobu.md","raw":"---\nlayout: post\ntitle: ターミナルでタブみたいな機能が使える、byobuの使い方\ndate: 2020-02-05 23:54:39\ntags: [byobu]\n---\n\n[byobu](https://byobu.org/)を使うと、一つのターミナルで複数のプロンプトが使えます。\n\n実行と同時にリソースの消費具合を確認したいから、右側にnmon、左側でvim、なんて事が出来る様になります。\n\n内部ではtmux(ターミナルマルチプレクサー)又はscreenが動いていて、\nbyobuはtmuxをショートカットベースで使いやすくしてくれます。\n\n![byobu](/images/byobu1.png)\n\n# 環境\n\n- Ubuntu 18.04\n\n# インストール\n\n```bash\n$ apt update\n$ apt install byobu -y\n```\n\n# 使い方\n\n## byobuを起動する\n\n```bash\n$ byobu\n```\n\n以降の全てのショートカットはbyobuを起動した状態で行います。\n\n## 画面を垂直に分割する\n\nトップの画像はターミナルを垂直に分割した物です。\n\nCtrl-F2\n\n![垂直に分割](/images/byobu-vertical.png)\n\n## 画面を水平に分割する\n\nShift-F2\n\n![水平に分割](/images/byobu-horizon.png)\n\n## 分割された他のプロンプトにフォーカスを移動\n\n操作するプロンプトを変更したい時に\n\n- 次へ\n  - Ctrl-F4\n- 前へ\n  - Ctrl-F3\n\n![フォーカス移動前](/images/byobu-focus1.png)\n![フォーカス移動後](/images/byobu-focus2.png)\n\n## 分割されたプロンプトの移動\n\n- 次へ\n  - Shift-F4\n- 前へ\n  - Shift-F3\n\n![移動前](/images/byobu-move1.png)\n![移動後](/images/byobu-move2.png)\n\n## 新しいウィンドウを作成\n\nF2\n\n![新規ウィンドウ](/images/byobu-newindow.png)\n\n## 他のウィンドウに移動\n\n- 次へ\n  - F4\n- 前へ\n  - F3\n\n![ウィンドウのフォーカス移動](/images/byobu-focus-window.png)\n![ウィンドウのフォーカス移動](/images/byobu-focus-window.png)\n\n## 分割されたプロンプト(ウィンドウ)を終了\n\n終了したいプロンプトにフォーカスし、exitします。\n\n```bash\n$ exit\n```\n\n![終了](/images/byobu-exit1.png)\n![終了後](/images/byobu-exit2.png)\n\n## 画面の共有\n\n他の人と同じ所にSSHした状態でbyobuを起動すると、同じ画面(セッション)を共有できます。\n\n気になる方は試してみてください。\n","slug":"byobu","published":1,"updated":"2020-02-05T15:42:30.003Z","_id":"ck6ku49q900058lvqkbyg0res","comments":1,"photos":[],"link":"","content":"<p><a href=\"https://byobu.org/\" target=\"_blank\" rel=\"noopener\">byobu</a>を使うと、一つのターミナルで複数のプロンプトが使えます。</p>\n<p>実行と同時にリソースの消費具合を確認したいから、右側にnmon、左側でvim、なんて事が出来る様になります。</p>\n<p>内部ではtmux(ターミナルマルチプレクサー)又はscreenが動いていて、<br>byobuはtmuxをショートカットベースで使いやすくしてくれます。</p>\n<p><img src=\"/images/byobu1.png\" alt=\"byobu\"></p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\">$ apt install byobu -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"byobuを起動する\"><a href=\"#byobuを起動する\" class=\"headerlink\" title=\"byobuを起動する\"></a>byobuを起動する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ byobu</span><br></pre></td></tr></table></figure>\n\n<p>以降の全てのショートカットはbyobuを起動した状態で行います。</p>\n<h2 id=\"画面を垂直に分割する\"><a href=\"#画面を垂直に分割する\" class=\"headerlink\" title=\"画面を垂直に分割する\"></a>画面を垂直に分割する</h2><p>トップの画像はターミナルを垂直に分割した物です。</p>\n<p>Ctrl-F2</p>\n<p><img src=\"/images/byobu-vertical.png\" alt=\"垂直に分割\"></p>\n<h2 id=\"画面を水平に分割する\"><a href=\"#画面を水平に分割する\" class=\"headerlink\" title=\"画面を水平に分割する\"></a>画面を水平に分割する</h2><p>Shift-F2</p>\n<p><img src=\"/images/byobu-horizon.png\" alt=\"水平に分割\"></p>\n<h2 id=\"分割された他のプロンプトにフォーカスを移動\"><a href=\"#分割された他のプロンプトにフォーカスを移動\" class=\"headerlink\" title=\"分割された他のプロンプトにフォーカスを移動\"></a>分割された他のプロンプトにフォーカスを移動</h2><p>操作するプロンプトを変更したい時に</p>\n<ul>\n<li>次へ<ul>\n<li>Ctrl-F4</li>\n</ul>\n</li>\n<li>前へ<ul>\n<li>Ctrl-F3</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/byobu-focus1.png\" alt=\"フォーカス移動前\"><br><img src=\"/images/byobu-focus2.png\" alt=\"フォーカス移動後\"></p>\n<h2 id=\"分割されたプロンプトの移動\"><a href=\"#分割されたプロンプトの移動\" class=\"headerlink\" title=\"分割されたプロンプトの移動\"></a>分割されたプロンプトの移動</h2><ul>\n<li>次へ<ul>\n<li>Shift-F4</li>\n</ul>\n</li>\n<li>前へ<ul>\n<li>Shift-F3</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/byobu-move1.png\" alt=\"移動前\"><br><img src=\"/images/byobu-move2.png\" alt=\"移動後\"></p>\n<h2 id=\"新しいウィンドウを作成\"><a href=\"#新しいウィンドウを作成\" class=\"headerlink\" title=\"新しいウィンドウを作成\"></a>新しいウィンドウを作成</h2><p>F2</p>\n<p><img src=\"/images/byobu-newindow.png\" alt=\"新規ウィンドウ\"></p>\n<h2 id=\"他のウィンドウに移動\"><a href=\"#他のウィンドウに移動\" class=\"headerlink\" title=\"他のウィンドウに移動\"></a>他のウィンドウに移動</h2><ul>\n<li>次へ<ul>\n<li>F4</li>\n</ul>\n</li>\n<li>前へ<ul>\n<li>F3</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/byobu-focus-window.png\" alt=\"ウィンドウのフォーカス移動\"><br><img src=\"/images/byobu-focus-window.png\" alt=\"ウィンドウのフォーカス移動\"></p>\n<h2 id=\"分割されたプロンプト-ウィンドウ-を終了\"><a href=\"#分割されたプロンプト-ウィンドウ-を終了\" class=\"headerlink\" title=\"分割されたプロンプト(ウィンドウ)を終了\"></a>分割されたプロンプト(ウィンドウ)を終了</h2><p>終了したいプロンプトにフォーカスし、exitします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/byobu-exit1.png\" alt=\"終了\"><br><img src=\"/images/byobu-exit2.png\" alt=\"終了後\"></p>\n<h2 id=\"画面の共有\"><a href=\"#画面の共有\" class=\"headerlink\" title=\"画面の共有\"></a>画面の共有</h2><p>他の人と同じ所にSSHした状態でbyobuを起動すると、同じ画面(セッション)を共有できます。</p>\n<p>気になる方は試してみてください。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://byobu.org/\" target=\"_blank\" rel=\"noopener\">byobu</a>を使うと、一つのターミナルで複数のプロンプトが使えます。</p>\n<p>実行と同時にリソースの消費具合を確認したいから、右側にnmon、左側でvim、なんて事が出来る様になります。</p>\n<p>内部ではtmux(ターミナルマルチプレクサー)又はscreenが動いていて、<br>byobuはtmuxをショートカットベースで使いやすくしてくれます。</p>\n<p><img src=\"/images/byobu1.png\" alt=\"byobu\"></p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\">$ apt install byobu -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"byobuを起動する\"><a href=\"#byobuを起動する\" class=\"headerlink\" title=\"byobuを起動する\"></a>byobuを起動する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ byobu</span><br></pre></td></tr></table></figure>\n\n<p>以降の全てのショートカットはbyobuを起動した状態で行います。</p>\n<h2 id=\"画面を垂直に分割する\"><a href=\"#画面を垂直に分割する\" class=\"headerlink\" title=\"画面を垂直に分割する\"></a>画面を垂直に分割する</h2><p>トップの画像はターミナルを垂直に分割した物です。</p>\n<p>Ctrl-F2</p>\n<p><img src=\"/images/byobu-vertical.png\" alt=\"垂直に分割\"></p>\n<h2 id=\"画面を水平に分割する\"><a href=\"#画面を水平に分割する\" class=\"headerlink\" title=\"画面を水平に分割する\"></a>画面を水平に分割する</h2><p>Shift-F2</p>\n<p><img src=\"/images/byobu-horizon.png\" alt=\"水平に分割\"></p>\n<h2 id=\"分割された他のプロンプトにフォーカスを移動\"><a href=\"#分割された他のプロンプトにフォーカスを移動\" class=\"headerlink\" title=\"分割された他のプロンプトにフォーカスを移動\"></a>分割された他のプロンプトにフォーカスを移動</h2><p>操作するプロンプトを変更したい時に</p>\n<ul>\n<li>次へ<ul>\n<li>Ctrl-F4</li>\n</ul>\n</li>\n<li>前へ<ul>\n<li>Ctrl-F3</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/byobu-focus1.png\" alt=\"フォーカス移動前\"><br><img src=\"/images/byobu-focus2.png\" alt=\"フォーカス移動後\"></p>\n<h2 id=\"分割されたプロンプトの移動\"><a href=\"#分割されたプロンプトの移動\" class=\"headerlink\" title=\"分割されたプロンプトの移動\"></a>分割されたプロンプトの移動</h2><ul>\n<li>次へ<ul>\n<li>Shift-F4</li>\n</ul>\n</li>\n<li>前へ<ul>\n<li>Shift-F3</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/byobu-move1.png\" alt=\"移動前\"><br><img src=\"/images/byobu-move2.png\" alt=\"移動後\"></p>\n<h2 id=\"新しいウィンドウを作成\"><a href=\"#新しいウィンドウを作成\" class=\"headerlink\" title=\"新しいウィンドウを作成\"></a>新しいウィンドウを作成</h2><p>F2</p>\n<p><img src=\"/images/byobu-newindow.png\" alt=\"新規ウィンドウ\"></p>\n<h2 id=\"他のウィンドウに移動\"><a href=\"#他のウィンドウに移動\" class=\"headerlink\" title=\"他のウィンドウに移動\"></a>他のウィンドウに移動</h2><ul>\n<li>次へ<ul>\n<li>F4</li>\n</ul>\n</li>\n<li>前へ<ul>\n<li>F3</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/byobu-focus-window.png\" alt=\"ウィンドウのフォーカス移動\"><br><img src=\"/images/byobu-focus-window.png\" alt=\"ウィンドウのフォーカス移動\"></p>\n<h2 id=\"分割されたプロンプト-ウィンドウ-を終了\"><a href=\"#分割されたプロンプト-ウィンドウ-を終了\" class=\"headerlink\" title=\"分割されたプロンプト(ウィンドウ)を終了\"></a>分割されたプロンプト(ウィンドウ)を終了</h2><p>終了したいプロンプトにフォーカスし、exitします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/byobu-exit1.png\" alt=\"終了\"><br><img src=\"/images/byobu-exit2.png\" alt=\"終了後\"></p>\n<h2 id=\"画面の共有\"><a href=\"#画面の共有\" class=\"headerlink\" title=\"画面の共有\"></a>画面の共有</h2><p>他の人と同じ所にSSHした状態でbyobuを起動すると、同じ画面(セッション)を共有できます。</p>\n<p>気になる方は試してみてください。</p>\n"},{"layout":"post","title":"Go製CMS ponzuを試してみた","date":"2020-02-01T18:36:06.000Z","_content":"\nCMSを作りたくて、[この動画](https://www.youtube.com/watch?v=T_1ncPoLgrg)を見ながら試してみました。\n\n# ponzuとは\n\nGoで作られているヘッドレスCMS\n\n[ponzu - GitHub](https://github.com/ponzu-cms/ponzu)\n\n# 環境\n\n- Go 1.13.5\n\n# 使い方\n\n## インストール\n\n```bash\n$ go get -u https://github.com/ponzu-cms/ponzu/...\n```\n\n## ponzuプロジェクト作成\n\n以下コマンドでGOPATH/src以下にプロジェクトが作成される\n\n```bash\n$ ponzu new github.com/sakkuntyo/ponzu-project\n```\n\n以下cd先にプロジェクトが作られている\n\n```bash\n$ cd ${GOPATH}/src/github.com/sakkuntyo/ponzu-project\n$ ls\nCONTRIBUTING.md  Dockerfile  LICENSE  README.md  addons  cmd  content  deployment  docs  examples  ponzu-banner.png\n```\n\nこの後の操作はこのデイレクトリ内で行う\n\n## テンプレコードを作成\n\n```bash\nテンプレートコード作成\nponzu generate content コンテンツ名 コンテンツ内のデータ名:データ型:[入力方法] [コンテンツ内のデータ名:データ型:[入力方法]] ..\n$ ponzu generate content author name:string photo:string:file bio:string:richtext\nこれでテンプレートコード(content/author.go)が作成される\n```\n\n## ponzuをビルド\n\n```bash\n$ ponzu build\nこれでponzu-server、及び実行に必要なライブラリ(cmd以下)が配置される\n```\n\n## ponzu起動\n\n```bash\n$ ponzu run\n何故かうまくいかないが、もう一度実行すると起動できる\n$ ponzu run\nServer listening at localhost:8080 for HTTP requests...\n\nVisit '/admin' to get started.\n```\n\n起動中にlocalhost:8080/adminにアクセスする事でCMSのGUIが表示される\n\n# CMSで出来ること\n\n## 記事の追加\n\n左メニューからコンテンツを選び、NEWを選択する事で、記事が書ける\n\nSAVEをすると、内容がsystem.db(BoltDB)に保存される\n\n## 書いた記事の参照\n\njson形式で記事が参照できる、確認してみる\n\n```bash\nAuthorをgenerate、記事追加したとして、以下コマンドで確認\n$ curl \"localhost:8080/api/content?type=Author&id=1\"\n{\n    \"data\": [\n        {\n            \"bio\": \"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305fbio\",\n            \"id\": 1,\n            \"name\": \"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305f\",\n            \"photo\": \"/api/uploads/2020/02/4fd4c0e572a4fed83f1d1dc5e64a2ab8600.jpg\",\n            \"slug\": \"author-77f9980f-db1e-421b-bd3b-ce0879e9d670\",\n            \"timestamp\": 1580577064000,\n            \"updated\": 1580577184147,\n            \"uuid\": \"77f9980f-db1e-421b-bd3b-ce0879e9d670\"\n        }\n    ]\n}\n```\n\nこれをブラウザ側でプレビューしてあげたりするとブログっぽくなるのかな\n\n","source":"_posts/go-cms-ponzu.md","raw":"---\nlayout: post\ntitle: Go製CMS ponzuを試してみた\ndate: 2020-02-02 03:36:06\ntags: [golang,cmd,ponzu]\n---\n\nCMSを作りたくて、[この動画](https://www.youtube.com/watch?v=T_1ncPoLgrg)を見ながら試してみました。\n\n# ponzuとは\n\nGoで作られているヘッドレスCMS\n\n[ponzu - GitHub](https://github.com/ponzu-cms/ponzu)\n\n# 環境\n\n- Go 1.13.5\n\n# 使い方\n\n## インストール\n\n```bash\n$ go get -u https://github.com/ponzu-cms/ponzu/...\n```\n\n## ponzuプロジェクト作成\n\n以下コマンドでGOPATH/src以下にプロジェクトが作成される\n\n```bash\n$ ponzu new github.com/sakkuntyo/ponzu-project\n```\n\n以下cd先にプロジェクトが作られている\n\n```bash\n$ cd ${GOPATH}/src/github.com/sakkuntyo/ponzu-project\n$ ls\nCONTRIBUTING.md  Dockerfile  LICENSE  README.md  addons  cmd  content  deployment  docs  examples  ponzu-banner.png\n```\n\nこの後の操作はこのデイレクトリ内で行う\n\n## テンプレコードを作成\n\n```bash\nテンプレートコード作成\nponzu generate content コンテンツ名 コンテンツ内のデータ名:データ型:[入力方法] [コンテンツ内のデータ名:データ型:[入力方法]] ..\n$ ponzu generate content author name:string photo:string:file bio:string:richtext\nこれでテンプレートコード(content/author.go)が作成される\n```\n\n## ponzuをビルド\n\n```bash\n$ ponzu build\nこれでponzu-server、及び実行に必要なライブラリ(cmd以下)が配置される\n```\n\n## ponzu起動\n\n```bash\n$ ponzu run\n何故かうまくいかないが、もう一度実行すると起動できる\n$ ponzu run\nServer listening at localhost:8080 for HTTP requests...\n\nVisit '/admin' to get started.\n```\n\n起動中にlocalhost:8080/adminにアクセスする事でCMSのGUIが表示される\n\n# CMSで出来ること\n\n## 記事の追加\n\n左メニューからコンテンツを選び、NEWを選択する事で、記事が書ける\n\nSAVEをすると、内容がsystem.db(BoltDB)に保存される\n\n## 書いた記事の参照\n\njson形式で記事が参照できる、確認してみる\n\n```bash\nAuthorをgenerate、記事追加したとして、以下コマンドで確認\n$ curl \"localhost:8080/api/content?type=Author&id=1\"\n{\n    \"data\": [\n        {\n            \"bio\": \"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305fbio\",\n            \"id\": 1,\n            \"name\": \"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305f\",\n            \"photo\": \"/api/uploads/2020/02/4fd4c0e572a4fed83f1d1dc5e64a2ab8600.jpg\",\n            \"slug\": \"author-77f9980f-db1e-421b-bd3b-ce0879e9d670\",\n            \"timestamp\": 1580577064000,\n            \"updated\": 1580577184147,\n            \"uuid\": \"77f9980f-db1e-421b-bd3b-ce0879e9d670\"\n        }\n    ]\n}\n```\n\nこれをブラウザ側でプレビューしてあげたりするとブログっぽくなるのかな\n\n","slug":"go-cms-ponzu","published":1,"updated":"2020-02-01T18:43:57.211Z","_id":"ck6ku49t8000l8lvqhey6udv8","comments":1,"photos":[],"link":"","content":"<p>CMSを作りたくて、<a href=\"https://www.youtube.com/watch?v=T_1ncPoLgrg\" target=\"_blank\" rel=\"noopener\">この動画</a>を見ながら試してみました。</p>\n<h1 id=\"ponzuとは\"><a href=\"#ponzuとは\" class=\"headerlink\" title=\"ponzuとは\"></a>ponzuとは</h1><p>Goで作られているヘッドレスCMS</p>\n<p><a href=\"https://github.com/ponzu-cms/ponzu\" target=\"_blank\" rel=\"noopener\">ponzu - GitHub</a></p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Go 1.13.5</li>\n</ul>\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go get -u https://github.com/ponzu-cms/ponzu/...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ponzuプロジェクト作成\"><a href=\"#ponzuプロジェクト作成\" class=\"headerlink\" title=\"ponzuプロジェクト作成\"></a>ponzuプロジェクト作成</h2><p>以下コマンドでGOPATH/src以下にプロジェクトが作成される</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ponzu new github.com/sakkuntyo/ponzu-project</span><br></pre></td></tr></table></figure>\n\n<p>以下cd先にプロジェクトが作られている</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;GOPATH&#125;</span>/src/github.com/sakkuntyo/ponzu-project</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">CONTRIBUTING.md  Dockerfile  LICENSE  README.md  addons  cmd  content  deployment  docs  examples  ponzu-banner.png</span><br></pre></td></tr></table></figure>\n\n<p>この後の操作はこのデイレクトリ内で行う</p>\n<h2 id=\"テンプレコードを作成\"><a href=\"#テンプレコードを作成\" class=\"headerlink\" title=\"テンプレコードを作成\"></a>テンプレコードを作成</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">テンプレートコード作成</span><br><span class=\"line\">ponzu generate content コンテンツ名 コンテンツ内のデータ名:データ型:[入力方法] [コンテンツ内のデータ名:データ型:[入力方法]] ..</span><br><span class=\"line\">$ ponzu generate content author name:string photo:string:file bio:string:richtext</span><br><span class=\"line\">これでテンプレートコード(content/author.go)が作成される</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ponzuをビルド\"><a href=\"#ponzuをビルド\" class=\"headerlink\" title=\"ponzuをビルド\"></a>ponzuをビルド</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ponzu build</span><br><span class=\"line\">これでponzu-server、及び実行に必要なライブラリ(cmd以下)が配置される</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ponzu起動\"><a href=\"#ponzu起動\" class=\"headerlink\" title=\"ponzu起動\"></a>ponzu起動</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ponzu run</span><br><span class=\"line\">何故かうまくいかないが、もう一度実行すると起動できる</span><br><span class=\"line\">$ ponzu run</span><br><span class=\"line\">Server listening at localhost:8080 <span class=\"keyword\">for</span> HTTP requests...</span><br><span class=\"line\"></span><br><span class=\"line\">Visit <span class=\"string\">'/admin'</span> to get started.</span><br></pre></td></tr></table></figure>\n\n<p>起動中にlocalhost:8080/adminにアクセスする事でCMSのGUIが表示される</p>\n<h1 id=\"CMSで出来ること\"><a href=\"#CMSで出来ること\" class=\"headerlink\" title=\"CMSで出来ること\"></a>CMSで出来ること</h1><h2 id=\"記事の追加\"><a href=\"#記事の追加\" class=\"headerlink\" title=\"記事の追加\"></a>記事の追加</h2><p>左メニューからコンテンツを選び、NEWを選択する事で、記事が書ける</p>\n<p>SAVEをすると、内容がsystem.db(BoltDB)に保存される</p>\n<h2 id=\"書いた記事の参照\"><a href=\"#書いた記事の参照\" class=\"headerlink\" title=\"書いた記事の参照\"></a>書いた記事の参照</h2><p>json形式で記事が参照できる、確認してみる</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Authorをgenerate、記事追加したとして、以下コマンドで確認</span><br><span class=\"line\">$ curl <span class=\"string\">\"localhost:8080/api/content?type=Author&amp;id=1\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"data\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">\"bio\"</span>: <span class=\"string\">\"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305fbio\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"id\"</span>: 1,</span><br><span class=\"line\">            <span class=\"string\">\"name\"</span>: <span class=\"string\">\"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305f\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"photo\"</span>: <span class=\"string\">\"/api/uploads/2020/02/4fd4c0e572a4fed83f1d1dc5e64a2ab8600.jpg\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"slug\"</span>: <span class=\"string\">\"author-77f9980f-db1e-421b-bd3b-ce0879e9d670\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"timestamp\"</span>: 1580577064000,</span><br><span class=\"line\">            <span class=\"string\">\"updated\"</span>: 1580577184147,</span><br><span class=\"line\">            <span class=\"string\">\"uuid\"</span>: <span class=\"string\">\"77f9980f-db1e-421b-bd3b-ce0879e9d670\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>これをブラウザ側でプレビューしてあげたりするとブログっぽくなるのかな</p>\n","site":{"data":{}},"excerpt":"","more":"<p>CMSを作りたくて、<a href=\"https://www.youtube.com/watch?v=T_1ncPoLgrg\" target=\"_blank\" rel=\"noopener\">この動画</a>を見ながら試してみました。</p>\n<h1 id=\"ponzuとは\"><a href=\"#ponzuとは\" class=\"headerlink\" title=\"ponzuとは\"></a>ponzuとは</h1><p>Goで作られているヘッドレスCMS</p>\n<p><a href=\"https://github.com/ponzu-cms/ponzu\" target=\"_blank\" rel=\"noopener\">ponzu - GitHub</a></p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Go 1.13.5</li>\n</ul>\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ go get -u https://github.com/ponzu-cms/ponzu/...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ponzuプロジェクト作成\"><a href=\"#ponzuプロジェクト作成\" class=\"headerlink\" title=\"ponzuプロジェクト作成\"></a>ponzuプロジェクト作成</h2><p>以下コマンドでGOPATH/src以下にプロジェクトが作成される</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ponzu new github.com/sakkuntyo/ponzu-project</span><br></pre></td></tr></table></figure>\n\n<p>以下cd先にプロジェクトが作られている</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;GOPATH&#125;</span>/src/github.com/sakkuntyo/ponzu-project</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">CONTRIBUTING.md  Dockerfile  LICENSE  README.md  addons  cmd  content  deployment  docs  examples  ponzu-banner.png</span><br></pre></td></tr></table></figure>\n\n<p>この後の操作はこのデイレクトリ内で行う</p>\n<h2 id=\"テンプレコードを作成\"><a href=\"#テンプレコードを作成\" class=\"headerlink\" title=\"テンプレコードを作成\"></a>テンプレコードを作成</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">テンプレートコード作成</span><br><span class=\"line\">ponzu generate content コンテンツ名 コンテンツ内のデータ名:データ型:[入力方法] [コンテンツ内のデータ名:データ型:[入力方法]] ..</span><br><span class=\"line\">$ ponzu generate content author name:string photo:string:file bio:string:richtext</span><br><span class=\"line\">これでテンプレートコード(content/author.go)が作成される</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ponzuをビルド\"><a href=\"#ponzuをビルド\" class=\"headerlink\" title=\"ponzuをビルド\"></a>ponzuをビルド</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ponzu build</span><br><span class=\"line\">これでponzu-server、及び実行に必要なライブラリ(cmd以下)が配置される</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ponzu起動\"><a href=\"#ponzu起動\" class=\"headerlink\" title=\"ponzu起動\"></a>ponzu起動</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ponzu run</span><br><span class=\"line\">何故かうまくいかないが、もう一度実行すると起動できる</span><br><span class=\"line\">$ ponzu run</span><br><span class=\"line\">Server listening at localhost:8080 <span class=\"keyword\">for</span> HTTP requests...</span><br><span class=\"line\"></span><br><span class=\"line\">Visit <span class=\"string\">'/admin'</span> to get started.</span><br></pre></td></tr></table></figure>\n\n<p>起動中にlocalhost:8080/adminにアクセスする事でCMSのGUIが表示される</p>\n<h1 id=\"CMSで出来ること\"><a href=\"#CMSで出来ること\" class=\"headerlink\" title=\"CMSで出来ること\"></a>CMSで出来ること</h1><h2 id=\"記事の追加\"><a href=\"#記事の追加\" class=\"headerlink\" title=\"記事の追加\"></a>記事の追加</h2><p>左メニューからコンテンツを選び、NEWを選択する事で、記事が書ける</p>\n<p>SAVEをすると、内容がsystem.db(BoltDB)に保存される</p>\n<h2 id=\"書いた記事の参照\"><a href=\"#書いた記事の参照\" class=\"headerlink\" title=\"書いた記事の参照\"></a>書いた記事の参照</h2><p>json形式で記事が参照できる、確認してみる</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Authorをgenerate、記事追加したとして、以下コマンドで確認</span><br><span class=\"line\">$ curl <span class=\"string\">\"localhost:8080/api/content?type=Author&amp;id=1\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"data\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">\"bio\"</span>: <span class=\"string\">\"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305fbio\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"id\"</span>: 1,</span><br><span class=\"line\">            <span class=\"string\">\"name\"</span>: <span class=\"string\">\"ponzu\\u305f\\u3081\\u3057\\u3066\\u307f\\u305f\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"photo\"</span>: <span class=\"string\">\"/api/uploads/2020/02/4fd4c0e572a4fed83f1d1dc5e64a2ab8600.jpg\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"slug\"</span>: <span class=\"string\">\"author-77f9980f-db1e-421b-bd3b-ce0879e9d670\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"timestamp\"</span>: 1580577064000,</span><br><span class=\"line\">            <span class=\"string\">\"updated\"</span>: 1580577184147,</span><br><span class=\"line\">            <span class=\"string\">\"uuid\"</span>: <span class=\"string\">\"77f9980f-db1e-421b-bd3b-ce0879e9d670\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>これをブラウザ側でプレビューしてあげたりするとブログっぽくなるのかな</p>\n"},{"layout":"post","title":"GitHubをコマンド操作","date":"2019-12-27T11:08:43.000Z","_content":"\nGitHubにリポジトリを作りたい、\nけどそのためだけにマウスを動かすのがめんどくさい、、、\nそんな時に行う操作です。\n\n# 環境\n\n- Ubuntu18.04\n\n# 手順\n\n## hubコマンドのインストール\n\n```bash\n$ sudo add-apt-repository ppa:cpick/hub\n$ sudo apt update\n$ sudo apt install hub\n```\n\n## sshの設定\n\nhubコマンドはsshの接続名(github.com)を使用するため、\n~/.ssh/configにgithub.comの設定を記述しておく必要があります。\n\nそのため、以下の様な内容にしておきます。\n\n```bash\nHost github.com\n  Hostname github.com\n  IdentityFile <githubに登録済の鍵のパス>\n```\n\n## GitHubにリポジトリを作成する\n\n```bash\n$ mkdir test-repository\n$ cd test-repository\n$ hub init\n以下のコマンドでgithubにリポジトリが作成されます、プライベートで作成する場合は-pオプションを付けます。\n$ hub create\nUpdating origin\ncreated repository: sakkuntyo/test-repository\n```\n","source":"_posts/github-command-operation.md","raw":"---\nlayout: post\ntitle: GitHubをコマンド操作\ndate: 2019-12-27 20:08:43\ntags: [GitHub,hub]\n---\n\nGitHubにリポジトリを作りたい、\nけどそのためだけにマウスを動かすのがめんどくさい、、、\nそんな時に行う操作です。\n\n# 環境\n\n- Ubuntu18.04\n\n# 手順\n\n## hubコマンドのインストール\n\n```bash\n$ sudo add-apt-repository ppa:cpick/hub\n$ sudo apt update\n$ sudo apt install hub\n```\n\n## sshの設定\n\nhubコマンドはsshの接続名(github.com)を使用するため、\n~/.ssh/configにgithub.comの設定を記述しておく必要があります。\n\nそのため、以下の様な内容にしておきます。\n\n```bash\nHost github.com\n  Hostname github.com\n  IdentityFile <githubに登録済の鍵のパス>\n```\n\n## GitHubにリポジトリを作成する\n\n```bash\n$ mkdir test-repository\n$ cd test-repository\n$ hub init\n以下のコマンドでgithubにリポジトリが作成されます、プライベートで作成する場合は-pオプションを付けます。\n$ hub create\nUpdating origin\ncreated repository: sakkuntyo/test-repository\n```\n","slug":"github-command-operation","published":1,"updated":"2020-02-09T16:04:26.321Z","_id":"ck6ku49ta000m8lvq45u0ewzf","comments":1,"photos":[],"link":"","content":"<p>GitHubにリポジトリを作りたい、<br>けどそのためだけにマウスを動かすのがめんどくさい、、、<br>そんな時に行う操作です。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"hubコマンドのインストール\"><a href=\"#hubコマンドのインストール\" class=\"headerlink\" title=\"hubコマンドのインストール\"></a>hubコマンドのインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:cpick/hub</span><br><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install hub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sshの設定\"><a href=\"#sshの設定\" class=\"headerlink\" title=\"sshの設定\"></a>sshの設定</h2><p>hubコマンドはsshの接続名(github.com)を使用するため、<br>~/.ssh/configにgithub.comの設定を記述しておく必要があります。</p>\n<p>そのため、以下の様な内容にしておきます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">  Hostname github.com</span><br><span class=\"line\">  IdentityFile &lt;githubに登録済の鍵のパス&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GitHubにリポジトリを作成する\"><a href=\"#GitHubにリポジトリを作成する\" class=\"headerlink\" title=\"GitHubにリポジトリを作成する\"></a>GitHubにリポジトリを作成する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir <span class=\"built_in\">test</span>-repository</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span>-repository</span><br><span class=\"line\">$ hub init</span><br><span class=\"line\">以下のコマンドでgithubにリポジトリが作成されます、プライベートで作成する場合は-pオプションを付けます。</span><br><span class=\"line\">$ hub create</span><br><span class=\"line\">Updating origin</span><br><span class=\"line\">created repository: sakkuntyo/<span class=\"built_in\">test</span>-repository</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>GitHubにリポジトリを作りたい、<br>けどそのためだけにマウスを動かすのがめんどくさい、、、<br>そんな時に行う操作です。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"hubコマンドのインストール\"><a href=\"#hubコマンドのインストール\" class=\"headerlink\" title=\"hubコマンドのインストール\"></a>hubコマンドのインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo add-apt-repository ppa:cpick/hub</span><br><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install hub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"sshの設定\"><a href=\"#sshの設定\" class=\"headerlink\" title=\"sshの設定\"></a>sshの設定</h2><p>hubコマンドはsshの接続名(github.com)を使用するため、<br>~/.ssh/configにgithub.comの設定を記述しておく必要があります。</p>\n<p>そのため、以下の様な内容にしておきます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Host github.com</span><br><span class=\"line\">  Hostname github.com</span><br><span class=\"line\">  IdentityFile &lt;githubに登録済の鍵のパス&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GitHubにリポジトリを作成する\"><a href=\"#GitHubにリポジトリを作成する\" class=\"headerlink\" title=\"GitHubにリポジトリを作成する\"></a>GitHubにリポジトリを作成する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir <span class=\"built_in\">test</span>-repository</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span>-repository</span><br><span class=\"line\">$ hub init</span><br><span class=\"line\">以下のコマンドでgithubにリポジトリが作成されます、プライベートで作成する場合は-pオプションを付けます。</span><br><span class=\"line\">$ hub create</span><br><span class=\"line\">Updating origin</span><br><span class=\"line\">created repository: sakkuntyo/<span class=\"built_in\">test</span>-repository</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"Hexoでsitemap.xmlを生成","date":"2020-01-30T14:41:11.000Z","_content":"\nGoogle検索エンジンの検索に出すために、\n記事を追加する度にサーチコンソールにURLを登録していました、\nsitemap.xmlを登録する事で、都度登録する必要がなくなります。\n\n# 手順\n\n## sitemap.xml生成プラグインをインストール\n\n```bash\n$ npm install hexo-generator-seo-friendly-sitemap --save\npackage.jsonをgitに追加します\n$ git add package.json\n```\n\n## _config.ymlに追記\n\n以下の行をHexoプロジェクト直下の_config.ymlに追記する事で、\nhexo generate時にsitemapが作成される様になります。\n\n```yaml\nsitemap:\n  path: sitemap.xml\n```\n\nhexo generateをしてみます\n\n```bash\n$ hexo generate\nINFO  Start processing\nINFO  Files loaded in 614 ms\nINFO  Generated: post-sitemap.xml\nINFO  Generated: sitemap.xml\nINFO  Generated: tag-sitemap.xml\nINFO  Generated: index.html\nINFO  5 files generated in 1.14 s\n```\n\n今回幾つかsitemapが作成された事がわかります。\n\n- post-sitemap.xml\n  - 記事毎のページが記載されたsitemap\n- tag-sitemap.xml\n  - タグ毎のページが記載されたsitemap\n- sitemap.xml\n  - 内容見てもよくわからない(?)\n\n## sitemapをサーチコンソールに登録\n\nsitemapの登録は[ここ](https://search.google.com/search-console/sitemaps)から行えます。\n\n登録に失敗する場合は、\n_config.ymlに記述しているURL部分が間違っている可能性があります。\nこのURLはデプロイ後にアクセスするページのURLを指定しておく必要があります。\n\n以下例\n```\nurl: https://sakkuntyo.github.io\n```\n","source":"_posts/hexo-generate-sitemap.md","raw":"---\nlayout: post\ntitle: Hexoでsitemap.xmlを生成\ndate: 2020-01-30 23:41:11\ntags: [Hexo,sitemap.xml]\n---\n\nGoogle検索エンジンの検索に出すために、\n記事を追加する度にサーチコンソールにURLを登録していました、\nsitemap.xmlを登録する事で、都度登録する必要がなくなります。\n\n# 手順\n\n## sitemap.xml生成プラグインをインストール\n\n```bash\n$ npm install hexo-generator-seo-friendly-sitemap --save\npackage.jsonをgitに追加します\n$ git add package.json\n```\n\n## _config.ymlに追記\n\n以下の行をHexoプロジェクト直下の_config.ymlに追記する事で、\nhexo generate時にsitemapが作成される様になります。\n\n```yaml\nsitemap:\n  path: sitemap.xml\n```\n\nhexo generateをしてみます\n\n```bash\n$ hexo generate\nINFO  Start processing\nINFO  Files loaded in 614 ms\nINFO  Generated: post-sitemap.xml\nINFO  Generated: sitemap.xml\nINFO  Generated: tag-sitemap.xml\nINFO  Generated: index.html\nINFO  5 files generated in 1.14 s\n```\n\n今回幾つかsitemapが作成された事がわかります。\n\n- post-sitemap.xml\n  - 記事毎のページが記載されたsitemap\n- tag-sitemap.xml\n  - タグ毎のページが記載されたsitemap\n- sitemap.xml\n  - 内容見てもよくわからない(?)\n\n## sitemapをサーチコンソールに登録\n\nsitemapの登録は[ここ](https://search.google.com/search-console/sitemaps)から行えます。\n\n登録に失敗する場合は、\n_config.ymlに記述しているURL部分が間違っている可能性があります。\nこのURLはデプロイ後にアクセスするページのURLを指定しておく必要があります。\n\n以下例\n```\nurl: https://sakkuntyo.github.io\n```\n","slug":"hexo-generate-sitemap","published":1,"updated":"2020-02-09T16:03:02.208Z","_id":"ck6ku49td000o8lvqzkpt5csu","comments":1,"photos":[],"link":"","content":"<p>Google検索エンジンの検索に出すために、<br>記事を追加する度にサーチコンソールにURLを登録していました、<br>sitemap.xmlを登録する事で、都度登録する必要がなくなります。</p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"sitemap-xml生成プラグインをインストール\"><a href=\"#sitemap-xml生成プラグインをインストール\" class=\"headerlink\" title=\"sitemap.xml生成プラグインをインストール\"></a>sitemap.xml生成プラグインをインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-seo-friendly-sitemap --save</span><br><span class=\"line\">package.jsonをgitに追加します</span><br><span class=\"line\">$ git add package.json</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"config-ymlに追記\"><a href=\"#config-ymlに追記\" class=\"headerlink\" title=\"_config.ymlに追記\"></a>_config.ymlに追記</h2><p>以下の行をHexoプロジェクト直下の_config.ymlに追記する事で、<br>hexo generate時にsitemapが作成される様になります。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">sitemap.xml</span></span><br></pre></td></tr></table></figure>\n\n<p>hexo generateをしてみます</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Files loaded <span class=\"keyword\">in</span> 614 ms</span><br><span class=\"line\">INFO  Generated: post-sitemap.xml</span><br><span class=\"line\">INFO  Generated: sitemap.xml</span><br><span class=\"line\">INFO  Generated: tag-sitemap.xml</span><br><span class=\"line\">INFO  Generated: index.html</span><br><span class=\"line\">INFO  5 files generated <span class=\"keyword\">in</span> 1.14 s</span><br></pre></td></tr></table></figure>\n\n<p>今回幾つかsitemapが作成された事がわかります。</p>\n<ul>\n<li>post-sitemap.xml<ul>\n<li>記事毎のページが記載されたsitemap</li>\n</ul>\n</li>\n<li>tag-sitemap.xml<ul>\n<li>タグ毎のページが記載されたsitemap</li>\n</ul>\n</li>\n<li>sitemap.xml<ul>\n<li>内容見てもよくわからない(?)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sitemapをサーチコンソールに登録\"><a href=\"#sitemapをサーチコンソールに登録\" class=\"headerlink\" title=\"sitemapをサーチコンソールに登録\"></a>sitemapをサーチコンソールに登録</h2><p>sitemapの登録は<a href=\"https://search.google.com/search-console/sitemaps\" target=\"_blank\" rel=\"noopener\">ここ</a>から行えます。</p>\n<p>登録に失敗する場合は、<br>_config.ymlに記述しているURL部分が間違っている可能性があります。<br>このURLはデプロイ後にアクセスするページのURLを指定しておく必要があります。</p>\n<p>以下例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https://sakkuntyo.github.io</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>Google検索エンジンの検索に出すために、<br>記事を追加する度にサーチコンソールにURLを登録していました、<br>sitemap.xmlを登録する事で、都度登録する必要がなくなります。</p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"sitemap-xml生成プラグインをインストール\"><a href=\"#sitemap-xml生成プラグインをインストール\" class=\"headerlink\" title=\"sitemap.xml生成プラグインをインストール\"></a>sitemap.xml生成プラグインをインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-seo-friendly-sitemap --save</span><br><span class=\"line\">package.jsonをgitに追加します</span><br><span class=\"line\">$ git add package.json</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"config-ymlに追記\"><a href=\"#config-ymlに追記\" class=\"headerlink\" title=\"_config.ymlに追記\"></a>_config.ymlに追記</h2><p>以下の行をHexoプロジェクト直下の_config.ymlに追記する事で、<br>hexo generate時にsitemapが作成される様になります。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">sitemap.xml</span></span><br></pre></td></tr></table></figure>\n\n<p>hexo generateをしてみます</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Files loaded <span class=\"keyword\">in</span> 614 ms</span><br><span class=\"line\">INFO  Generated: post-sitemap.xml</span><br><span class=\"line\">INFO  Generated: sitemap.xml</span><br><span class=\"line\">INFO  Generated: tag-sitemap.xml</span><br><span class=\"line\">INFO  Generated: index.html</span><br><span class=\"line\">INFO  5 files generated <span class=\"keyword\">in</span> 1.14 s</span><br></pre></td></tr></table></figure>\n\n<p>今回幾つかsitemapが作成された事がわかります。</p>\n<ul>\n<li>post-sitemap.xml<ul>\n<li>記事毎のページが記載されたsitemap</li>\n</ul>\n</li>\n<li>tag-sitemap.xml<ul>\n<li>タグ毎のページが記載されたsitemap</li>\n</ul>\n</li>\n<li>sitemap.xml<ul>\n<li>内容見てもよくわからない(?)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"sitemapをサーチコンソールに登録\"><a href=\"#sitemapをサーチコンソールに登録\" class=\"headerlink\" title=\"sitemapをサーチコンソールに登録\"></a>sitemapをサーチコンソールに登録</h2><p>sitemapの登録は<a href=\"https://search.google.com/search-console/sitemaps\" target=\"_blank\" rel=\"noopener\">ここ</a>から行えます。</p>\n<p>登録に失敗する場合は、<br>_config.ymlに記述しているURL部分が間違っている可能性があります。<br>このURLはデプロイ後にアクセスするページのURLを指定しておく必要があります。</p>\n<p>以下例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url: https://sakkuntyo.github.io</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Laravel開発環境構築【Debian系OS】","date":"2019-11-03T06:26:43.000Z","_content":"\n## 前提環境\n\n- Linux Mint19 Mate\n\n## 手順\n\n### phpをインストール\n\n```bash\n$ sudo apt update\n$ sudo apt install -y php7.2 php7.2-mbstring php7.2-xml php7.2-gd php7.2-zip\n$ sudo apt install -y sqlite3 php7.2-sqlite3 php7.2-mysql\n$ php --version\n$ php -m\n```\n\n### composerをインストール\n\n```bash\n$ curl -sS https://getcomposer.org/installer | php\n$ sudo mv composer.phar /usr/local/bin/composer\n$ sudo chmod +x /usr/local/bin/composer\n$ composer --version\n```\n\n### Laravelをインストール\n\n```bash\n$ composer global require laravel/installer\n```\n\n### パスを通す\n\n```bash\necho export PATH=\"~/.config/composer/vendor/bin:$PATH\" >> ~/.bash_profile\nsource ~/.bash_profile\n```\n### 実際に起動しブラウザで確認\n\n```bash\n$ laravel new test\n$ cd test\n$ php artisan --version\n$ php artisan serve --host 0.0.0.0\nLaravel development server started: http://0.0.0.0:8000\n\n```\n\nブラウザで接続してみると以下の様な画面が表示される\n\n![laravel](/images/laravel-dev-create.png)\n\n","source":"_posts/laravel-build-develop-environment-debian.md","raw":"---\ntitle: Laravel開発環境構築【Debian系OS】\ndate: 2019-11-03 15:26:43\ntags: [php]\n---\n\n## 前提環境\n\n- Linux Mint19 Mate\n\n## 手順\n\n### phpをインストール\n\n```bash\n$ sudo apt update\n$ sudo apt install -y php7.2 php7.2-mbstring php7.2-xml php7.2-gd php7.2-zip\n$ sudo apt install -y sqlite3 php7.2-sqlite3 php7.2-mysql\n$ php --version\n$ php -m\n```\n\n### composerをインストール\n\n```bash\n$ curl -sS https://getcomposer.org/installer | php\n$ sudo mv composer.phar /usr/local/bin/composer\n$ sudo chmod +x /usr/local/bin/composer\n$ composer --version\n```\n\n### Laravelをインストール\n\n```bash\n$ composer global require laravel/installer\n```\n\n### パスを通す\n\n```bash\necho export PATH=\"~/.config/composer/vendor/bin:$PATH\" >> ~/.bash_profile\nsource ~/.bash_profile\n```\n### 実際に起動しブラウザで確認\n\n```bash\n$ laravel new test\n$ cd test\n$ php artisan --version\n$ php artisan serve --host 0.0.0.0\nLaravel development server started: http://0.0.0.0:8000\n\n```\n\nブラウザで接続してみると以下の様な画面が表示される\n\n![laravel](/images/laravel-dev-create.png)\n\n","slug":"laravel-build-develop-environment-debian","published":1,"updated":"2019-11-17T14:34:52.496Z","_id":"ck6ku49te000p8lvqax2frgm3","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前提環境\"><a href=\"#前提環境\" class=\"headerlink\" title=\"前提環境\"></a>前提環境</h2><ul>\n<li>Linux Mint19 Mate</li>\n</ul>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><h3 id=\"phpをインストール\"><a href=\"#phpをインストール\" class=\"headerlink\" title=\"phpをインストール\"></a>phpをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install -y php7.2 php7.2-mbstring php7.2-xml php7.2-gd php7.2-zip</span><br><span class=\"line\">$ sudo apt install -y sqlite3 php7.2-sqlite3 php7.2-mysql</span><br><span class=\"line\">$ php --version</span><br><span class=\"line\">$ php -m</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"composerをインストール\"><a href=\"#composerをインストール\" class=\"headerlink\" title=\"composerをインストール\"></a>composerをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -sS https://getcomposer.org/installer | php</span><br><span class=\"line\">$ sudo mv composer.phar /usr/<span class=\"built_in\">local</span>/bin/composer</span><br><span class=\"line\">$ sudo chmod +x /usr/<span class=\"built_in\">local</span>/bin/composer</span><br><span class=\"line\">$ composer --version</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Laravelをインストール\"><a href=\"#Laravelをインストール\" class=\"headerlink\" title=\"Laravelをインストール\"></a>Laravelをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ composer global require laravel/installer</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"パスを通す\"><a href=\"#パスを通す\" class=\"headerlink\" title=\"パスを通す\"></a>パスを通す</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">export</span> PATH=<span class=\"string\">\"~/.config/composer/vendor/bin:<span class=\"variable\">$PATH</span>\"</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"実際に起動しブラウザで確認\"><a href=\"#実際に起動しブラウザで確認\" class=\"headerlink\" title=\"実際に起動しブラウザで確認\"></a>実際に起動しブラウザで確認</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ laravel new <span class=\"built_in\">test</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span></span><br><span class=\"line\">$ php artisan --version</span><br><span class=\"line\">$ php artisan serve --host 0.0.0.0</span><br><span class=\"line\">Laravel development server started: http://0.0.0.0:8000</span><br></pre></td></tr></table></figure>\n\n<p>ブラウザで接続してみると以下の様な画面が表示される</p>\n<p><img src=\"/images/laravel-dev-create.png\" alt=\"laravel\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"前提環境\"><a href=\"#前提環境\" class=\"headerlink\" title=\"前提環境\"></a>前提環境</h2><ul>\n<li>Linux Mint19 Mate</li>\n</ul>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><h3 id=\"phpをインストール\"><a href=\"#phpをインストール\" class=\"headerlink\" title=\"phpをインストール\"></a>phpをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt update</span><br><span class=\"line\">$ sudo apt install -y php7.2 php7.2-mbstring php7.2-xml php7.2-gd php7.2-zip</span><br><span class=\"line\">$ sudo apt install -y sqlite3 php7.2-sqlite3 php7.2-mysql</span><br><span class=\"line\">$ php --version</span><br><span class=\"line\">$ php -m</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"composerをインストール\"><a href=\"#composerをインストール\" class=\"headerlink\" title=\"composerをインストール\"></a>composerをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -sS https://getcomposer.org/installer | php</span><br><span class=\"line\">$ sudo mv composer.phar /usr/<span class=\"built_in\">local</span>/bin/composer</span><br><span class=\"line\">$ sudo chmod +x /usr/<span class=\"built_in\">local</span>/bin/composer</span><br><span class=\"line\">$ composer --version</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Laravelをインストール\"><a href=\"#Laravelをインストール\" class=\"headerlink\" title=\"Laravelをインストール\"></a>Laravelをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ composer global require laravel/installer</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"パスを通す\"><a href=\"#パスを通す\" class=\"headerlink\" title=\"パスを通す\"></a>パスを通す</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"built_in\">export</span> PATH=<span class=\"string\">\"~/.config/composer/vendor/bin:<span class=\"variable\">$PATH</span>\"</span> &gt;&gt; ~/.bash_profile</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"実際に起動しブラウザで確認\"><a href=\"#実際に起動しブラウザで確認\" class=\"headerlink\" title=\"実際に起動しブラウザで確認\"></a>実際に起動しブラウザで確認</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ laravel new <span class=\"built_in\">test</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span></span><br><span class=\"line\">$ php artisan --version</span><br><span class=\"line\">$ php artisan serve --host 0.0.0.0</span><br><span class=\"line\">Laravel development server started: http://0.0.0.0:8000</span><br></pre></td></tr></table></figure>\n\n<p>ブラウザで接続してみると以下の様な画面が表示される</p>\n<p><img src=\"/images/laravel-dev-create.png\" alt=\"laravel\"></p>\n"},{"layout":"post","title":"nodejsをインストール【Windows・Mac・Linux】","date":"2019-11-15T15:33:17.000Z","_content":"\n## 3OSで同じ手順でできます\n\nWindowsはWSLを入れ、WSLからコマンド操作を行います。\n\n## 手順\n\n### nvmをインストール\n\n```bash\n$ git clone https://github.com/creationix/nvm ~/.nvm\n```\n\n### パスを通す\n\n```bash\n$ source ~/.nvm/nvm.sh\n```\n\n### 次回ターミナル起動時に自動でパスを通す\n\n```bash\n$ echo \"source ~/.nvm/nvm.sh\" >> ~/.bashrc\n```\n\n### nodejsとnpmをインストール\n\n```bash\n$ nvm install --lts\n# バージョンを指定するのであれば --lts の代わりにバージョンを入力\n```\n\n### nodejsのバージョンを確認\n\n```bash\n$ node -v\n```\n\n### npmのバージョンを確認\n\n```bash\n$ npm -v\n```\n","source":"_posts/linux-mac-windows-nodejs-install-js.md","raw":"---\nlayout: post\ntitle: nodejsをインストール【Windows・Mac・Linux】\ndate: 2019-11-16 00:33:17\ntags: [windows,mac,mac,nodejs,map]\n---\n\n## 3OSで同じ手順でできます\n\nWindowsはWSLを入れ、WSLからコマンド操作を行います。\n\n## 手順\n\n### nvmをインストール\n\n```bash\n$ git clone https://github.com/creationix/nvm ~/.nvm\n```\n\n### パスを通す\n\n```bash\n$ source ~/.nvm/nvm.sh\n```\n\n### 次回ターミナル起動時に自動でパスを通す\n\n```bash\n$ echo \"source ~/.nvm/nvm.sh\" >> ~/.bashrc\n```\n\n### nodejsとnpmをインストール\n\n```bash\n$ nvm install --lts\n# バージョンを指定するのであれば --lts の代わりにバージョンを入力\n```\n\n### nodejsのバージョンを確認\n\n```bash\n$ node -v\n```\n\n### npmのバージョンを確認\n\n```bash\n$ npm -v\n```\n","slug":"linux-mac-windows-nodejs-install-js","published":1,"updated":"2020-02-09T16:04:53.881Z","_id":"ck6ku49tf000q8lvq72lnv06l","comments":1,"photos":[],"link":"","content":"<h2 id=\"3OSで同じ手順でできます\"><a href=\"#3OSで同じ手順でできます\" class=\"headerlink\" title=\"3OSで同じ手順でできます\"></a>3OSで同じ手順でできます</h2><p>WindowsはWSLを入れ、WSLからコマンド操作を行います。</p>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><h3 id=\"nvmをインストール\"><a href=\"#nvmをインストール\" class=\"headerlink\" title=\"nvmをインストール\"></a>nvmをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/creationix/nvm ~/.nvm</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"パスを通す\"><a href=\"#パスを通す\" class=\"headerlink\" title=\"パスを通す\"></a>パスを通す</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.nvm/nvm.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"次回ターミナル起動時に自動でパスを通す\"><a href=\"#次回ターミナル起動時に自動でパスを通す\" class=\"headerlink\" title=\"次回ターミナル起動時に自動でパスを通す\"></a>次回ターミナル起動時に自動でパスを通す</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"source ~/.nvm/nvm.sh\"</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nodejsとnpmをインストール\"><a href=\"#nodejsとnpmをインストール\" class=\"headerlink\" title=\"nodejsとnpmをインストール\"></a>nodejsとnpmをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install --lts</span><br><span class=\"line\"><span class=\"comment\"># バージョンを指定するのであれば --lts の代わりにバージョンを入力</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nodejsのバージョンを確認\"><a href=\"#nodejsのバージョンを確認\" class=\"headerlink\" title=\"nodejsのバージョンを確認\"></a>nodejsのバージョンを確認</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"npmのバージョンを確認\"><a href=\"#npmのバージョンを確認\" class=\"headerlink\" title=\"npmのバージョンを確認\"></a>npmのバージョンを確認</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"3OSで同じ手順でできます\"><a href=\"#3OSで同じ手順でできます\" class=\"headerlink\" title=\"3OSで同じ手順でできます\"></a>3OSで同じ手順でできます</h2><p>WindowsはWSLを入れ、WSLからコマンド操作を行います。</p>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><h3 id=\"nvmをインストール\"><a href=\"#nvmをインストール\" class=\"headerlink\" title=\"nvmをインストール\"></a>nvmをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/creationix/nvm ~/.nvm</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"パスを通す\"><a href=\"#パスを通す\" class=\"headerlink\" title=\"パスを通す\"></a>パスを通す</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.nvm/nvm.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"次回ターミナル起動時に自動でパスを通す\"><a href=\"#次回ターミナル起動時に自動でパスを通す\" class=\"headerlink\" title=\"次回ターミナル起動時に自動でパスを通す\"></a>次回ターミナル起動時に自動でパスを通す</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"source ~/.nvm/nvm.sh\"</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nodejsとnpmをインストール\"><a href=\"#nodejsとnpmをインストール\" class=\"headerlink\" title=\"nodejsとnpmをインストール\"></a>nodejsとnpmをインストール</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install --lts</span><br><span class=\"line\"><span class=\"comment\"># バージョンを指定するのであれば --lts の代わりにバージョンを入力</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nodejsのバージョンを確認\"><a href=\"#nodejsのバージョンを確認\" class=\"headerlink\" title=\"nodejsのバージョンを確認\"></a>nodejsのバージョンを確認</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"npmのバージョンを確認\"><a href=\"#npmのバージョンを確認\" class=\"headerlink\" title=\"npmのバージョンを確認\"></a>npmのバージョンを確認</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm -v</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"minicondaでpython3をインストール","date":"2020-02-08T19:52:22.000Z","_content":"\nanacondaとは、データサイエンティスト向けのpythonパッケージを含んだパッケージマネージャの様な物です。\n\nそのため、沢山のツールがインストールされてしまうため、\n3GBの容量を使用してしまったり、\nプラットフォームに予めインストールされている実行ファイルとの競合を起こす事があります。\n\nminicondaとは、anacondaからそれらのパッケージを除外したパッケージマネージャが主な機能となります。\n\n# 環境\n\n- Ubuntu 18.04\n\n# 手順\n\n## minicondaをインストールする\n\n```bash\n$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n$ ./Miniconda3-latest-Linux-x86_64.sh\nこの後、以下操作でインストールが完了します。\n1.Enter\n2.yesを入力後、Enter\n3.Enter\n4.yesを入力後、Enter\n\nbashを再起動\n$ exec $SHELL -l\n```\n\nインストール中に、以下の様なリストが表示されますが、これらのツールも同時にインストールされます。\n\n```bash\nThe following NEW packages will be INSTALLED:                                           \n                                                                                        \n  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main                         \n  asn1crypto         pkgs/main/linux-64::asn1crypto-1.2.0-py37_0                        \n  ca-certificates    pkgs/main/linux-64::ca-certificates-2019.10.16-0                   \n  certifi            pkgs/main/linux-64::certifi-2019.9.11-py37_0                       \n  cffi               pkgs/main/linux-64::cffi-1.13.0-py37h2e261b9_0                     \n  chardet            pkgs/main/linux-64::chardet-3.0.4-py37_1003                        \n  conda              pkgs/main/linux-64::conda-4.7.12-py37_0                            \n  conda-package-han~ pkgs/main/linux-64::conda-package-handling-1.6.0-py37h7b6447c_0    \n  cryptography       pkgs/main/linux-64::cryptography-2.8-py37h1ba5d50_0                \n  idna               pkgs/main/linux-64::idna-2.8-py37_0                                \n  libedit            pkgs/main/linux-64::libedit-3.1.20181209-hc058e9b_0                \n  libffi             pkgs/main/linux-64::libffi-3.2.1-hd88cf55_4                        \n  libgcc-ng          pkgs/main/linux-64::libgcc-ng-9.1.0-hdf63c60_0                     \n  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-9.1.0-hdf63c60_0                  \n  ncurses            pkgs/main/linux-64::ncurses-6.1-he6710b0_1                         \n  openssl            pkgs/main/linux-64::openssl-1.1.1d-h7b6447c_3                      \n  pip                pkgs/main/linux-64::pip-19.3.1-py37_0                              \n  pycosat            pkgs/main/linux-64::pycosat-0.6.3-py37h14c3975_0                   \n  pycparser          pkgs/main/linux-64::pycparser-2.19-py37_0                          \n  pyopenssl          pkgs/main/linux-64::pyopenssl-19.0.0-py37_0                        \n  pysocks            pkgs/main/linux-64::pysocks-1.7.1-py37_0                           \n  python             pkgs/main/linux-64::python-3.7.4-h265db76_1                        \n  readline           pkgs/main/linux-64::readline-7.0-h7b6447c_5                        \n  requests           pkgs/main/linux-64::requests-2.22.0-py37_0                         \n  ruamel_yaml        pkgs/main/linux-64::ruamel_yaml-0.15.46-py37h14c3975_0             \n  setuptools         pkgs/main/linux-64::setuptools-41.4.0-py37_0                       \n  six                pkgs/main/linux-64::six-1.12.0-py37_0                              \n  sqlite             pkgs/main/linux-64::sqlite-3.30.0-h7b6447c_0                       \n  tk                 pkgs/main/linux-64::tk-8.6.8-hbc83047_0                            \n  tqdm               pkgs/main/noarch::tqdm-4.36.1-py_0                                 \n  urllib3            pkgs/main/linux-64::urllib3-1.24.2-py37_0                          \n  wheel              pkgs/main/linux-64::wheel-0.33.6-py37_0                            \n  xz                 pkgs/main/linux-64::xz-5.2.4-h14c3975_4                            \n  yaml               pkgs/main/linux-64::yaml-0.1.7-had09818_2                          \n  zlib               pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3\n```\n\n## pythonがインストールされている事を確認\n\n```bash\n$ python -V\nPython 3.7.4\n```\n\n## pipがインストールされている事を確認\n\n```bash\npip -V\n$ pip 19.3.1 from /root/miniconda3/lib/python3.7/site-packages/pip (python 3.7)\n```\n\n## アンインストール\n\n~/miniconda3フォルダ以下に全てインストールされるため、以下できます。\n\n```bash\n$ rm -r ~/miniconda3\n\nbashを再起動\n$ exec $SHELL -l\n```\n","source":"_posts/miniconda-python.md","raw":"---\nlayout: post\ntitle: minicondaでpython3をインストール\ndate: 2020-02-09 04:52:22\ntags: [miniconda]\n---\n\nanacondaとは、データサイエンティスト向けのpythonパッケージを含んだパッケージマネージャの様な物です。\n\nそのため、沢山のツールがインストールされてしまうため、\n3GBの容量を使用してしまったり、\nプラットフォームに予めインストールされている実行ファイルとの競合を起こす事があります。\n\nminicondaとは、anacondaからそれらのパッケージを除外したパッケージマネージャが主な機能となります。\n\n# 環境\n\n- Ubuntu 18.04\n\n# 手順\n\n## minicondaをインストールする\n\n```bash\n$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n$ ./Miniconda3-latest-Linux-x86_64.sh\nこの後、以下操作でインストールが完了します。\n1.Enter\n2.yesを入力後、Enter\n3.Enter\n4.yesを入力後、Enter\n\nbashを再起動\n$ exec $SHELL -l\n```\n\nインストール中に、以下の様なリストが表示されますが、これらのツールも同時にインストールされます。\n\n```bash\nThe following NEW packages will be INSTALLED:                                           \n                                                                                        \n  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main                         \n  asn1crypto         pkgs/main/linux-64::asn1crypto-1.2.0-py37_0                        \n  ca-certificates    pkgs/main/linux-64::ca-certificates-2019.10.16-0                   \n  certifi            pkgs/main/linux-64::certifi-2019.9.11-py37_0                       \n  cffi               pkgs/main/linux-64::cffi-1.13.0-py37h2e261b9_0                     \n  chardet            pkgs/main/linux-64::chardet-3.0.4-py37_1003                        \n  conda              pkgs/main/linux-64::conda-4.7.12-py37_0                            \n  conda-package-han~ pkgs/main/linux-64::conda-package-handling-1.6.0-py37h7b6447c_0    \n  cryptography       pkgs/main/linux-64::cryptography-2.8-py37h1ba5d50_0                \n  idna               pkgs/main/linux-64::idna-2.8-py37_0                                \n  libedit            pkgs/main/linux-64::libedit-3.1.20181209-hc058e9b_0                \n  libffi             pkgs/main/linux-64::libffi-3.2.1-hd88cf55_4                        \n  libgcc-ng          pkgs/main/linux-64::libgcc-ng-9.1.0-hdf63c60_0                     \n  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-9.1.0-hdf63c60_0                  \n  ncurses            pkgs/main/linux-64::ncurses-6.1-he6710b0_1                         \n  openssl            pkgs/main/linux-64::openssl-1.1.1d-h7b6447c_3                      \n  pip                pkgs/main/linux-64::pip-19.3.1-py37_0                              \n  pycosat            pkgs/main/linux-64::pycosat-0.6.3-py37h14c3975_0                   \n  pycparser          pkgs/main/linux-64::pycparser-2.19-py37_0                          \n  pyopenssl          pkgs/main/linux-64::pyopenssl-19.0.0-py37_0                        \n  pysocks            pkgs/main/linux-64::pysocks-1.7.1-py37_0                           \n  python             pkgs/main/linux-64::python-3.7.4-h265db76_1                        \n  readline           pkgs/main/linux-64::readline-7.0-h7b6447c_5                        \n  requests           pkgs/main/linux-64::requests-2.22.0-py37_0                         \n  ruamel_yaml        pkgs/main/linux-64::ruamel_yaml-0.15.46-py37h14c3975_0             \n  setuptools         pkgs/main/linux-64::setuptools-41.4.0-py37_0                       \n  six                pkgs/main/linux-64::six-1.12.0-py37_0                              \n  sqlite             pkgs/main/linux-64::sqlite-3.30.0-h7b6447c_0                       \n  tk                 pkgs/main/linux-64::tk-8.6.8-hbc83047_0                            \n  tqdm               pkgs/main/noarch::tqdm-4.36.1-py_0                                 \n  urllib3            pkgs/main/linux-64::urllib3-1.24.2-py37_0                          \n  wheel              pkgs/main/linux-64::wheel-0.33.6-py37_0                            \n  xz                 pkgs/main/linux-64::xz-5.2.4-h14c3975_4                            \n  yaml               pkgs/main/linux-64::yaml-0.1.7-had09818_2                          \n  zlib               pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3\n```\n\n## pythonがインストールされている事を確認\n\n```bash\n$ python -V\nPython 3.7.4\n```\n\n## pipがインストールされている事を確認\n\n```bash\npip -V\n$ pip 19.3.1 from /root/miniconda3/lib/python3.7/site-packages/pip (python 3.7)\n```\n\n## アンインストール\n\n~/miniconda3フォルダ以下に全てインストールされるため、以下できます。\n\n```bash\n$ rm -r ~/miniconda3\n\nbashを再起動\n$ exec $SHELL -l\n```\n","slug":"miniconda-python","published":1,"updated":"2020-02-08T20:29:08.504Z","_id":"ck6ku49tg000s8lvq5ptxixie","comments":1,"photos":[],"link":"","content":"<p>anacondaとは、データサイエンティスト向けのpythonパッケージを含んだパッケージマネージャの様な物です。</p>\n<p>そのため、沢山のツールがインストールされてしまうため、<br>3GBの容量を使用してしまったり、<br>プラットフォームに予めインストールされている実行ファイルとの競合を起こす事があります。</p>\n<p>minicondaとは、anacondaからそれらのパッケージを除外したパッケージマネージャが主な機能となります。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"minicondaをインストールする\"><a href=\"#minicondaをインストールする\" class=\"headerlink\" title=\"minicondaをインストールする\"></a>minicondaをインストールする</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">$ ./Miniconda3-latest-Linux-x86_64.sh</span><br><span class=\"line\">この後、以下操作でインストールが完了します。</span><br><span class=\"line\">1.Enter</span><br><span class=\"line\">2.yesを入力後、Enter</span><br><span class=\"line\">3.Enter</span><br><span class=\"line\">4.yesを入力後、Enter</span><br><span class=\"line\"></span><br><span class=\"line\">bashを再起動</span><br><span class=\"line\">$ <span class=\"built_in\">exec</span> <span class=\"variable\">$SHELL</span> -l</span><br></pre></td></tr></table></figure>\n\n<p>インストール中に、以下の様なリストが表示されますが、これらのツールも同時にインストールされます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The following NEW packages will be INSTALLED:                                           </span><br><span class=\"line\">                                                                                        </span><br><span class=\"line\">  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main                         </span><br><span class=\"line\">  asn1crypto         pkgs/main/linux-64::asn1crypto-1.2.0-py37_0                        </span><br><span class=\"line\">  ca-certificates    pkgs/main/linux-64::ca-certificates-2019.10.16-0                   </span><br><span class=\"line\">  certifi            pkgs/main/linux-64::certifi-2019.9.11-py37_0                       </span><br><span class=\"line\">  cffi               pkgs/main/linux-64::cffi-1.13.0-py37h2e261b9_0                     </span><br><span class=\"line\">  chardet            pkgs/main/linux-64::chardet-3.0.4-py37_1003                        </span><br><span class=\"line\">  conda              pkgs/main/linux-64::conda-4.7.12-py37_0                            </span><br><span class=\"line\">  conda-package-han~ pkgs/main/linux-64::conda-package-handling-1.6.0-py37h7b6447c_0    </span><br><span class=\"line\">  cryptography       pkgs/main/linux-64::cryptography-2.8-py37h1ba5d50_0                </span><br><span class=\"line\">  idna               pkgs/main/linux-64::idna-2.8-py37_0                                </span><br><span class=\"line\">  libedit            pkgs/main/linux-64::libedit-3.1.20181209-hc058e9b_0                </span><br><span class=\"line\">  libffi             pkgs/main/linux-64::libffi-3.2.1-hd88cf55_4                        </span><br><span class=\"line\">  libgcc-ng          pkgs/main/linux-64::libgcc-ng-9.1.0-hdf63c60_0                     </span><br><span class=\"line\">  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-9.1.0-hdf63c60_0                  </span><br><span class=\"line\">  ncurses            pkgs/main/linux-64::ncurses-6.1-he6710b0_1                         </span><br><span class=\"line\">  openssl            pkgs/main/linux-64::openssl-1.1.1d-h7b6447c_3                      </span><br><span class=\"line\">  pip                pkgs/main/linux-64::pip-19.3.1-py37_0                              </span><br><span class=\"line\">  pycosat            pkgs/main/linux-64::pycosat-0.6.3-py37h14c3975_0                   </span><br><span class=\"line\">  pycparser          pkgs/main/linux-64::pycparser-2.19-py37_0                          </span><br><span class=\"line\">  pyopenssl          pkgs/main/linux-64::pyopenssl-19.0.0-py37_0                        </span><br><span class=\"line\">  pysocks            pkgs/main/linux-64::pysocks-1.7.1-py37_0                           </span><br><span class=\"line\">  python             pkgs/main/linux-64::python-3.7.4-h265db76_1                        </span><br><span class=\"line\">  readline           pkgs/main/linux-64::readline-7.0-h7b6447c_5                        </span><br><span class=\"line\">  requests           pkgs/main/linux-64::requests-2.22.0-py37_0                         </span><br><span class=\"line\">  ruamel_yaml        pkgs/main/linux-64::ruamel_yaml-0.15.46-py37h14c3975_0             </span><br><span class=\"line\">  setuptools         pkgs/main/linux-64::setuptools-41.4.0-py37_0                       </span><br><span class=\"line\">  six                pkgs/main/linux-64::six-1.12.0-py37_0                              </span><br><span class=\"line\">  sqlite             pkgs/main/linux-64::sqlite-3.30.0-h7b6447c_0                       </span><br><span class=\"line\">  tk                 pkgs/main/linux-64::tk-8.6.8-hbc83047_0                            </span><br><span class=\"line\">  tqdm               pkgs/main/noarch::tqdm-4.36.1-py_0                                 </span><br><span class=\"line\">  urllib3            pkgs/main/linux-64::urllib3-1.24.2-py37_0                          </span><br><span class=\"line\">  wheel              pkgs/main/linux-64::wheel-0.33.6-py37_0                            </span><br><span class=\"line\">  xz                 pkgs/main/linux-64::xz-5.2.4-h14c3975_4                            </span><br><span class=\"line\">  yaml               pkgs/main/linux-64::yaml-0.1.7-had09818_2                          </span><br><span class=\"line\">  zlib               pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pythonがインストールされている事を確認\"><a href=\"#pythonがインストールされている事を確認\" class=\"headerlink\" title=\"pythonがインストールされている事を確認\"></a>pythonがインストールされている事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -V</span><br><span class=\"line\">Python 3.7.4</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pipがインストールされている事を確認\"><a href=\"#pipがインストールされている事を確認\" class=\"headerlink\" title=\"pipがインストールされている事を確認\"></a>pipがインストールされている事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip -V</span><br><span class=\"line\">$ pip 19.3.1 from /root/miniconda3/lib/python3.7/site-packages/pip (python 3.7)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"アンインストール\"><a href=\"#アンインストール\" class=\"headerlink\" title=\"アンインストール\"></a>アンインストール</h2><p>~/miniconda3フォルダ以下に全てインストールされるため、以下できます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -r ~/miniconda3</span><br><span class=\"line\"></span><br><span class=\"line\">bashを再起動</span><br><span class=\"line\">$ <span class=\"built_in\">exec</span> <span class=\"variable\">$SHELL</span> -l</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>anacondaとは、データサイエンティスト向けのpythonパッケージを含んだパッケージマネージャの様な物です。</p>\n<p>そのため、沢山のツールがインストールされてしまうため、<br>3GBの容量を使用してしまったり、<br>プラットフォームに予めインストールされている実行ファイルとの競合を起こす事があります。</p>\n<p>minicondaとは、anacondaからそれらのパッケージを除外したパッケージマネージャが主な機能となります。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"minicondaをインストールする\"><a href=\"#minicondaをインストールする\" class=\"headerlink\" title=\"minicondaをインストールする\"></a>minicondaをインストールする</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br><span class=\"line\"></span><br><span class=\"line\">$ ./Miniconda3-latest-Linux-x86_64.sh</span><br><span class=\"line\">この後、以下操作でインストールが完了します。</span><br><span class=\"line\">1.Enter</span><br><span class=\"line\">2.yesを入力後、Enter</span><br><span class=\"line\">3.Enter</span><br><span class=\"line\">4.yesを入力後、Enter</span><br><span class=\"line\"></span><br><span class=\"line\">bashを再起動</span><br><span class=\"line\">$ <span class=\"built_in\">exec</span> <span class=\"variable\">$SHELL</span> -l</span><br></pre></td></tr></table></figure>\n\n<p>インストール中に、以下の様なリストが表示されますが、これらのツールも同時にインストールされます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The following NEW packages will be INSTALLED:                                           </span><br><span class=\"line\">                                                                                        </span><br><span class=\"line\">  _libgcc_mutex      pkgs/main/linux-64::_libgcc_mutex-0.1-main                         </span><br><span class=\"line\">  asn1crypto         pkgs/main/linux-64::asn1crypto-1.2.0-py37_0                        </span><br><span class=\"line\">  ca-certificates    pkgs/main/linux-64::ca-certificates-2019.10.16-0                   </span><br><span class=\"line\">  certifi            pkgs/main/linux-64::certifi-2019.9.11-py37_0                       </span><br><span class=\"line\">  cffi               pkgs/main/linux-64::cffi-1.13.0-py37h2e261b9_0                     </span><br><span class=\"line\">  chardet            pkgs/main/linux-64::chardet-3.0.4-py37_1003                        </span><br><span class=\"line\">  conda              pkgs/main/linux-64::conda-4.7.12-py37_0                            </span><br><span class=\"line\">  conda-package-han~ pkgs/main/linux-64::conda-package-handling-1.6.0-py37h7b6447c_0    </span><br><span class=\"line\">  cryptography       pkgs/main/linux-64::cryptography-2.8-py37h1ba5d50_0                </span><br><span class=\"line\">  idna               pkgs/main/linux-64::idna-2.8-py37_0                                </span><br><span class=\"line\">  libedit            pkgs/main/linux-64::libedit-3.1.20181209-hc058e9b_0                </span><br><span class=\"line\">  libffi             pkgs/main/linux-64::libffi-3.2.1-hd88cf55_4                        </span><br><span class=\"line\">  libgcc-ng          pkgs/main/linux-64::libgcc-ng-9.1.0-hdf63c60_0                     </span><br><span class=\"line\">  libstdcxx-ng       pkgs/main/linux-64::libstdcxx-ng-9.1.0-hdf63c60_0                  </span><br><span class=\"line\">  ncurses            pkgs/main/linux-64::ncurses-6.1-he6710b0_1                         </span><br><span class=\"line\">  openssl            pkgs/main/linux-64::openssl-1.1.1d-h7b6447c_3                      </span><br><span class=\"line\">  pip                pkgs/main/linux-64::pip-19.3.1-py37_0                              </span><br><span class=\"line\">  pycosat            pkgs/main/linux-64::pycosat-0.6.3-py37h14c3975_0                   </span><br><span class=\"line\">  pycparser          pkgs/main/linux-64::pycparser-2.19-py37_0                          </span><br><span class=\"line\">  pyopenssl          pkgs/main/linux-64::pyopenssl-19.0.0-py37_0                        </span><br><span class=\"line\">  pysocks            pkgs/main/linux-64::pysocks-1.7.1-py37_0                           </span><br><span class=\"line\">  python             pkgs/main/linux-64::python-3.7.4-h265db76_1                        </span><br><span class=\"line\">  readline           pkgs/main/linux-64::readline-7.0-h7b6447c_5                        </span><br><span class=\"line\">  requests           pkgs/main/linux-64::requests-2.22.0-py37_0                         </span><br><span class=\"line\">  ruamel_yaml        pkgs/main/linux-64::ruamel_yaml-0.15.46-py37h14c3975_0             </span><br><span class=\"line\">  setuptools         pkgs/main/linux-64::setuptools-41.4.0-py37_0                       </span><br><span class=\"line\">  six                pkgs/main/linux-64::six-1.12.0-py37_0                              </span><br><span class=\"line\">  sqlite             pkgs/main/linux-64::sqlite-3.30.0-h7b6447c_0                       </span><br><span class=\"line\">  tk                 pkgs/main/linux-64::tk-8.6.8-hbc83047_0                            </span><br><span class=\"line\">  tqdm               pkgs/main/noarch::tqdm-4.36.1-py_0                                 </span><br><span class=\"line\">  urllib3            pkgs/main/linux-64::urllib3-1.24.2-py37_0                          </span><br><span class=\"line\">  wheel              pkgs/main/linux-64::wheel-0.33.6-py37_0                            </span><br><span class=\"line\">  xz                 pkgs/main/linux-64::xz-5.2.4-h14c3975_4                            </span><br><span class=\"line\">  yaml               pkgs/main/linux-64::yaml-0.1.7-had09818_2                          </span><br><span class=\"line\">  zlib               pkgs/main/linux-64::zlib-1.2.11-h7b6447c_3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pythonがインストールされている事を確認\"><a href=\"#pythonがインストールされている事を確認\" class=\"headerlink\" title=\"pythonがインストールされている事を確認\"></a>pythonがインストールされている事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -V</span><br><span class=\"line\">Python 3.7.4</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"pipがインストールされている事を確認\"><a href=\"#pipがインストールされている事を確認\" class=\"headerlink\" title=\"pipがインストールされている事を確認\"></a>pipがインストールされている事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip -V</span><br><span class=\"line\">$ pip 19.3.1 from /root/miniconda3/lib/python3.7/site-packages/pip (python 3.7)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"アンインストール\"><a href=\"#アンインストール\" class=\"headerlink\" title=\"アンインストール\"></a>アンインストール</h2><p>~/miniconda3フォルダ以下に全てインストールされるため、以下できます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -r ~/miniconda3</span><br><span class=\"line\"></span><br><span class=\"line\">bashを再起動</span><br><span class=\"line\">$ <span class=\"built_in\">exec</span> <span class=\"variable\">$SHELL</span> -l</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"ターミナル上でパフォーマンスを確認","date":"2020-02-05T15:43:27.000Z","_content":"\n# 環境\n\n- Ubuntu 18.04\n\n# インストール\n\n```bash\n$ apt update\n$ apt install nmon -y\n```\n\n# 使い方\n\n## 起動\n\n```bash\n$ nmon\n```\n\n![nmon](/images/nmon.png)\n\n## 各パフォーマンスを確認する\n\n各操作はコマンドで行います。\n\n### CPU\n\nC\n\n![nmon1](/images/nmon1.png)\n\n### メモリ\n\nM\n\n![nmon2](/images/nmon2.png)\n\n### DISK I/O\n\nD\n\n### プロセス\n\nt\n\n![nmon3](/images/nmon3.png)\n\n### ネットワーク\n\nn\n\n![nmon4](/images/nmon4.png)\n\n### システムリソースビュー\n\nr\n\n![nmon5](/images/nmon5.png)\n\n### 終了\n\nCtrl-C\n","source":"_posts/nmon.md","raw":"---\nlayout: post\ntitle: ターミナル上でパフォーマンスを確認\ndate: 2020-02-06 00:43:27\ntags: [nmon]\n---\n\n# 環境\n\n- Ubuntu 18.04\n\n# インストール\n\n```bash\n$ apt update\n$ apt install nmon -y\n```\n\n# 使い方\n\n## 起動\n\n```bash\n$ nmon\n```\n\n![nmon](/images/nmon.png)\n\n## 各パフォーマンスを確認する\n\n各操作はコマンドで行います。\n\n### CPU\n\nC\n\n![nmon1](/images/nmon1.png)\n\n### メモリ\n\nM\n\n![nmon2](/images/nmon2.png)\n\n### DISK I/O\n\nD\n\n### プロセス\n\nt\n\n![nmon3](/images/nmon3.png)\n\n### ネットワーク\n\nn\n\n![nmon4](/images/nmon4.png)\n\n### システムリソースビュー\n\nr\n\n![nmon5](/images/nmon5.png)\n\n### 終了\n\nCtrl-C\n","slug":"nmon","published":1,"updated":"2020-02-09T16:02:32.032Z","_id":"ck6ku49th000t8lvq2v0wjqgc","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\">$ apt install nmon -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"起動\"><a href=\"#起動\" class=\"headerlink\" title=\"起動\"></a>起動</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nmon</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/nmon.png\" alt=\"nmon\"></p>\n<h2 id=\"各パフォーマンスを確認する\"><a href=\"#各パフォーマンスを確認する\" class=\"headerlink\" title=\"各パフォーマンスを確認する\"></a>各パフォーマンスを確認する</h2><p>各操作はコマンドで行います。</p>\n<h3 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h3><p>C</p>\n<p><img src=\"/images/nmon1.png\" alt=\"nmon1\"></p>\n<h3 id=\"メモリ\"><a href=\"#メモリ\" class=\"headerlink\" title=\"メモリ\"></a>メモリ</h3><p>M</p>\n<p><img src=\"/images/nmon2.png\" alt=\"nmon2\"></p>\n<h3 id=\"DISK-I-O\"><a href=\"#DISK-I-O\" class=\"headerlink\" title=\"DISK I/O\"></a>DISK I/O</h3><p>D</p>\n<h3 id=\"プロセス\"><a href=\"#プロセス\" class=\"headerlink\" title=\"プロセス\"></a>プロセス</h3><p>t</p>\n<p><img src=\"/images/nmon3.png\" alt=\"nmon3\"></p>\n<h3 id=\"ネットワーク\"><a href=\"#ネットワーク\" class=\"headerlink\" title=\"ネットワーク\"></a>ネットワーク</h3><p>n</p>\n<p><img src=\"/images/nmon4.png\" alt=\"nmon4\"></p>\n<h3 id=\"システムリソースビュー\"><a href=\"#システムリソースビュー\" class=\"headerlink\" title=\"システムリソースビュー\"></a>システムリソースビュー</h3><p>r</p>\n<p><img src=\"/images/nmon5.png\" alt=\"nmon5\"></p>\n<h3 id=\"終了\"><a href=\"#終了\" class=\"headerlink\" title=\"終了\"></a>終了</h3><p>Ctrl-C</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\">$ apt install nmon -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"起動\"><a href=\"#起動\" class=\"headerlink\" title=\"起動\"></a>起動</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nmon</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/nmon.png\" alt=\"nmon\"></p>\n<h2 id=\"各パフォーマンスを確認する\"><a href=\"#各パフォーマンスを確認する\" class=\"headerlink\" title=\"各パフォーマンスを確認する\"></a>各パフォーマンスを確認する</h2><p>各操作はコマンドで行います。</p>\n<h3 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h3><p>C</p>\n<p><img src=\"/images/nmon1.png\" alt=\"nmon1\"></p>\n<h3 id=\"メモリ\"><a href=\"#メモリ\" class=\"headerlink\" title=\"メモリ\"></a>メモリ</h3><p>M</p>\n<p><img src=\"/images/nmon2.png\" alt=\"nmon2\"></p>\n<h3 id=\"DISK-I-O\"><a href=\"#DISK-I-O\" class=\"headerlink\" title=\"DISK I/O\"></a>DISK I/O</h3><p>D</p>\n<h3 id=\"プロセス\"><a href=\"#プロセス\" class=\"headerlink\" title=\"プロセス\"></a>プロセス</h3><p>t</p>\n<p><img src=\"/images/nmon3.png\" alt=\"nmon3\"></p>\n<h3 id=\"ネットワーク\"><a href=\"#ネットワーク\" class=\"headerlink\" title=\"ネットワーク\"></a>ネットワーク</h3><p>n</p>\n<p><img src=\"/images/nmon4.png\" alt=\"nmon4\"></p>\n<h3 id=\"システムリソースビュー\"><a href=\"#システムリソースビュー\" class=\"headerlink\" title=\"システムリソースビュー\"></a>システムリソースビュー</h3><p>r</p>\n<p><img src=\"/images/nmon5.png\" alt=\"nmon5\"></p>\n<h3 id=\"終了\"><a href=\"#終了\" class=\"headerlink\" title=\"終了\"></a>終了</h3><p>Ctrl-C</p>\n"},{"layout":"post","title":"Neovim + vim-plug + vim-lspでLanguage Server Protocolを利用","date":"2020-02-02T14:59:14.000Z","_content":"\nvim-lspをインストールする所まで\nこの手順では、python3.7.2をインストールするためにpyenvを入れています\n\n# 環境\n\n- Ubuntu18.04\n\n# 手順\n\n## Pythonとpipをインストールする\n\n~/.bashrcに以下を追記する\n\n```bash\n## pyenv init and install\nPYENV_ROOT=\"${HOME}/.pyenv/bin\"\nPATH=\"${PATH}:${PYENV_ROOT}\"\npyenv --version > /dev/null || {\n  git clone https://github.com/pyenv/pyenv ${HOME}/.pyenv\n  sudo ${HOME}/.pyenv/plugins/python-build/install.sh\n  pyenv install 3.7.2\n  pyenv rehash\n  pyenv global 3.7.2\n}\neval \"$(pyenv init -)\"\n```\n\n~/.bashrcを読み込み直す\n\n```bash\n$ source ~/.bashrc\n```\n\n## Neovimをインストールする\n\n~/.bashrcに以下を追記する\n\n```bash\n## neovim init and install\nXDG_CONFIG_HOME=\"${HOME}/.config\"\nXDG_CACHE_HOME=\"${HOME}/.cache\"\nnvim --version > /dev/null || {\n  sudo add-apt-repository ppa:neovim-ppa/stable -y\n  sudo apt-get update\n  sudo apt-get install neovim -y\n  mkdir -p ${XDG_CONFIG_HOME}/nvim\n  touch ${XDG_CONFIG_HOME}/nvim/init.vim\n}\npip install neovim\n```\n\n~/.bashrcを読み込みなおす\n```bash\n$ source ~/.bashrc\n```\n\n## vim-lspをインストールする\n\n~/.config/nvim/init.vimを以下の内容にする\n\n```vimscript\nif has('vim_starting')\n  set rtp+=~/.vim/plugged/vim-plug\n  if !isdirectory(expand('~/.vim/plugged/vim-plug'))\n    echo 'install vim-plug...'\n    call system('mkdir -p ~/.vim/plugged/vim-plug')\n    call system('git clone https://github.com/junegunn/vim-plug.git ~/.vim/plugged/vim-plug/autoload')\n  end\nendif\n\ncall plug#begin('~/.vim/plugged')\n  Plug 'junegunn/vim-plug',{'dir': '~/.vim/plugged/vim-plug/autoload'}\n  Plug 'prabirshrestha/async.vim'\n  Plug 'prabirshrestha/vim-lsp'\n  Plug 'mattn/vim-lsp-settings'\ncall plug#end()\n```\n\n上記設定ではNeovim起動時にvim-plugが無ければインストール、\nその後async.vim,vim-lsp,vim-lsp-settingsをインストールしています。\n\nNeovimを起動\n\n```bash\n$ nvim\n```\n\nコマンド「:PlugInstall」を実行し、上記プラグインをインストールする\n\nその後「:PlugStatus」を実行し、全てOKになっていれば問題なし、qキーでステータス画面を抜ける\n\nnodejsやgolang、pythonのlspをインストールする場合は、\ninit.vimに設定を追記、必要なモジュールをインストールするなど、それぞれlspに合わせた設定が必要となる\n","source":"_posts/neovim-vim-lsp.md","raw":"---\nlayout: post\ntitle: Neovim + vim-plug + vim-lspでLanguage Server Protocolを利用\ndate: 2020-02-02 23:59:14\ntags: [vim,Neovim,vim-plug,vim-lsp]\n---\n\nvim-lspをインストールする所まで\nこの手順では、python3.7.2をインストールするためにpyenvを入れています\n\n# 環境\n\n- Ubuntu18.04\n\n# 手順\n\n## Pythonとpipをインストールする\n\n~/.bashrcに以下を追記する\n\n```bash\n## pyenv init and install\nPYENV_ROOT=\"${HOME}/.pyenv/bin\"\nPATH=\"${PATH}:${PYENV_ROOT}\"\npyenv --version > /dev/null || {\n  git clone https://github.com/pyenv/pyenv ${HOME}/.pyenv\n  sudo ${HOME}/.pyenv/plugins/python-build/install.sh\n  pyenv install 3.7.2\n  pyenv rehash\n  pyenv global 3.7.2\n}\neval \"$(pyenv init -)\"\n```\n\n~/.bashrcを読み込み直す\n\n```bash\n$ source ~/.bashrc\n```\n\n## Neovimをインストールする\n\n~/.bashrcに以下を追記する\n\n```bash\n## neovim init and install\nXDG_CONFIG_HOME=\"${HOME}/.config\"\nXDG_CACHE_HOME=\"${HOME}/.cache\"\nnvim --version > /dev/null || {\n  sudo add-apt-repository ppa:neovim-ppa/stable -y\n  sudo apt-get update\n  sudo apt-get install neovim -y\n  mkdir -p ${XDG_CONFIG_HOME}/nvim\n  touch ${XDG_CONFIG_HOME}/nvim/init.vim\n}\npip install neovim\n```\n\n~/.bashrcを読み込みなおす\n```bash\n$ source ~/.bashrc\n```\n\n## vim-lspをインストールする\n\n~/.config/nvim/init.vimを以下の内容にする\n\n```vimscript\nif has('vim_starting')\n  set rtp+=~/.vim/plugged/vim-plug\n  if !isdirectory(expand('~/.vim/plugged/vim-plug'))\n    echo 'install vim-plug...'\n    call system('mkdir -p ~/.vim/plugged/vim-plug')\n    call system('git clone https://github.com/junegunn/vim-plug.git ~/.vim/plugged/vim-plug/autoload')\n  end\nendif\n\ncall plug#begin('~/.vim/plugged')\n  Plug 'junegunn/vim-plug',{'dir': '~/.vim/plugged/vim-plug/autoload'}\n  Plug 'prabirshrestha/async.vim'\n  Plug 'prabirshrestha/vim-lsp'\n  Plug 'mattn/vim-lsp-settings'\ncall plug#end()\n```\n\n上記設定ではNeovim起動時にvim-plugが無ければインストール、\nその後async.vim,vim-lsp,vim-lsp-settingsをインストールしています。\n\nNeovimを起動\n\n```bash\n$ nvim\n```\n\nコマンド「:PlugInstall」を実行し、上記プラグインをインストールする\n\nその後「:PlugStatus」を実行し、全てOKになっていれば問題なし、qキーでステータス画面を抜ける\n\nnodejsやgolang、pythonのlspをインストールする場合は、\ninit.vimに設定を追記、必要なモジュールをインストールするなど、それぞれlspに合わせた設定が必要となる\n","slug":"neovim-vim-lsp","published":1,"updated":"2020-02-09T16:02:41.065Z","_id":"ck6ku49ti000v8lvq983jk4lh","comments":1,"photos":[],"link":"","content":"<p>vim-lspをインストールする所まで<br>この手順では、python3.7.2をインストールするためにpyenvを入れています</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Pythonとpipをインストールする\"><a href=\"#Pythonとpipをインストールする\" class=\"headerlink\" title=\"Pythonとpipをインストールする\"></a>Pythonとpipをインストールする</h2><p>~/.bashrcに以下を追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## pyenv init and install</span></span><br><span class=\"line\">PYENV_ROOT=<span class=\"string\">\"<span class=\"variable\">$&#123;HOME&#125;</span>/.pyenv/bin\"</span></span><br><span class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$&#123;PATH&#125;</span>:<span class=\"variable\">$&#123;PYENV_ROOT&#125;</span>\"</span></span><br><span class=\"line\">pyenv --version &gt; /dev/null || &#123;</span><br><span class=\"line\">  git <span class=\"built_in\">clone</span> https://github.com/pyenv/pyenv <span class=\"variable\">$&#123;HOME&#125;</span>/.pyenv</span><br><span class=\"line\">  sudo <span class=\"variable\">$&#123;HOME&#125;</span>/.pyenv/plugins/python-build/install.sh</span><br><span class=\"line\">  pyenv install 3.7.2</span><br><span class=\"line\">  pyenv <span class=\"built_in\">rehash</span></span><br><span class=\"line\">  pyenv global 3.7.2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">eval</span> <span class=\"string\">\"<span class=\"variable\">$(pyenv init -)</span>\"</span></span><br></pre></td></tr></table></figure>\n\n<p>~/.bashrcを読み込み直す</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Neovimをインストールする\"><a href=\"#Neovimをインストールする\" class=\"headerlink\" title=\"Neovimをインストールする\"></a>Neovimをインストールする</h2><p>~/.bashrcに以下を追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## neovim init and install</span></span><br><span class=\"line\">XDG_CONFIG_HOME=<span class=\"string\">\"<span class=\"variable\">$&#123;HOME&#125;</span>/.config\"</span></span><br><span class=\"line\">XDG_CACHE_HOME=<span class=\"string\">\"<span class=\"variable\">$&#123;HOME&#125;</span>/.cache\"</span></span><br><span class=\"line\">nvim --version &gt; /dev/null || &#123;</span><br><span class=\"line\">  sudo add-apt-repository ppa:neovim-ppa/stable -y</span><br><span class=\"line\">  sudo apt-get update</span><br><span class=\"line\">  sudo apt-get install neovim -y</span><br><span class=\"line\">  mkdir -p <span class=\"variable\">$&#123;XDG_CONFIG_HOME&#125;</span>/nvim</span><br><span class=\"line\">  touch <span class=\"variable\">$&#123;XDG_CONFIG_HOME&#125;</span>/nvim/init.vim</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pip install neovim</span><br></pre></td></tr></table></figure>\n\n<p>~/.bashrcを読み込みなおす</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vim-lspをインストールする\"><a href=\"#vim-lspをインストールする\" class=\"headerlink\" title=\"vim-lspをインストールする\"></a>vim-lspをインストールする</h2><p>~/.config/nvim/init.vimを以下の内容にする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if has(&apos;vim_starting&apos;)</span><br><span class=\"line\">  set rtp+=~/.vim/plugged/vim-plug</span><br><span class=\"line\">  if !isdirectory(expand(&apos;~/.vim/plugged/vim-plug&apos;))</span><br><span class=\"line\">    echo &apos;install vim-plug...&apos;</span><br><span class=\"line\">    call system(&apos;mkdir -p ~/.vim/plugged/vim-plug&apos;)</span><br><span class=\"line\">    call system(&apos;git clone https://github.com/junegunn/vim-plug.git ~/.vim/plugged/vim-plug/autoload&apos;)</span><br><span class=\"line\">  end</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\">call plug#begin(&apos;~/.vim/plugged&apos;)</span><br><span class=\"line\">  Plug &apos;junegunn/vim-plug&apos;,&#123;&apos;dir&apos;: &apos;~/.vim/plugged/vim-plug/autoload&apos;&#125;</span><br><span class=\"line\">  Plug &apos;prabirshrestha/async.vim&apos;</span><br><span class=\"line\">  Plug &apos;prabirshrestha/vim-lsp&apos;</span><br><span class=\"line\">  Plug &apos;mattn/vim-lsp-settings&apos;</span><br><span class=\"line\">call plug#end()</span><br></pre></td></tr></table></figure>\n\n<p>上記設定ではNeovim起動時にvim-plugが無ければインストール、<br>その後async.vim,vim-lsp,vim-lsp-settingsをインストールしています。</p>\n<p>Neovimを起動</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvim</span><br></pre></td></tr></table></figure>\n\n<p>コマンド「:PlugInstall」を実行し、上記プラグインをインストールする</p>\n<p>その後「:PlugStatus」を実行し、全てOKになっていれば問題なし、qキーでステータス画面を抜ける</p>\n<p>nodejsやgolang、pythonのlspをインストールする場合は、<br>init.vimに設定を追記、必要なモジュールをインストールするなど、それぞれlspに合わせた設定が必要となる</p>\n","site":{"data":{}},"excerpt":"","more":"<p>vim-lspをインストールする所まで<br>この手順では、python3.7.2をインストールするためにpyenvを入れています</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Pythonとpipをインストールする\"><a href=\"#Pythonとpipをインストールする\" class=\"headerlink\" title=\"Pythonとpipをインストールする\"></a>Pythonとpipをインストールする</h2><p>~/.bashrcに以下を追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## pyenv init and install</span></span><br><span class=\"line\">PYENV_ROOT=<span class=\"string\">\"<span class=\"variable\">$&#123;HOME&#125;</span>/.pyenv/bin\"</span></span><br><span class=\"line\">PATH=<span class=\"string\">\"<span class=\"variable\">$&#123;PATH&#125;</span>:<span class=\"variable\">$&#123;PYENV_ROOT&#125;</span>\"</span></span><br><span class=\"line\">pyenv --version &gt; /dev/null || &#123;</span><br><span class=\"line\">  git <span class=\"built_in\">clone</span> https://github.com/pyenv/pyenv <span class=\"variable\">$&#123;HOME&#125;</span>/.pyenv</span><br><span class=\"line\">  sudo <span class=\"variable\">$&#123;HOME&#125;</span>/.pyenv/plugins/python-build/install.sh</span><br><span class=\"line\">  pyenv install 3.7.2</span><br><span class=\"line\">  pyenv <span class=\"built_in\">rehash</span></span><br><span class=\"line\">  pyenv global 3.7.2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">eval</span> <span class=\"string\">\"<span class=\"variable\">$(pyenv init -)</span>\"</span></span><br></pre></td></tr></table></figure>\n\n<p>~/.bashrcを読み込み直す</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Neovimをインストールする\"><a href=\"#Neovimをインストールする\" class=\"headerlink\" title=\"Neovimをインストールする\"></a>Neovimをインストールする</h2><p>~/.bashrcに以下を追記する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">## neovim init and install</span></span><br><span class=\"line\">XDG_CONFIG_HOME=<span class=\"string\">\"<span class=\"variable\">$&#123;HOME&#125;</span>/.config\"</span></span><br><span class=\"line\">XDG_CACHE_HOME=<span class=\"string\">\"<span class=\"variable\">$&#123;HOME&#125;</span>/.cache\"</span></span><br><span class=\"line\">nvim --version &gt; /dev/null || &#123;</span><br><span class=\"line\">  sudo add-apt-repository ppa:neovim-ppa/stable -y</span><br><span class=\"line\">  sudo apt-get update</span><br><span class=\"line\">  sudo apt-get install neovim -y</span><br><span class=\"line\">  mkdir -p <span class=\"variable\">$&#123;XDG_CONFIG_HOME&#125;</span>/nvim</span><br><span class=\"line\">  touch <span class=\"variable\">$&#123;XDG_CONFIG_HOME&#125;</span>/nvim/init.vim</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pip install neovim</span><br></pre></td></tr></table></figure>\n\n<p>~/.bashrcを読み込みなおす</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"vim-lspをインストールする\"><a href=\"#vim-lspをインストールする\" class=\"headerlink\" title=\"vim-lspをインストールする\"></a>vim-lspをインストールする</h2><p>~/.config/nvim/init.vimを以下の内容にする</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if has(&apos;vim_starting&apos;)</span><br><span class=\"line\">  set rtp+=~/.vim/plugged/vim-plug</span><br><span class=\"line\">  if !isdirectory(expand(&apos;~/.vim/plugged/vim-plug&apos;))</span><br><span class=\"line\">    echo &apos;install vim-plug...&apos;</span><br><span class=\"line\">    call system(&apos;mkdir -p ~/.vim/plugged/vim-plug&apos;)</span><br><span class=\"line\">    call system(&apos;git clone https://github.com/junegunn/vim-plug.git ~/.vim/plugged/vim-plug/autoload&apos;)</span><br><span class=\"line\">  end</span><br><span class=\"line\">endif</span><br><span class=\"line\"></span><br><span class=\"line\">call plug#begin(&apos;~/.vim/plugged&apos;)</span><br><span class=\"line\">  Plug &apos;junegunn/vim-plug&apos;,&#123;&apos;dir&apos;: &apos;~/.vim/plugged/vim-plug/autoload&apos;&#125;</span><br><span class=\"line\">  Plug &apos;prabirshrestha/async.vim&apos;</span><br><span class=\"line\">  Plug &apos;prabirshrestha/vim-lsp&apos;</span><br><span class=\"line\">  Plug &apos;mattn/vim-lsp-settings&apos;</span><br><span class=\"line\">call plug#end()</span><br></pre></td></tr></table></figure>\n\n<p>上記設定ではNeovim起動時にvim-plugが無ければインストール、<br>その後async.vim,vim-lsp,vim-lsp-settingsをインストールしています。</p>\n<p>Neovimを起動</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvim</span><br></pre></td></tr></table></figure>\n\n<p>コマンド「:PlugInstall」を実行し、上記プラグインをインストールする</p>\n<p>その後「:PlugStatus」を実行し、全てOKになっていれば問題なし、qキーでステータス画面を抜ける</p>\n<p>nodejsやgolang、pythonのlspをインストールする場合は、<br>init.vimに設定を追記、必要なモジュールをインストールするなど、それぞれlspに合わせた設定が必要となる</p>\n"},{"layout":"post","title":"Linuxの時間調整【Debian系OS】","date":"2019-11-14T16:02:43.000Z","_content":"\nWindowsを入れている端末にLinuxをインストールすると、\nRTCの時刻がLinuxに変更され、\nWindowsで表示される時間がズレることがあります。\nそんな時にいつも行う操作のメモ\n\n## RTCとは\n\nマザーボードが記憶した時刻です。\nOSを起動した際にマザーボードから時刻が取得できる場合には、\nまず最初にRTCの時刻を取得し、使用されます。\n\n\n> *ポイント*\n> インターネットに繋がる場合は、NTPを利用した時刻同期が行われます。\n> インターネットにも繋がらず、RTCからの時刻取得もできない場合には、\n> 以前シャットダウンした時刻を使用する事があります。(Ubuntu14,16,18で体験)\n\n## 何故Windowsの時刻もズレてしまうのか\n\ntimedatectlコマンドを実行するとわかりますが、\nDebianは少なくとも3つの時刻にアクセスし、それぞれの時刻を変更する事ができます。\n\n```bash\n$ timedatectl\n                      Local time: 金 2019-11-15 01:28:34 JST\n                  Universal time: 木 2019-11-14 16:28:34 UTC\n                        RTC time: 木 2019-11-14 16:28:34\n                       Time zone: Asia/Tokyo (JST, +0900)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: no\n```\n\n- Local Time(指定したタイムゾーンの時間)\n- Universal Time(世界標準の時間、UTC)\n- RTC Time(マザーボードの時間)\n\nLinux(例えばUbuntu)を起動した際に、\nRTCの時刻がUTC時刻等に合わされて調整されてしまうためです。\n\nこの記事を書いているのは日本時間(JST)でいうとAM 1:00ですが、\nUTCでは9時間前の前日のPM 4:00となっています。\n\nLinuxがデフォルトで持つ時間がUTCであり、\nそれを定期的にRTCに同期を行っているため、\n次にWindowsを起動した場合に、「時刻がズレている」という状態になります。\n\n## じゃあどうするのか\n\nLinuxから２つの操作を行います。\n\n- タイムゾーンを指定し、Local Timeを日本時間に変更\n- Local TimeをRTCに同期する様に変更\n\n## 手順\n\n次の操作はLinux上で行います。\n\n### 現在の時刻と設定を確認する\n\ntimedatectlコマンドを実行し、時刻を確認します。\n\n```bash\n$ timedatectl\n                      Local time: 金 2019-11-15 16:28:34 UTC\n                  Universal time: 木 2019-11-14 16:28:34 UTC\n                        RTC time: 木 2019-11-14 16:28:34\n                       Time zone: UTC (UTC, +0000)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: no\n```\n\nここで確認したいのは\n\n- タイムゾーン\n- RTCへLocal Timeを同期するか\n\nです。\n\nタイムゾーンはUTC、RTCへLocal Timeを同期しない設定となっています。\n\nそのため、次にWindowsを起動した際にはRTCの時刻がズレた状態となります。\n\n### タイムゾーンをJSTにする\n\nJSTとは日本時間の事です。\n\n次のコマンドでタイムゾーンを日本時間に変更します。\n\n```bash\n$ timedatectl set-timezone Asia/Tokyo\n```\n\n念の為、設定が変わった事を確認します。\n\n```bash\n$ timedatectl\n                      Local time: 金 2019-11-15 01:35:59 JST\n                  Universal time: 木 2019-11-14 16:35:59 UTC\n                        RTC time: 木 2019-11-14 16:35:59\n                       Time zone: Asia/Tokyo (JST, +0900)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: no\n```\n\n### RTCに同期する時刻をLocal Timeにする\n\n次のコマンドでRTCにLocal timeを同期させる設定を行います。\n\n```bash\n$ timedatectl set-local-rtc true\n                      Local time: 金 2019-11-15 01:38:59 JST\n                  Universal time: 木 2019-11-14 16:38:59 UTC\n                        RTC time: 金 2019-11-15 01:38:59\n                       Time zone: Asia/Tokyo (JST, +0900)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: yes\n\nWarning: The system is configured to read the RTC time in the local time zone.\n         This mode can not be fully supported. It will create various problems\n         with time zone changes and daylight saving time adjustments. The RTC\n         time is never updated, it relies on external facilities to maintain it.\n         If at all possible, use RTC in UTC by calling\n         'timedatectl set-local-rtc 0'.\n```\n\n何やら注意が出ていますが、Google翻訳をかけた所は以下の様なメッセージでした。\n\n> 警告：システムは、ローカルタイムゾーンでRTC時間を読み取るように構成されています。\n>       このモードは完全にはサポートできません。さまざまな問題が発生します\n>       タイムゾーンの変更と夏時間の調整。 \n>       RTC時間が更新されることはなく、外部の設備に依存して維持されます。\n>       可能な場合は、UTCでRTCを使用して呼び出します\n>       'timedatectl set-local-rtc 0'\n\nここでWindowsの時刻がズレない設定は完了です。\n\nUbuntu14,16,18とこの設定を使用していますが、今の所問題は見当たりません。\n\n","source":"_posts/linux-debian-time-adjustment.md","raw":"---\nlayout: post\ntitle: Linuxの時間調整【Debian系OS】\ndate: 2019-11-15 01:02:43\ntags: [Debian,Linux,timedatectl]\n---\n\nWindowsを入れている端末にLinuxをインストールすると、\nRTCの時刻がLinuxに変更され、\nWindowsで表示される時間がズレることがあります。\nそんな時にいつも行う操作のメモ\n\n## RTCとは\n\nマザーボードが記憶した時刻です。\nOSを起動した際にマザーボードから時刻が取得できる場合には、\nまず最初にRTCの時刻を取得し、使用されます。\n\n\n> *ポイント*\n> インターネットに繋がる場合は、NTPを利用した時刻同期が行われます。\n> インターネットにも繋がらず、RTCからの時刻取得もできない場合には、\n> 以前シャットダウンした時刻を使用する事があります。(Ubuntu14,16,18で体験)\n\n## 何故Windowsの時刻もズレてしまうのか\n\ntimedatectlコマンドを実行するとわかりますが、\nDebianは少なくとも3つの時刻にアクセスし、それぞれの時刻を変更する事ができます。\n\n```bash\n$ timedatectl\n                      Local time: 金 2019-11-15 01:28:34 JST\n                  Universal time: 木 2019-11-14 16:28:34 UTC\n                        RTC time: 木 2019-11-14 16:28:34\n                       Time zone: Asia/Tokyo (JST, +0900)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: no\n```\n\n- Local Time(指定したタイムゾーンの時間)\n- Universal Time(世界標準の時間、UTC)\n- RTC Time(マザーボードの時間)\n\nLinux(例えばUbuntu)を起動した際に、\nRTCの時刻がUTC時刻等に合わされて調整されてしまうためです。\n\nこの記事を書いているのは日本時間(JST)でいうとAM 1:00ですが、\nUTCでは9時間前の前日のPM 4:00となっています。\n\nLinuxがデフォルトで持つ時間がUTCであり、\nそれを定期的にRTCに同期を行っているため、\n次にWindowsを起動した場合に、「時刻がズレている」という状態になります。\n\n## じゃあどうするのか\n\nLinuxから２つの操作を行います。\n\n- タイムゾーンを指定し、Local Timeを日本時間に変更\n- Local TimeをRTCに同期する様に変更\n\n## 手順\n\n次の操作はLinux上で行います。\n\n### 現在の時刻と設定を確認する\n\ntimedatectlコマンドを実行し、時刻を確認します。\n\n```bash\n$ timedatectl\n                      Local time: 金 2019-11-15 16:28:34 UTC\n                  Universal time: 木 2019-11-14 16:28:34 UTC\n                        RTC time: 木 2019-11-14 16:28:34\n                       Time zone: UTC (UTC, +0000)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: no\n```\n\nここで確認したいのは\n\n- タイムゾーン\n- RTCへLocal Timeを同期するか\n\nです。\n\nタイムゾーンはUTC、RTCへLocal Timeを同期しない設定となっています。\n\nそのため、次にWindowsを起動した際にはRTCの時刻がズレた状態となります。\n\n### タイムゾーンをJSTにする\n\nJSTとは日本時間の事です。\n\n次のコマンドでタイムゾーンを日本時間に変更します。\n\n```bash\n$ timedatectl set-timezone Asia/Tokyo\n```\n\n念の為、設定が変わった事を確認します。\n\n```bash\n$ timedatectl\n                      Local time: 金 2019-11-15 01:35:59 JST\n                  Universal time: 木 2019-11-14 16:35:59 UTC\n                        RTC time: 木 2019-11-14 16:35:59\n                       Time zone: Asia/Tokyo (JST, +0900)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: no\n```\n\n### RTCに同期する時刻をLocal Timeにする\n\n次のコマンドでRTCにLocal timeを同期させる設定を行います。\n\n```bash\n$ timedatectl set-local-rtc true\n                      Local time: 金 2019-11-15 01:38:59 JST\n                  Universal time: 木 2019-11-14 16:38:59 UTC\n                        RTC time: 金 2019-11-15 01:38:59\n                       Time zone: Asia/Tokyo (JST, +0900)\n       System clock synchronized: yes\nsystemd-timesyncd.service active: yes\n                 RTC in local TZ: yes\n\nWarning: The system is configured to read the RTC time in the local time zone.\n         This mode can not be fully supported. It will create various problems\n         with time zone changes and daylight saving time adjustments. The RTC\n         time is never updated, it relies on external facilities to maintain it.\n         If at all possible, use RTC in UTC by calling\n         'timedatectl set-local-rtc 0'.\n```\n\n何やら注意が出ていますが、Google翻訳をかけた所は以下の様なメッセージでした。\n\n> 警告：システムは、ローカルタイムゾーンでRTC時間を読み取るように構成されています。\n>       このモードは完全にはサポートできません。さまざまな問題が発生します\n>       タイムゾーンの変更と夏時間の調整。 \n>       RTC時間が更新されることはなく、外部の設備に依存して維持されます。\n>       可能な場合は、UTCでRTCを使用して呼び出します\n>       'timedatectl set-local-rtc 0'\n\nここでWindowsの時刻がズレない設定は完了です。\n\nUbuntu14,16,18とこの設定を使用していますが、今の所問題は見当たりません。\n\n","slug":"linux-debian-time-adjustment","published":1,"updated":"2019-11-17T14:34:52.500Z","_id":"ck6ku49tj000w8lvqe2j77di7","comments":1,"photos":[],"link":"","content":"<p>Windowsを入れている端末にLinuxをインストールすると、<br>RTCの時刻がLinuxに変更され、<br>Windowsで表示される時間がズレることがあります。<br>そんな時にいつも行う操作のメモ</p>\n<h2 id=\"RTCとは\"><a href=\"#RTCとは\" class=\"headerlink\" title=\"RTCとは\"></a>RTCとは</h2><p>マザーボードが記憶した時刻です。<br>OSを起動した際にマザーボードから時刻が取得できる場合には、<br>まず最初にRTCの時刻を取得し、使用されます。</p>\n<blockquote>\n<p><em>ポイント</em><br>インターネットに繋がる場合は、NTPを利用した時刻同期が行われます。<br>インターネットにも繋がらず、RTCからの時刻取得もできない場合には、<br>以前シャットダウンした時刻を使用する事があります。(Ubuntu14,16,18で体験)</p>\n</blockquote>\n<h2 id=\"何故Windowsの時刻もズレてしまうのか\"><a href=\"#何故Windowsの時刻もズレてしまうのか\" class=\"headerlink\" title=\"何故Windowsの時刻もズレてしまうのか\"></a>何故Windowsの時刻もズレてしまうのか</h2><p>timedatectlコマンドを実行するとわかりますが、<br>Debianは少なくとも3つの時刻にアクセスし、それぞれの時刻を変更する事ができます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl</span><br><span class=\"line\">                      Local time: 金 2019-11-15 01:28:34 JST</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:28:34 UTC</span><br><span class=\"line\">                        RTC time: 木 2019-11-14 16:28:34</span><br><span class=\"line\">                       Time zone: Asia/Tokyo (JST, +0900)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Local Time(指定したタイムゾーンの時間)</li>\n<li>Universal Time(世界標準の時間、UTC)</li>\n<li>RTC Time(マザーボードの時間)</li>\n</ul>\n<p>Linux(例えばUbuntu)を起動した際に、<br>RTCの時刻がUTC時刻等に合わされて調整されてしまうためです。</p>\n<p>この記事を書いているのは日本時間(JST)でいうとAM 1:00ですが、<br>UTCでは9時間前の前日のPM 4:00となっています。</p>\n<p>Linuxがデフォルトで持つ時間がUTCであり、<br>それを定期的にRTCに同期を行っているため、<br>次にWindowsを起動した場合に、「時刻がズレている」という状態になります。</p>\n<h2 id=\"じゃあどうするのか\"><a href=\"#じゃあどうするのか\" class=\"headerlink\" title=\"じゃあどうするのか\"></a>じゃあどうするのか</h2><p>Linuxから２つの操作を行います。</p>\n<ul>\n<li>タイムゾーンを指定し、Local Timeを日本時間に変更</li>\n<li>Local TimeをRTCに同期する様に変更</li>\n</ul>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><p>次の操作はLinux上で行います。</p>\n<h3 id=\"現在の時刻と設定を確認する\"><a href=\"#現在の時刻と設定を確認する\" class=\"headerlink\" title=\"現在の時刻と設定を確認する\"></a>現在の時刻と設定を確認する</h3><p>timedatectlコマンドを実行し、時刻を確認します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl</span><br><span class=\"line\">                      Local time: 金 2019-11-15 16:28:34 UTC</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:28:34 UTC</span><br><span class=\"line\">                        RTC time: 木 2019-11-14 16:28:34</span><br><span class=\"line\">                       Time zone: UTC (UTC, +0000)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</span><br></pre></td></tr></table></figure>\n\n<p>ここで確認したいのは</p>\n<ul>\n<li>タイムゾーン</li>\n<li>RTCへLocal Timeを同期するか</li>\n</ul>\n<p>です。</p>\n<p>タイムゾーンはUTC、RTCへLocal Timeを同期しない設定となっています。</p>\n<p>そのため、次にWindowsを起動した際にはRTCの時刻がズレた状態となります。</p>\n<h3 id=\"タイムゾーンをJSTにする\"><a href=\"#タイムゾーンをJSTにする\" class=\"headerlink\" title=\"タイムゾーンをJSTにする\"></a>タイムゾーンをJSTにする</h3><p>JSTとは日本時間の事です。</p>\n<p>次のコマンドでタイムゾーンを日本時間に変更します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl <span class=\"built_in\">set</span>-timezone Asia/Tokyo</span><br></pre></td></tr></table></figure>\n\n<p>念の為、設定が変わった事を確認します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl</span><br><span class=\"line\">                      Local time: 金 2019-11-15 01:35:59 JST</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:35:59 UTC</span><br><span class=\"line\">                        RTC time: 木 2019-11-14 16:35:59</span><br><span class=\"line\">                       Time zone: Asia/Tokyo (JST, +0900)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"RTCに同期する時刻をLocal-Timeにする\"><a href=\"#RTCに同期する時刻をLocal-Timeにする\" class=\"headerlink\" title=\"RTCに同期する時刻をLocal Timeにする\"></a>RTCに同期する時刻をLocal Timeにする</h3><p>次のコマンドでRTCにLocal timeを同期させる設定を行います。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl <span class=\"built_in\">set</span>-local-rtc <span class=\"literal\">true</span></span><br><span class=\"line\">                      Local time: 金 2019-11-15 01:38:59 JST</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:38:59 UTC</span><br><span class=\"line\">                        RTC time: 金 2019-11-15 01:38:59</span><br><span class=\"line\">                       Time zone: Asia/Tokyo (JST, +0900)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: yes</span><br><span class=\"line\"></span><br><span class=\"line\">Warning: The system is configured to <span class=\"built_in\">read</span> the RTC time <span class=\"keyword\">in</span> the <span class=\"built_in\">local</span> time zone.</span><br><span class=\"line\">         This mode can not be fully supported. It will create various problems</span><br><span class=\"line\">         with time zone changes and daylight saving time adjustments. The RTC</span><br><span class=\"line\">         time is never updated, it relies on external facilities to maintain it.</span><br><span class=\"line\">         If at all possible, use RTC <span class=\"keyword\">in</span> UTC by calling</span><br><span class=\"line\">         <span class=\"string\">'timedatectl set-local-rtc 0'</span>.</span><br></pre></td></tr></table></figure>\n\n<p>何やら注意が出ていますが、Google翻訳をかけた所は以下の様なメッセージでした。</p>\n<blockquote>\n<p>警告：システムは、ローカルタイムゾーンでRTC時間を読み取るように構成されています。<br>      このモードは完全にはサポートできません。さまざまな問題が発生します<br>      タイムゾーンの変更と夏時間の調整。<br>      RTC時間が更新されることはなく、外部の設備に依存して維持されます。<br>      可能な場合は、UTCでRTCを使用して呼び出します<br>      ‘timedatectl set-local-rtc 0’</p>\n</blockquote>\n<p>ここでWindowsの時刻がズレない設定は完了です。</p>\n<p>Ubuntu14,16,18とこの設定を使用していますが、今の所問題は見当たりません。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Windowsを入れている端末にLinuxをインストールすると、<br>RTCの時刻がLinuxに変更され、<br>Windowsで表示される時間がズレることがあります。<br>そんな時にいつも行う操作のメモ</p>\n<h2 id=\"RTCとは\"><a href=\"#RTCとは\" class=\"headerlink\" title=\"RTCとは\"></a>RTCとは</h2><p>マザーボードが記憶した時刻です。<br>OSを起動した際にマザーボードから時刻が取得できる場合には、<br>まず最初にRTCの時刻を取得し、使用されます。</p>\n<blockquote>\n<p><em>ポイント</em><br>インターネットに繋がる場合は、NTPを利用した時刻同期が行われます。<br>インターネットにも繋がらず、RTCからの時刻取得もできない場合には、<br>以前シャットダウンした時刻を使用する事があります。(Ubuntu14,16,18で体験)</p>\n</blockquote>\n<h2 id=\"何故Windowsの時刻もズレてしまうのか\"><a href=\"#何故Windowsの時刻もズレてしまうのか\" class=\"headerlink\" title=\"何故Windowsの時刻もズレてしまうのか\"></a>何故Windowsの時刻もズレてしまうのか</h2><p>timedatectlコマンドを実行するとわかりますが、<br>Debianは少なくとも3つの時刻にアクセスし、それぞれの時刻を変更する事ができます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl</span><br><span class=\"line\">                      Local time: 金 2019-11-15 01:28:34 JST</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:28:34 UTC</span><br><span class=\"line\">                        RTC time: 木 2019-11-14 16:28:34</span><br><span class=\"line\">                       Time zone: Asia/Tokyo (JST, +0900)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Local Time(指定したタイムゾーンの時間)</li>\n<li>Universal Time(世界標準の時間、UTC)</li>\n<li>RTC Time(マザーボードの時間)</li>\n</ul>\n<p>Linux(例えばUbuntu)を起動した際に、<br>RTCの時刻がUTC時刻等に合わされて調整されてしまうためです。</p>\n<p>この記事を書いているのは日本時間(JST)でいうとAM 1:00ですが、<br>UTCでは9時間前の前日のPM 4:00となっています。</p>\n<p>Linuxがデフォルトで持つ時間がUTCであり、<br>それを定期的にRTCに同期を行っているため、<br>次にWindowsを起動した場合に、「時刻がズレている」という状態になります。</p>\n<h2 id=\"じゃあどうするのか\"><a href=\"#じゃあどうするのか\" class=\"headerlink\" title=\"じゃあどうするのか\"></a>じゃあどうするのか</h2><p>Linuxから２つの操作を行います。</p>\n<ul>\n<li>タイムゾーンを指定し、Local Timeを日本時間に変更</li>\n<li>Local TimeをRTCに同期する様に変更</li>\n</ul>\n<h2 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h2><p>次の操作はLinux上で行います。</p>\n<h3 id=\"現在の時刻と設定を確認する\"><a href=\"#現在の時刻と設定を確認する\" class=\"headerlink\" title=\"現在の時刻と設定を確認する\"></a>現在の時刻と設定を確認する</h3><p>timedatectlコマンドを実行し、時刻を確認します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl</span><br><span class=\"line\">                      Local time: 金 2019-11-15 16:28:34 UTC</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:28:34 UTC</span><br><span class=\"line\">                        RTC time: 木 2019-11-14 16:28:34</span><br><span class=\"line\">                       Time zone: UTC (UTC, +0000)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</span><br></pre></td></tr></table></figure>\n\n<p>ここで確認したいのは</p>\n<ul>\n<li>タイムゾーン</li>\n<li>RTCへLocal Timeを同期するか</li>\n</ul>\n<p>です。</p>\n<p>タイムゾーンはUTC、RTCへLocal Timeを同期しない設定となっています。</p>\n<p>そのため、次にWindowsを起動した際にはRTCの時刻がズレた状態となります。</p>\n<h3 id=\"タイムゾーンをJSTにする\"><a href=\"#タイムゾーンをJSTにする\" class=\"headerlink\" title=\"タイムゾーンをJSTにする\"></a>タイムゾーンをJSTにする</h3><p>JSTとは日本時間の事です。</p>\n<p>次のコマンドでタイムゾーンを日本時間に変更します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl <span class=\"built_in\">set</span>-timezone Asia/Tokyo</span><br></pre></td></tr></table></figure>\n\n<p>念の為、設定が変わった事を確認します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl</span><br><span class=\"line\">                      Local time: 金 2019-11-15 01:35:59 JST</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:35:59 UTC</span><br><span class=\"line\">                        RTC time: 木 2019-11-14 16:35:59</span><br><span class=\"line\">                       Time zone: Asia/Tokyo (JST, +0900)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"RTCに同期する時刻をLocal-Timeにする\"><a href=\"#RTCに同期する時刻をLocal-Timeにする\" class=\"headerlink\" title=\"RTCに同期する時刻をLocal Timeにする\"></a>RTCに同期する時刻をLocal Timeにする</h3><p>次のコマンドでRTCにLocal timeを同期させる設定を行います。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ timedatectl <span class=\"built_in\">set</span>-local-rtc <span class=\"literal\">true</span></span><br><span class=\"line\">                      Local time: 金 2019-11-15 01:38:59 JST</span><br><span class=\"line\">                  Universal time: 木 2019-11-14 16:38:59 UTC</span><br><span class=\"line\">                        RTC time: 金 2019-11-15 01:38:59</span><br><span class=\"line\">                       Time zone: Asia/Tokyo (JST, +0900)</span><br><span class=\"line\">       System clock synchronized: yes</span><br><span class=\"line\">systemd-timesyncd.service active: yes</span><br><span class=\"line\">                 RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: yes</span><br><span class=\"line\"></span><br><span class=\"line\">Warning: The system is configured to <span class=\"built_in\">read</span> the RTC time <span class=\"keyword\">in</span> the <span class=\"built_in\">local</span> time zone.</span><br><span class=\"line\">         This mode can not be fully supported. It will create various problems</span><br><span class=\"line\">         with time zone changes and daylight saving time adjustments. The RTC</span><br><span class=\"line\">         time is never updated, it relies on external facilities to maintain it.</span><br><span class=\"line\">         If at all possible, use RTC <span class=\"keyword\">in</span> UTC by calling</span><br><span class=\"line\">         <span class=\"string\">'timedatectl set-local-rtc 0'</span>.</span><br></pre></td></tr></table></figure>\n\n<p>何やら注意が出ていますが、Google翻訳をかけた所は以下の様なメッセージでした。</p>\n<blockquote>\n<p>警告：システムは、ローカルタイムゾーンでRTC時間を読み取るように構成されています。<br>      このモードは完全にはサポートできません。さまざまな問題が発生します<br>      タイムゾーンの変更と夏時間の調整。<br>      RTC時間が更新されることはなく、外部の設備に依存して維持されます。<br>      可能な場合は、UTCでRTCを使用して呼び出します<br>      ‘timedatectl set-local-rtc 0’</p>\n</blockquote>\n<p>ここでWindowsの時刻がズレない設定は完了です。</p>\n<p>Ubuntu14,16,18とこの設定を使用していますが、今の所問題は見当たりません。</p>\n"},{"layout":"post","title":"WSLからWindowsのドライブをマウントする","date":"2020-02-11T17:20:50.000Z","_content":"\n# 環境\n\n- Windows10\n- Ubuntu 18.04\n\n# 手順\n\n## マウント\n\nマウントしたいドライブのドライブレターを確認し、以下コマンドを実行\n\n今回はドライブレターはAとします。\n\n```bash\n$ mkdir -p /mnt/a\n$ mount -t drvfs A: /mnt/a\n```\n\n## アンマウント\n\n```bash\n$ umount /mnt/a\n```\n","source":"_posts/mount-networkdrive-for-wsl.md","raw":"---\nlayout: post\ntitle: WSLからWindowsのドライブをマウントする\ndate: 2020-02-12 02:20:50\ntags: [wsl]\n---\n\n# 環境\n\n- Windows10\n- Ubuntu 18.04\n\n# 手順\n\n## マウント\n\nマウントしたいドライブのドライブレターを確認し、以下コマンドを実行\n\n今回はドライブレターはAとします。\n\n```bash\n$ mkdir -p /mnt/a\n$ mount -t drvfs A: /mnt/a\n```\n\n## アンマウント\n\n```bash\n$ umount /mnt/a\n```\n","slug":"mount-networkdrive-for-wsl","published":1,"updated":"2020-02-11T17:27:18.646Z","_id":"ck6ku49tk000y8lvqez9625q1","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows10</li>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"マウント\"><a href=\"#マウント\" class=\"headerlink\" title=\"マウント\"></a>マウント</h2><p>マウントしたいドライブのドライブレターを確認し、以下コマンドを実行</p>\n<p>今回はドライブレターはAとします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p /mnt/a</span><br><span class=\"line\">$ mount -t drvfs A: /mnt/a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"アンマウント\"><a href=\"#アンマウント\" class=\"headerlink\" title=\"アンマウント\"></a>アンマウント</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ umount /mnt/a</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows10</li>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"マウント\"><a href=\"#マウント\" class=\"headerlink\" title=\"マウント\"></a>マウント</h2><p>マウントしたいドライブのドライブレターを確認し、以下コマンドを実行</p>\n<p>今回はドライブレターはAとします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -p /mnt/a</span><br><span class=\"line\">$ mount -t drvfs A: /mnt/a</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"アンマウント\"><a href=\"#アンマウント\" class=\"headerlink\" title=\"アンマウント\"></a>アンマウント</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ umount /mnt/a</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"PowerShellをUbuntuにインストール","date":"2020-02-07T15:15:47.000Z","_content":"\n# 環境\n\n- Ubuntu 18.04\n\n# 手順\n\n## Microsoftのリポジトリキーを追加\n\n```bash\n$ wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb\n$ sudo dpkg -i packages-microsoft-prod.deb\n$ sudo apt update\n```\n\n## dotnet-sdkインストール\n\ndotnetコマンドでPowerShellをインストールするため、dotnet-sdkをインストールします。\n\n```bash\n$ sudo apt install dotnet-sdk-3.1 -y\n```\n\n## PowerShellインストール\n\n```bash\n$ dotnet tool install --global powershell\n```\n\nインストール完了後、ターミナルを再起動します。\n\n## 実行できる事を確認\n\n```bash\n$ pwsh\nPowerShell 6.2.4\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nhttps://aka.ms/pscore6-docs\nType 'help' to get help.\n\nPS /home/user>\n```\n\n## 試しにコマンドを実行してみる\n\nPowerShellでgrepをしてみます。\n\n```powershell\nPS /home/user> echo \"aaaabbbb\" | Select-String \"aaaa\"\n\naaaabbbb\n\nPS /home/user> echo \"aaaabbbb\" | Select-String \"cccc\" # 何も表示されない\n```\n","source":"_posts/powershell.md","raw":"---\nlayout: post\ntitle: PowerShellをUbuntuにインストール\ndate: 2020-02-08 00:15:47\ntags: [PowerShell]\n---\n\n# 環境\n\n- Ubuntu 18.04\n\n# 手順\n\n## Microsoftのリポジトリキーを追加\n\n```bash\n$ wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb\n$ sudo dpkg -i packages-microsoft-prod.deb\n$ sudo apt update\n```\n\n## dotnet-sdkインストール\n\ndotnetコマンドでPowerShellをインストールするため、dotnet-sdkをインストールします。\n\n```bash\n$ sudo apt install dotnet-sdk-3.1 -y\n```\n\n## PowerShellインストール\n\n```bash\n$ dotnet tool install --global powershell\n```\n\nインストール完了後、ターミナルを再起動します。\n\n## 実行できる事を確認\n\n```bash\n$ pwsh\nPowerShell 6.2.4\nCopyright (c) Microsoft Corporation. All rights reserved.\n\nhttps://aka.ms/pscore6-docs\nType 'help' to get help.\n\nPS /home/user>\n```\n\n## 試しにコマンドを実行してみる\n\nPowerShellでgrepをしてみます。\n\n```powershell\nPS /home/user> echo \"aaaabbbb\" | Select-String \"aaaa\"\n\naaaabbbb\n\nPS /home/user> echo \"aaaabbbb\" | Select-String \"cccc\" # 何も表示されない\n```\n","slug":"powershell","published":1,"updated":"2020-02-09T16:02:23.858Z","_id":"ck6ku49tl00108lvquuvus3nq","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Microsoftのリポジトリキーを追加\"><a href=\"#Microsoftのリポジトリキーを追加\" class=\"headerlink\" title=\"Microsoftのリポジトリキーを追加\"></a>Microsoftのリポジトリキーを追加</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb</span><br><span class=\"line\">$ sudo dpkg -i packages-microsoft-prod.deb</span><br><span class=\"line\">$ sudo apt update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dotnet-sdkインストール\"><a href=\"#dotnet-sdkインストール\" class=\"headerlink\" title=\"dotnet-sdkインストール\"></a>dotnet-sdkインストール</h2><p>dotnetコマンドでPowerShellをインストールするため、dotnet-sdkをインストールします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install dotnet-sdk-3.1 -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PowerShellインストール\"><a href=\"#PowerShellインストール\" class=\"headerlink\" title=\"PowerShellインストール\"></a>PowerShellインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dotnet tool install --global powershell</span><br></pre></td></tr></table></figure>\n\n<p>インストール完了後、ターミナルを再起動します。</p>\n<h2 id=\"実行できる事を確認\"><a href=\"#実行できる事を確認\" class=\"headerlink\" title=\"実行できる事を確認\"></a>実行できる事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pwsh</span><br><span class=\"line\">PowerShell 6.2.4</span><br><span class=\"line\">Copyright (c) Microsoft Corporation. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">https://aka.ms/pscore6-docs</span><br><span class=\"line\">Type <span class=\"string\">'help'</span> to get <span class=\"built_in\">help</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">PS /home/user&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"試しにコマンドを実行してみる\"><a href=\"#試しにコマンドを実行してみる\" class=\"headerlink\" title=\"試しにコマンドを実行してみる\"></a>試しにコマンドを実行してみる</h2><p>PowerShellでgrepをしてみます。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS /home/user&gt; echo <span class=\"string\">\"aaaabbbb\"</span> | <span class=\"built_in\">Select-String</span> <span class=\"string\">\"aaaa\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">aaaabbbb</span><br><span class=\"line\"></span><br><span class=\"line\">PS /home/user&gt; echo <span class=\"string\">\"aaaabbbb\"</span> | <span class=\"built_in\">Select-String</span> <span class=\"string\">\"cccc\"</span> <span class=\"comment\"># 何も表示されない</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Microsoftのリポジトリキーを追加\"><a href=\"#Microsoftのリポジトリキーを追加\" class=\"headerlink\" title=\"Microsoftのリポジトリキーを追加\"></a>Microsoftのリポジトリキーを追加</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget -q https://packages.microsoft.com/config/ubuntu/19.04/packages-microsoft-prod.deb</span><br><span class=\"line\">$ sudo dpkg -i packages-microsoft-prod.deb</span><br><span class=\"line\">$ sudo apt update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"dotnet-sdkインストール\"><a href=\"#dotnet-sdkインストール\" class=\"headerlink\" title=\"dotnet-sdkインストール\"></a>dotnet-sdkインストール</h2><p>dotnetコマンドでPowerShellをインストールするため、dotnet-sdkをインストールします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install dotnet-sdk-3.1 -y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"PowerShellインストール\"><a href=\"#PowerShellインストール\" class=\"headerlink\" title=\"PowerShellインストール\"></a>PowerShellインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ dotnet tool install --global powershell</span><br></pre></td></tr></table></figure>\n\n<p>インストール完了後、ターミナルを再起動します。</p>\n<h2 id=\"実行できる事を確認\"><a href=\"#実行できる事を確認\" class=\"headerlink\" title=\"実行できる事を確認\"></a>実行できる事を確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pwsh</span><br><span class=\"line\">PowerShell 6.2.4</span><br><span class=\"line\">Copyright (c) Microsoft Corporation. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">https://aka.ms/pscore6-docs</span><br><span class=\"line\">Type <span class=\"string\">'help'</span> to get <span class=\"built_in\">help</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">PS /home/user&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"試しにコマンドを実行してみる\"><a href=\"#試しにコマンドを実行してみる\" class=\"headerlink\" title=\"試しにコマンドを実行してみる\"></a>試しにコマンドを実行してみる</h2><p>PowerShellでgrepをしてみます。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS /home/user&gt; echo <span class=\"string\">\"aaaabbbb\"</span> | <span class=\"built_in\">Select-String</span> <span class=\"string\">\"aaaa\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">aaaabbbb</span><br><span class=\"line\"></span><br><span class=\"line\">PS /home/user&gt; echo <span class=\"string\">\"aaaabbbb\"</span> | <span class=\"built_in\">Select-String</span> <span class=\"string\">\"cccc\"</span> <span class=\"comment\"># 何も表示されない</span></span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"nodenvでnodejsをインストール","date":"2020-02-04T14:35:33.000Z","_content":"\n# 環境\n\n- LinuxMint19 Mate\n\n# 手順\n\n## nodenvをインストール\n\n```bash\n$ git clone https://github.com/nodenv/nodenv.git ~/.nodenv\n```\n\n## nodenvのパスを通す\n\nターミナル起動時にパスを通す様に設定\n\n```bash\n$ echo 'PATH=${PATH}:${HOME}/.nodenv/bin' >> ~/.bashrc\n```\n\n## initする\n\nターミナル起動時にinitする様に設定\n\n```bash\necho 'eval \"$(nodenv init -)\"'\n```\n\nnodenvコマンドは使えるが、nodenv installコマンドはまだ使えない\n\n```bash\n$ nodenv install 12.14.1\n```\n\n## nodenvのinstallコマンドをインストール\n\ninstallコマンドやuninstallコマンドを使うためにはnode-buildが必要らしい\n\n```bash\n$ git clone https://github.com/nodenv/node-build.git /usr/local/src/\n$ echo 'sudo PREFIX=/usr/local /usr/local/src/install.sh' >> ~/.bashrc\n```\n\n## nodenvでnodeをインストール\n\nターミナルを起動し直し、以下コマンドを実行\n\n```bash\n$ nodenv install 12.14.1\n$ nodenv global 12.14.1\n```\n\n## nodeとnpmのバージョンを確認する\n\n```bash\n$ node -v\nv12.14.1\n$ npm -v\n6.13.4\n```\n","source":"_posts/nodenv.md","raw":"---\nlayout: post\ntitle: nodenvでnodejsをインストール\ndate: 2020-02-04 23:35:33\ntags: [nodejs]\n---\n\n# 環境\n\n- LinuxMint19 Mate\n\n# 手順\n\n## nodenvをインストール\n\n```bash\n$ git clone https://github.com/nodenv/nodenv.git ~/.nodenv\n```\n\n## nodenvのパスを通す\n\nターミナル起動時にパスを通す様に設定\n\n```bash\n$ echo 'PATH=${PATH}:${HOME}/.nodenv/bin' >> ~/.bashrc\n```\n\n## initする\n\nターミナル起動時にinitする様に設定\n\n```bash\necho 'eval \"$(nodenv init -)\"'\n```\n\nnodenvコマンドは使えるが、nodenv installコマンドはまだ使えない\n\n```bash\n$ nodenv install 12.14.1\n```\n\n## nodenvのinstallコマンドをインストール\n\ninstallコマンドやuninstallコマンドを使うためにはnode-buildが必要らしい\n\n```bash\n$ git clone https://github.com/nodenv/node-build.git /usr/local/src/\n$ echo 'sudo PREFIX=/usr/local /usr/local/src/install.sh' >> ~/.bashrc\n```\n\n## nodenvでnodeをインストール\n\nターミナルを起動し直し、以下コマンドを実行\n\n```bash\n$ nodenv install 12.14.1\n$ nodenv global 12.14.1\n```\n\n## nodeとnpmのバージョンを確認する\n\n```bash\n$ node -v\nv12.14.1\n$ npm -v\n6.13.4\n```\n","slug":"nodenv","published":1,"updated":"2020-02-05T12:56:18.340Z","_id":"ck6ku49tm00138lvq5wm0glpp","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>LinuxMint19 Mate</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"nodenvをインストール\"><a href=\"#nodenvをインストール\" class=\"headerlink\" title=\"nodenvをインストール\"></a>nodenvをインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/nodenv/nodenv.git ~/.nodenv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodenvのパスを通す\"><a href=\"#nodenvのパスを通す\" class=\"headerlink\" title=\"nodenvのパスを通す\"></a>nodenvのパスを通す</h2><p>ターミナル起動時にパスを通す様に設定</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'PATH=$&#123;PATH&#125;:$&#123;HOME&#125;/.nodenv/bin'</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"initする\"><a href=\"#initする\" class=\"headerlink\" title=\"initする\"></a>initする</h2><p>ターミナル起動時にinitする様に設定</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'eval \"$(nodenv init -)\"'</span></span><br></pre></td></tr></table></figure>\n\n<p>nodenvコマンドは使えるが、nodenv installコマンドはまだ使えない</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nodenv install 12.14.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodenvのinstallコマンドをインストール\"><a href=\"#nodenvのinstallコマンドをインストール\" class=\"headerlink\" title=\"nodenvのinstallコマンドをインストール\"></a>nodenvのinstallコマンドをインストール</h2><p>installコマンドやuninstallコマンドを使うためにはnode-buildが必要らしい</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/nodenv/node-build.git /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'sudo PREFIX=/usr/local /usr/local/src/install.sh'</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodenvでnodeをインストール\"><a href=\"#nodenvでnodeをインストール\" class=\"headerlink\" title=\"nodenvでnodeをインストール\"></a>nodenvでnodeをインストール</h2><p>ターミナルを起動し直し、以下コマンドを実行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nodenv install 12.14.1</span><br><span class=\"line\">$ nodenv global 12.14.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodeとnpmのバージョンを確認する\"><a href=\"#nodeとnpmのバージョンを確認する\" class=\"headerlink\" title=\"nodeとnpmのバージョンを確認する\"></a>nodeとnpmのバージョンを確認する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v</span><br><span class=\"line\">v12.14.1</span><br><span class=\"line\">$ npm -v</span><br><span class=\"line\">6.13.4</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>LinuxMint19 Mate</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"nodenvをインストール\"><a href=\"#nodenvをインストール\" class=\"headerlink\" title=\"nodenvをインストール\"></a>nodenvをインストール</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/nodenv/nodenv.git ~/.nodenv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodenvのパスを通す\"><a href=\"#nodenvのパスを通す\" class=\"headerlink\" title=\"nodenvのパスを通す\"></a>nodenvのパスを通す</h2><p>ターミナル起動時にパスを通す様に設定</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'PATH=$&#123;PATH&#125;:$&#123;HOME&#125;/.nodenv/bin'</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"initする\"><a href=\"#initする\" class=\"headerlink\" title=\"initする\"></a>initする</h2><p>ターミナル起動時にinitする様に設定</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'eval \"$(nodenv init -)\"'</span></span><br></pre></td></tr></table></figure>\n\n<p>nodenvコマンドは使えるが、nodenv installコマンドはまだ使えない</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nodenv install 12.14.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodenvのinstallコマンドをインストール\"><a href=\"#nodenvのinstallコマンドをインストール\" class=\"headerlink\" title=\"nodenvのinstallコマンドをインストール\"></a>nodenvのinstallコマンドをインストール</h2><p>installコマンドやuninstallコマンドを使うためにはnode-buildが必要らしい</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/nodenv/node-build.git /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'sudo PREFIX=/usr/local /usr/local/src/install.sh'</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodenvでnodeをインストール\"><a href=\"#nodenvでnodeをインストール\" class=\"headerlink\" title=\"nodenvでnodeをインストール\"></a>nodenvでnodeをインストール</h2><p>ターミナルを起動し直し、以下コマンドを実行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nodenv install 12.14.1</span><br><span class=\"line\">$ nodenv global 12.14.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodeとnpmのバージョンを確認する\"><a href=\"#nodeとnpmのバージョンを確認する\" class=\"headerlink\" title=\"nodeとnpmのバージョンを確認する\"></a>nodeとnpmのバージョンを確認する</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ node -v</span><br><span class=\"line\">v12.14.1</span><br><span class=\"line\">$ npm -v</span><br><span class=\"line\">6.13.4</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"basenameコマンドの使い方","date":"2020-01-31T14:51:04.000Z","_content":"\nbasenameの初めて見る使い方を見たのでメモ\n\n# 環境\n\n- Ubuntu18.04\n  - bash\n\n# 出来ること\n\nパスで指定されたファイルやフォルダの名前だけを出力する\n\n以下の様にファイルが配置されているとします。\n\n```bash\n$ mkdir test\n$ cd test\n$ mkdir dir1\n$ touch dir1/test.sh\n$ find\n.\n./dir1\n./dir1/test.sh\n```\n\n## ファイル名を出力する\n\nパスは要らない時などに使える。\n\n```bash\n$ basename ./dir/test.sh\ntest.sh\n```\n\n## ファイル名の末尾文字を削除し出力する\n\nこれで拡張子を消したりできる。\n\n```bash\n$ basename ./dir/test.sh .sh\ntest\n```\n","source":"_posts/shell-basename.md","raw":"---\nlayout: post\ntitle: basenameコマンドの使い方\ndate: 2020-01-31 23:51:04\ntags: [sh,basename]\n---\n\nbasenameの初めて見る使い方を見たのでメモ\n\n# 環境\n\n- Ubuntu18.04\n  - bash\n\n# 出来ること\n\nパスで指定されたファイルやフォルダの名前だけを出力する\n\n以下の様にファイルが配置されているとします。\n\n```bash\n$ mkdir test\n$ cd test\n$ mkdir dir1\n$ touch dir1/test.sh\n$ find\n.\n./dir1\n./dir1/test.sh\n```\n\n## ファイル名を出力する\n\nパスは要らない時などに使える。\n\n```bash\n$ basename ./dir/test.sh\ntest.sh\n```\n\n## ファイル名の末尾文字を削除し出力する\n\nこれで拡張子を消したりできる。\n\n```bash\n$ basename ./dir/test.sh .sh\ntest\n```\n","slug":"shell-basename","published":1,"updated":"2020-02-01T04:47:11.174Z","_id":"ck6ku49tn00158lvquxpolg1w","comments":1,"photos":[],"link":"","content":"<p>basenameの初めて見る使い方を見たのでメモ</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04<ul>\n<li>bash</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"出来ること\"><a href=\"#出来ること\" class=\"headerlink\" title=\"出来ること\"></a>出来ること</h1><p>パスで指定されたファイルやフォルダの名前だけを出力する</p>\n<p>以下の様にファイルが配置されているとします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir <span class=\"built_in\">test</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span></span><br><span class=\"line\">$ mkdir dir1</span><br><span class=\"line\">$ touch dir1/test.sh</span><br><span class=\"line\">$ find</span><br><span class=\"line\">.</span><br><span class=\"line\">./dir1</span><br><span class=\"line\">./dir1/test.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ファイル名を出力する\"><a href=\"#ファイル名を出力する\" class=\"headerlink\" title=\"ファイル名を出力する\"></a>ファイル名を出力する</h2><p>パスは要らない時などに使える。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ basename ./dir/test.sh</span><br><span class=\"line\">test.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ファイル名の末尾文字を削除し出力する\"><a href=\"#ファイル名の末尾文字を削除し出力する\" class=\"headerlink\" title=\"ファイル名の末尾文字を削除し出力する\"></a>ファイル名の末尾文字を削除し出力する</h2><p>これで拡張子を消したりできる。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ basename ./dir/test.sh .sh</span><br><span class=\"line\"><span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>basenameの初めて見る使い方を見たのでメモ</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04<ul>\n<li>bash</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"出来ること\"><a href=\"#出来ること\" class=\"headerlink\" title=\"出来ること\"></a>出来ること</h1><p>パスで指定されたファイルやフォルダの名前だけを出力する</p>\n<p>以下の様にファイルが配置されているとします。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir <span class=\"built_in\">test</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span></span><br><span class=\"line\">$ mkdir dir1</span><br><span class=\"line\">$ touch dir1/test.sh</span><br><span class=\"line\">$ find</span><br><span class=\"line\">.</span><br><span class=\"line\">./dir1</span><br><span class=\"line\">./dir1/test.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ファイル名を出力する\"><a href=\"#ファイル名を出力する\" class=\"headerlink\" title=\"ファイル名を出力する\"></a>ファイル名を出力する</h2><p>パスは要らない時などに使える。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ basename ./dir/test.sh</span><br><span class=\"line\">test.sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ファイル名の末尾文字を削除し出力する\"><a href=\"#ファイル名の末尾文字を削除し出力する\" class=\"headerlink\" title=\"ファイル名の末尾文字を削除し出力する\"></a>ファイル名の末尾文字を削除し出力する</h2><p>これで拡張子を消したりできる。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ basename ./dir/test.sh .sh</span><br><span class=\"line\"><span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"UbuntuとApacheでウェブサーバを構築","date":"2020-01-22T15:54:51.000Z","_content":"\n# 環境\n\n- Ubuntu 16.04(KAGOYA VPS KVM)\n\n# Apacheって何\n- ブログやホームページを公開するために使う事が出来るウェブサーバ\n\n# 特徴\n- phpやCGIを用いた動的コンテンツの表示が出来る\n- リバースプロキシとしても使用できる\n- 使われ始めてからの歴史が長い\n\n# 初期ページを表示するまでの手順\n## ポート解放とApacheのインストール、起動\n```\n$ apt update\n\nufw(ファイアウォール)をインストール\n$ apt install ufw\n\nインストール直後はufwはファイアウォールとして指定されないためufwを有効化\n$ ufw enable\n\n「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter\n\nsshのポートを開く\nこれを行わないとssh切断したあと接続出来なくなってしまいます！\n$ ufw allow 22\n\nApacheが使用するポートを開く\n$ ufw allow 80\n\nApacheをインストールする\n$ apt install apache2\n\nApacheが稼働している事を確認する\n$ curl localhost && echo success || echo failed\n\nsuccessと表示されればApacheは起動出来ています。\n表示された長いhtmlはデフォルトページのhtmlソースです。\n\n自分のIPアドレスを確認する\n$ ifconfig | grep \"inet addr:\"\n\n192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います\nこれらはローカルIPや、グローバルIPと呼ばれます。\n127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。\n```\n\n## 実際にページを表示してみる\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。\n\nこのような画面が表示されると思います。\n![スクリーンショット 2018-07-02 2.04.52.png](https://qiita-image-store.s3.amazonaws.com/0/266455/3ffbc0f8-a777-8a56-1fdb-6d4a7d984857.png)\nApacheではこれが初期ページとして設定されています。\n\n# ページを追加、変更する\n## ページを追加する\nApacheがブラウザに送ってくれているhtmlは /var/www/html/ となっている様です。\nここを ドキュメントルート と呼びます。\nここにファイルを配置する事でApache経由で参照する事ができるようになります。\n```\nドキュメントルートに移動する\n$ cd /var/www/html/\n新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします\n$ echo \"Hello World!\" > ./test.html\n```\n\n## 実際にページを表示してみる\n他のPCからページを\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、下記のようにアドレスバーに入力します。\n```IPアドレス/test.html\n```\n\nこの様な画面が表示されます。\n![スクリーンショット 2018-07-02 0.07.53.png](https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png)\n以上となります、Nginxが気になる方はこちら\n> https://qiita.com/noma3629/items/807f25f9eb13525eebef\n\n","source":"_posts/ubuntu-apache-webserver.md","raw":"---\nlayout: post\ntitle: UbuntuとApacheでウェブサーバを構築\ndate: 2020-01-23 00:54:51\ntags: [Apache,Ubuntu]\n---\n\n# 環境\n\n- Ubuntu 16.04(KAGOYA VPS KVM)\n\n# Apacheって何\n- ブログやホームページを公開するために使う事が出来るウェブサーバ\n\n# 特徴\n- phpやCGIを用いた動的コンテンツの表示が出来る\n- リバースプロキシとしても使用できる\n- 使われ始めてからの歴史が長い\n\n# 初期ページを表示するまでの手順\n## ポート解放とApacheのインストール、起動\n```\n$ apt update\n\nufw(ファイアウォール)をインストール\n$ apt install ufw\n\nインストール直後はufwはファイアウォールとして指定されないためufwを有効化\n$ ufw enable\n\n「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter\n\nsshのポートを開く\nこれを行わないとssh切断したあと接続出来なくなってしまいます！\n$ ufw allow 22\n\nApacheが使用するポートを開く\n$ ufw allow 80\n\nApacheをインストールする\n$ apt install apache2\n\nApacheが稼働している事を確認する\n$ curl localhost && echo success || echo failed\n\nsuccessと表示されればApacheは起動出来ています。\n表示された長いhtmlはデフォルトページのhtmlソースです。\n\n自分のIPアドレスを確認する\n$ ifconfig | grep \"inet addr:\"\n\n192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います\nこれらはローカルIPや、グローバルIPと呼ばれます。\n127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。\n```\n\n## 実際にページを表示してみる\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。\n\nこのような画面が表示されると思います。\n![スクリーンショット 2018-07-02 2.04.52.png](https://qiita-image-store.s3.amazonaws.com/0/266455/3ffbc0f8-a777-8a56-1fdb-6d4a7d984857.png)\nApacheではこれが初期ページとして設定されています。\n\n# ページを追加、変更する\n## ページを追加する\nApacheがブラウザに送ってくれているhtmlは /var/www/html/ となっている様です。\nここを ドキュメントルート と呼びます。\nここにファイルを配置する事でApache経由で参照する事ができるようになります。\n```\nドキュメントルートに移動する\n$ cd /var/www/html/\n新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします\n$ echo \"Hello World!\" > ./test.html\n```\n\n## 実際にページを表示してみる\n他のPCからページを\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、下記のようにアドレスバーに入力します。\n```IPアドレス/test.html\n```\n\nこの様な画面が表示されます。\n![スクリーンショット 2018-07-02 0.07.53.png](https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png)\n以上となります、Nginxが気になる方はこちら\n> https://qiita.com/noma3629/items/807f25f9eb13525eebef\n\n","slug":"ubuntu-apache-webserver","published":1,"updated":"2020-02-09T16:03:59.713Z","_id":"ck6ku49tp00178lvqfvku42w0","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 16.04(KAGOYA VPS KVM)</li>\n</ul>\n<h1 id=\"Apacheって何\"><a href=\"#Apacheって何\" class=\"headerlink\" title=\"Apacheって何\"></a>Apacheって何</h1><ul>\n<li>ブログやホームページを公開するために使う事が出来るウェブサーバ</li>\n</ul>\n<h1 id=\"特徴\"><a href=\"#特徴\" class=\"headerlink\" title=\"特徴\"></a>特徴</h1><ul>\n<li>phpやCGIを用いた動的コンテンツの表示が出来る</li>\n<li>リバースプロキシとしても使用できる</li>\n<li>使われ始めてからの歴史が長い</li>\n</ul>\n<h1 id=\"初期ページを表示するまでの手順\"><a href=\"#初期ページを表示するまでの手順\" class=\"headerlink\" title=\"初期ページを表示するまでの手順\"></a>初期ページを表示するまでの手順</h1><h2 id=\"ポート解放とApacheのインストール、起動\"><a href=\"#ポート解放とApacheのインストール、起動\" class=\"headerlink\" title=\"ポート解放とApacheのインストール、起動\"></a>ポート解放とApacheのインストール、起動</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\"></span><br><span class=\"line\">ufw(ファイアウォール)をインストール</span><br><span class=\"line\">$ apt install ufw</span><br><span class=\"line\"></span><br><span class=\"line\">インストール直後はufwはファイアウォールとして指定されないためufwを有効化</span><br><span class=\"line\">$ ufw enable</span><br><span class=\"line\"></span><br><span class=\"line\">「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter</span><br><span class=\"line\"></span><br><span class=\"line\">sshのポートを開く</span><br><span class=\"line\">これを行わないとssh切断したあと接続出来なくなってしまいます！</span><br><span class=\"line\">$ ufw allow 22</span><br><span class=\"line\"></span><br><span class=\"line\">Apacheが使用するポートを開く</span><br><span class=\"line\">$ ufw allow 80</span><br><span class=\"line\"></span><br><span class=\"line\">Apacheをインストールする</span><br><span class=\"line\">$ apt install apache2</span><br><span class=\"line\"></span><br><span class=\"line\">Apacheが稼働している事を確認する</span><br><span class=\"line\">$ curl localhost &amp;&amp; echo success || echo failed</span><br><span class=\"line\"></span><br><span class=\"line\">successと表示されればApacheは起動出来ています。</span><br><span class=\"line\">表示された長いhtmlはデフォルトページのhtmlソースです。</span><br><span class=\"line\"></span><br><span class=\"line\">自分のIPアドレスを確認する</span><br><span class=\"line\">$ ifconfig | grep &quot;inet addr:&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います</span><br><span class=\"line\">これらはローカルIPや、グローバルIPと呼ばれます。</span><br><span class=\"line\">127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる\"><a href=\"#実際にページを表示してみる\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。</p>\n<p>このような画面が表示されると思います。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/3ffbc0f8-a777-8a56-1fdb-6d4a7d984857.png\" alt=\"スクリーンショット 2018-07-02 2.04.52.png\"><br>Apacheではこれが初期ページとして設定されています。</p>\n<h1 id=\"ページを追加、変更する\"><a href=\"#ページを追加、変更する\" class=\"headerlink\" title=\"ページを追加、変更する\"></a>ページを追加、変更する</h1><h2 id=\"ページを追加する\"><a href=\"#ページを追加する\" class=\"headerlink\" title=\"ページを追加する\"></a>ページを追加する</h2><p>Apacheがブラウザに送ってくれているhtmlは /var/www/html/ となっている様です。<br>ここを ドキュメントルート と呼びます。<br>ここにファイルを配置する事でApache経由で参照する事ができるようになります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ドキュメントルートに移動する</span><br><span class=\"line\">$ cd /var/www/html/</span><br><span class=\"line\">新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします</span><br><span class=\"line\">$ echo &quot;Hello World!&quot; &gt; ./test.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる-1\"><a href=\"#実際にページを表示してみる-1\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>他のPCからページを<br>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、下記のようにアドレスバーに入力します。</p>\n<pre><code class=\"IPアドレス/test.html\"></code></pre>\n<p>この様な画面が表示されます。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png\" alt=\"スクリーンショット 2018-07-02 0.07.53.png\"><br>以上となります、Nginxが気になる方はこちら</p>\n<blockquote>\n<p><a href=\"https://qiita.com/noma3629/items/807f25f9eb13525eebef\" target=\"_blank\" rel=\"noopener\">https://qiita.com/noma3629/items/807f25f9eb13525eebef</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 16.04(KAGOYA VPS KVM)</li>\n</ul>\n<h1 id=\"Apacheって何\"><a href=\"#Apacheって何\" class=\"headerlink\" title=\"Apacheって何\"></a>Apacheって何</h1><ul>\n<li>ブログやホームページを公開するために使う事が出来るウェブサーバ</li>\n</ul>\n<h1 id=\"特徴\"><a href=\"#特徴\" class=\"headerlink\" title=\"特徴\"></a>特徴</h1><ul>\n<li>phpやCGIを用いた動的コンテンツの表示が出来る</li>\n<li>リバースプロキシとしても使用できる</li>\n<li>使われ始めてからの歴史が長い</li>\n</ul>\n<h1 id=\"初期ページを表示するまでの手順\"><a href=\"#初期ページを表示するまでの手順\" class=\"headerlink\" title=\"初期ページを表示するまでの手順\"></a>初期ページを表示するまでの手順</h1><h2 id=\"ポート解放とApacheのインストール、起動\"><a href=\"#ポート解放とApacheのインストール、起動\" class=\"headerlink\" title=\"ポート解放とApacheのインストール、起動\"></a>ポート解放とApacheのインストール、起動</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\"></span><br><span class=\"line\">ufw(ファイアウォール)をインストール</span><br><span class=\"line\">$ apt install ufw</span><br><span class=\"line\"></span><br><span class=\"line\">インストール直後はufwはファイアウォールとして指定されないためufwを有効化</span><br><span class=\"line\">$ ufw enable</span><br><span class=\"line\"></span><br><span class=\"line\">「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter</span><br><span class=\"line\"></span><br><span class=\"line\">sshのポートを開く</span><br><span class=\"line\">これを行わないとssh切断したあと接続出来なくなってしまいます！</span><br><span class=\"line\">$ ufw allow 22</span><br><span class=\"line\"></span><br><span class=\"line\">Apacheが使用するポートを開く</span><br><span class=\"line\">$ ufw allow 80</span><br><span class=\"line\"></span><br><span class=\"line\">Apacheをインストールする</span><br><span class=\"line\">$ apt install apache2</span><br><span class=\"line\"></span><br><span class=\"line\">Apacheが稼働している事を確認する</span><br><span class=\"line\">$ curl localhost &amp;&amp; echo success || echo failed</span><br><span class=\"line\"></span><br><span class=\"line\">successと表示されればApacheは起動出来ています。</span><br><span class=\"line\">表示された長いhtmlはデフォルトページのhtmlソースです。</span><br><span class=\"line\"></span><br><span class=\"line\">自分のIPアドレスを確認する</span><br><span class=\"line\">$ ifconfig | grep &quot;inet addr:&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います</span><br><span class=\"line\">これらはローカルIPや、グローバルIPと呼ばれます。</span><br><span class=\"line\">127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる\"><a href=\"#実際にページを表示してみる\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。</p>\n<p>このような画面が表示されると思います。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/3ffbc0f8-a777-8a56-1fdb-6d4a7d984857.png\" alt=\"スクリーンショット 2018-07-02 2.04.52.png\"><br>Apacheではこれが初期ページとして設定されています。</p>\n<h1 id=\"ページを追加、変更する\"><a href=\"#ページを追加、変更する\" class=\"headerlink\" title=\"ページを追加、変更する\"></a>ページを追加、変更する</h1><h2 id=\"ページを追加する\"><a href=\"#ページを追加する\" class=\"headerlink\" title=\"ページを追加する\"></a>ページを追加する</h2><p>Apacheがブラウザに送ってくれているhtmlは /var/www/html/ となっている様です。<br>ここを ドキュメントルート と呼びます。<br>ここにファイルを配置する事でApache経由で参照する事ができるようになります。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ドキュメントルートに移動する</span><br><span class=\"line\">$ cd /var/www/html/</span><br><span class=\"line\">新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします</span><br><span class=\"line\">$ echo &quot;Hello World!&quot; &gt; ./test.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる-1\"><a href=\"#実際にページを表示してみる-1\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>他のPCからページを<br>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、下記のようにアドレスバーに入力します。</p>\n<pre><code class=\"IPアドレス/test.html\"></code></pre>\n<p>この様な画面が表示されます。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png\" alt=\"スクリーンショット 2018-07-02 0.07.53.png\"><br>以上となります、Nginxが気になる方はこちら</p>\n<blockquote>\n<p><a href=\"https://qiita.com/noma3629/items/807f25f9eb13525eebef\" target=\"_blank\" rel=\"noopener\">https://qiita.com/noma3629/items/807f25f9eb13525eebef</a></p>\n</blockquote>\n"},{"layout":"post","title":"WSLのUbuntuでbyobuを使う","date":"2020-02-13T14:14:06.000Z","_content":"\n# 環境\n\n- Windows10\n  - Ubuntu 18.04\n    - byobu 5.125\n\n# 手順\n\n## [byobuをインストール](https://sakkuntyo.github.io/2020/02/05/byobu/)\n\n## bash起動設定\n\n.bashrcに以下一行を追記する\n曖昧文字幅を全て全角幅にする設定です。\n\n```bash\nexport VTE_CJK_WIDTH=1\n```\n\n","source":"_posts/wsl-ubuntu-byobu.md","raw":"---\nlayout: post\ntitle: WSLのUbuntuでbyobuを使う\ndate: 2020-02-13 23:14:06\ntags: [wsl,byobu]\n---\n\n# 環境\n\n- Windows10\n  - Ubuntu 18.04\n    - byobu 5.125\n\n# 手順\n\n## [byobuをインストール](https://sakkuntyo.github.io/2020/02/05/byobu/)\n\n## bash起動設定\n\n.bashrcに以下一行を追記する\n曖昧文字幅を全て全角幅にする設定です。\n\n```bash\nexport VTE_CJK_WIDTH=1\n```\n\n","slug":"wsl-ubuntu-byobu","published":1,"updated":"2020-02-13T14:24:38.994Z","_id":"ck6ku49tq001a8lvqvd62rel0","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows10<ul>\n<li>Ubuntu 18.04<ul>\n<li>byobu 5.125</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"byobuをインストール\"><a href=\"#byobuをインストール\" class=\"headerlink\" title=\"byobuをインストール\"></a><a href=\"https://sakkuntyo.github.io/2020/02/05/byobu/\">byobuをインストール</a></h2><h2 id=\"bash起動設定\"><a href=\"#bash起動設定\" class=\"headerlink\" title=\"bash起動設定\"></a>bash起動設定</h2><p>.bashrcに以下一行を追記する<br>曖昧文字幅を全て全角幅にする設定です。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> VTE_CJK_WIDTH=1</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows10<ul>\n<li>Ubuntu 18.04<ul>\n<li>byobu 5.125</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"byobuをインストール\"><a href=\"#byobuをインストール\" class=\"headerlink\" title=\"byobuをインストール\"></a><a href=\"https://sakkuntyo.github.io/2020/02/05/byobu/\">byobuをインストール</a></h2><h2 id=\"bash起動設定\"><a href=\"#bash起動設定\" class=\"headerlink\" title=\"bash起動設定\"></a>bash起動設定</h2><p>.bashrcに以下一行を追記する<br>曖昧文字幅を全て全角幅にする設定です。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> VTE_CJK_WIDTH=1</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Microsoft製?Androidタブレットを作成する","_content":"","source":"_drafts/Microsoft製-Androidタブレットを作成する.md","raw":"---\ntitle: Microsoft製?Androidタブレットを作成する\ntags:\n---\n","slug":"Microsoft製-Androidタブレットを作成する","published":0,"date":"2019-11-17T14:34:52.474Z","updated":"2019-11-17T14:34:52.474Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6ku49tr001b8lvq1u6ppqu0","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","title":"WindowsからWSLのUbuntuのディレクトリをマウントする","date":"2020-02-11T13:46:44.000Z","_content":"\n# 環境\n\n- Windows10\n- Ubuntu 18.04(WSL)\n\n# 手順\n\n## WSLのディレクトリを開く\n\n実はエクスプローラからWSLのディレクトリを除くことが出来ます。\n\nエクスプローラにて、\\\\\\\\wsl$を開く\n\n![1](./images/wsl-mount-for-windows1.png)\n\n## マウントしたいディレクトリを開き、アドレスをコピー\n\n![2](./images/wsl-mount-for-windows2.png)\n\n## マウント\n\n「ネットワーク」を右クリックし、「ネットワークドライブの割り当て」を選択します。\n\n![3](./images/wsl-mount-for-windows3.png)\n\nその後、割り当てたいドライブレターを選択し、先ほどのアドレスを張り付けし、OKします。\n\n![4](./images/wsl-mount-for-windows4.png)\n\n## 確認\n\n「PC」のツリー上に表示される様になります。\n\n![5](./images/wsl-mount-for-windows5.png)\n\n## アンマウント\n\n![6](./images/wsl-mount-for-windows6.png)\n","source":"_posts/wsl-mount-for-windows.md","raw":"---\nlayout: post\ntitle: WindowsからWSLのUbuntuのディレクトリをマウントする\ndate: 2020-02-11 22:46:44\ntags: [wsl]\n---\n\n# 環境\n\n- Windows10\n- Ubuntu 18.04(WSL)\n\n# 手順\n\n## WSLのディレクトリを開く\n\n実はエクスプローラからWSLのディレクトリを除くことが出来ます。\n\nエクスプローラにて、\\\\\\\\wsl$を開く\n\n![1](./images/wsl-mount-for-windows1.png)\n\n## マウントしたいディレクトリを開き、アドレスをコピー\n\n![2](./images/wsl-mount-for-windows2.png)\n\n## マウント\n\n「ネットワーク」を右クリックし、「ネットワークドライブの割り当て」を選択します。\n\n![3](./images/wsl-mount-for-windows3.png)\n\nその後、割り当てたいドライブレターを選択し、先ほどのアドレスを張り付けし、OKします。\n\n![4](./images/wsl-mount-for-windows4.png)\n\n## 確認\n\n「PC」のツリー上に表示される様になります。\n\n![5](./images/wsl-mount-for-windows5.png)\n\n## アンマウント\n\n![6](./images/wsl-mount-for-windows6.png)\n","slug":"wsl-mount-for-windows","published":1,"updated":"2020-02-11T14:05:00.022Z","_id":"ck6ku49tt001d8lvqs53d3b4s","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows10</li>\n<li>Ubuntu 18.04(WSL)</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"WSLのディレクトリを開く\"><a href=\"#WSLのディレクトリを開く\" class=\"headerlink\" title=\"WSLのディレクトリを開く\"></a>WSLのディレクトリを開く</h2><p>実はエクスプローラからWSLのディレクトリを除くことが出来ます。</p>\n<p>エクスプローラにて、\\\\wsl$を開く</p>\n<p><img src=\"./images/wsl-mount-for-windows1.png\" alt=\"1\"></p>\n<h2 id=\"マウントしたいディレクトリを開き、アドレスをコピー\"><a href=\"#マウントしたいディレクトリを開き、アドレスをコピー\" class=\"headerlink\" title=\"マウントしたいディレクトリを開き、アドレスをコピー\"></a>マウントしたいディレクトリを開き、アドレスをコピー</h2><p><img src=\"./images/wsl-mount-for-windows2.png\" alt=\"2\"></p>\n<h2 id=\"マウント\"><a href=\"#マウント\" class=\"headerlink\" title=\"マウント\"></a>マウント</h2><p>「ネットワーク」を右クリックし、「ネットワークドライブの割り当て」を選択します。</p>\n<p><img src=\"./images/wsl-mount-for-windows3.png\" alt=\"3\"></p>\n<p>その後、割り当てたいドライブレターを選択し、先ほどのアドレスを張り付けし、OKします。</p>\n<p><img src=\"./images/wsl-mount-for-windows4.png\" alt=\"4\"></p>\n<h2 id=\"確認\"><a href=\"#確認\" class=\"headerlink\" title=\"確認\"></a>確認</h2><p>「PC」のツリー上に表示される様になります。</p>\n<p><img src=\"./images/wsl-mount-for-windows5.png\" alt=\"5\"></p>\n<h2 id=\"アンマウント\"><a href=\"#アンマウント\" class=\"headerlink\" title=\"アンマウント\"></a>アンマウント</h2><p><img src=\"./images/wsl-mount-for-windows6.png\" alt=\"6\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows10</li>\n<li>Ubuntu 18.04(WSL)</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"WSLのディレクトリを開く\"><a href=\"#WSLのディレクトリを開く\" class=\"headerlink\" title=\"WSLのディレクトリを開く\"></a>WSLのディレクトリを開く</h2><p>実はエクスプローラからWSLのディレクトリを除くことが出来ます。</p>\n<p>エクスプローラにて、\\\\wsl$を開く</p>\n<p><img src=\"./images/wsl-mount-for-windows1.png\" alt=\"1\"></p>\n<h2 id=\"マウントしたいディレクトリを開き、アドレスをコピー\"><a href=\"#マウントしたいディレクトリを開き、アドレスをコピー\" class=\"headerlink\" title=\"マウントしたいディレクトリを開き、アドレスをコピー\"></a>マウントしたいディレクトリを開き、アドレスをコピー</h2><p><img src=\"./images/wsl-mount-for-windows2.png\" alt=\"2\"></p>\n<h2 id=\"マウント\"><a href=\"#マウント\" class=\"headerlink\" title=\"マウント\"></a>マウント</h2><p>「ネットワーク」を右クリックし、「ネットワークドライブの割り当て」を選択します。</p>\n<p><img src=\"./images/wsl-mount-for-windows3.png\" alt=\"3\"></p>\n<p>その後、割り当てたいドライブレターを選択し、先ほどのアドレスを張り付けし、OKします。</p>\n<p><img src=\"./images/wsl-mount-for-windows4.png\" alt=\"4\"></p>\n<h2 id=\"確認\"><a href=\"#確認\" class=\"headerlink\" title=\"確認\"></a>確認</h2><p>「PC」のツリー上に表示される様になります。</p>\n<p><img src=\"./images/wsl-mount-for-windows5.png\" alt=\"5\"></p>\n<h2 id=\"アンマウント\"><a href=\"#アンマウント\" class=\"headerlink\" title=\"アンマウント\"></a>アンマウント</h2><p><img src=\"./images/wsl-mount-for-windows6.png\" alt=\"6\"></p>\n"},{"title":"VagrantでMint19デスクトップ環境を作成","date":"2019-10-26T05:21:32.000Z","_content":"\n## virtualboxをインストール\n\n[ここ](https://www.virtualbox.org/wiki/Downloads)からダウンロードできる\n\n## vagrantをインストール\n\n[ここ](https://www.vagrantup.com/downloads.html)からダウンロードできる\n\nコマンドが使用できる様になっている事を確認する\n\n```bash\n$ vagrant --help\n```\n\n## Hyper-Vを無効化する（Windowsの場合）\n\nPowerShellを管理者権限で起動し、以下コマンドを実行する\n\n```PowerShell\n> Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All\n```\n\n## Mint19Mateデスクトップ環境を立ち上げる\n\n### boxを追加する\n\nターミナルにて以下のコマンドを実行します。\n\n```bash\n$ vagrant box add antonilin/mint-19-mate\n```\n\n### プロジェクトディレクトリを作成して初期化する\n\n```bash\n$ mkdir mint19mate\n$ cd mint19mate\n$ vagrant init antonilin/mint-19-mate\n```\n\n### Mint19を起動\n\n```bash\n$ vagrant up\n```\n\n> **メモ**\n> Windows環境では、ここでUSB2.0のサポートを無効にしろと言われたので無効にする必要がありました。\n","source":"_posts/vagrant-up-mint19-desktop.md","raw":"---\ntitle: VagrantでMint19デスクトップ環境を作成\ndate: 2019-10-26 14:21:32\ntags: [vagrant]\n---\n\n## virtualboxをインストール\n\n[ここ](https://www.virtualbox.org/wiki/Downloads)からダウンロードできる\n\n## vagrantをインストール\n\n[ここ](https://www.vagrantup.com/downloads.html)からダウンロードできる\n\nコマンドが使用できる様になっている事を確認する\n\n```bash\n$ vagrant --help\n```\n\n## Hyper-Vを無効化する（Windowsの場合）\n\nPowerShellを管理者権限で起動し、以下コマンドを実行する\n\n```PowerShell\n> Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All\n```\n\n## Mint19Mateデスクトップ環境を立ち上げる\n\n### boxを追加する\n\nターミナルにて以下のコマンドを実行します。\n\n```bash\n$ vagrant box add antonilin/mint-19-mate\n```\n\n### プロジェクトディレクトリを作成して初期化する\n\n```bash\n$ mkdir mint19mate\n$ cd mint19mate\n$ vagrant init antonilin/mint-19-mate\n```\n\n### Mint19を起動\n\n```bash\n$ vagrant up\n```\n\n> **メモ**\n> Windows環境では、ここでUSB2.0のサポートを無効にしろと言われたので無効にする必要がありました。\n","slug":"vagrant-up-mint19-desktop","published":1,"updated":"2020-02-09T16:13:28.624Z","_id":"ck6ku49tu001f8lvqp2rpnc9l","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"virtualboxをインストール\"><a href=\"#virtualboxをインストール\" class=\"headerlink\" title=\"virtualboxをインストール\"></a>virtualboxをインストール</h2><p><a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">ここ</a>からダウンロードできる</p>\n<h2 id=\"vagrantをインストール\"><a href=\"#vagrantをインストール\" class=\"headerlink\" title=\"vagrantをインストール\"></a>vagrantをインストール</h2><p><a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\" rel=\"noopener\">ここ</a>からダウンロードできる</p>\n<p>コマンドが使用できる様になっている事を確認する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vagrant --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hyper-Vを無効化する（Windowsの場合）\"><a href=\"#Hyper-Vを無効化する（Windowsの場合）\" class=\"headerlink\" title=\"Hyper-Vを無効化する（Windowsの場合）\"></a>Hyper-Vを無効化する（Windowsの場合）</h2><p>PowerShellを管理者権限で起動し、以下コマンドを実行する</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mint19Mateデスクトップ環境を立ち上げる\"><a href=\"#Mint19Mateデスクトップ環境を立ち上げる\" class=\"headerlink\" title=\"Mint19Mateデスクトップ環境を立ち上げる\"></a>Mint19Mateデスクトップ環境を立ち上げる</h2><h3 id=\"boxを追加する\"><a href=\"#boxを追加する\" class=\"headerlink\" title=\"boxを追加する\"></a>boxを追加する</h3><p>ターミナルにて以下のコマンドを実行します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vagrant box add antonilin/mint-19-mate</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"プロジェクトディレクトリを作成して初期化する\"><a href=\"#プロジェクトディレクトリを作成して初期化する\" class=\"headerlink\" title=\"プロジェクトディレクトリを作成して初期化する\"></a>プロジェクトディレクトリを作成して初期化する</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir mint19mate</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> mint19mate</span><br><span class=\"line\">$ vagrant init antonilin/mint-19-mate</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Mint19を起動\"><a href=\"#Mint19を起動\" class=\"headerlink\" title=\"Mint19を起動\"></a>Mint19を起動</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vagrant up</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>メモ</strong><br>Windows環境では、ここでUSB2.0のサポートを無効にしろと言われたので無効にする必要がありました。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"virtualboxをインストール\"><a href=\"#virtualboxをインストール\" class=\"headerlink\" title=\"virtualboxをインストール\"></a>virtualboxをインストール</h2><p><a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">ここ</a>からダウンロードできる</p>\n<h2 id=\"vagrantをインストール\"><a href=\"#vagrantをインストール\" class=\"headerlink\" title=\"vagrantをインストール\"></a>vagrantをインストール</h2><p><a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\" rel=\"noopener\">ここ</a>からダウンロードできる</p>\n<p>コマンドが使用できる様になっている事を確認する</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vagrant --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hyper-Vを無効化する（Windowsの場合）\"><a href=\"#Hyper-Vを無効化する（Windowsの場合）\" class=\"headerlink\" title=\"Hyper-Vを無効化する（Windowsの場合）\"></a>Hyper-Vを無効化する（Windowsの場合）</h2><p>PowerShellを管理者権限で起動し、以下コマンドを実行する</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Mint19Mateデスクトップ環境を立ち上げる\"><a href=\"#Mint19Mateデスクトップ環境を立ち上げる\" class=\"headerlink\" title=\"Mint19Mateデスクトップ環境を立ち上げる\"></a>Mint19Mateデスクトップ環境を立ち上げる</h2><h3 id=\"boxを追加する\"><a href=\"#boxを追加する\" class=\"headerlink\" title=\"boxを追加する\"></a>boxを追加する</h3><p>ターミナルにて以下のコマンドを実行します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vagrant box add antonilin/mint-19-mate</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"プロジェクトディレクトリを作成して初期化する\"><a href=\"#プロジェクトディレクトリを作成して初期化する\" class=\"headerlink\" title=\"プロジェクトディレクトリを作成して初期化する\"></a>プロジェクトディレクトリを作成して初期化する</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir mint19mate</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> mint19mate</span><br><span class=\"line\">$ vagrant init antonilin/mint-19-mate</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Mint19を起動\"><a href=\"#Mint19を起動\" class=\"headerlink\" title=\"Mint19を起動\"></a>Mint19を起動</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vagrant up</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>メモ</strong><br>Windows環境では、ここでUSB2.0のサポートを無効にしろと言われたので無効にする必要がありました。</p>\n</blockquote>\n"},{"layout":"post","title":"WSLのUbuntuの初期ユーザーをrootにする","date":"2020-01-29T13:39:26.000Z","_content":"\nWSLのUbuntuを使っていて、sudoの度に「めんどくさいなあ」と思っていた時に見つけた方法です。\n\n# 環境\n\n- Windows 10\n  - Ubuntu18.04(WSL)\n  - Ubuntu16.04(WSL)\n\n# 手順\n\n## Windowsの機能「Windows Subsystem for Linux」を有効化する\n\nWindowsキー -> 「機能の有効化」と検索し、「Windowsの機能の有効化または無効化」を開く -> Windows Subsystem for Linuxを探してチェックする\n\nその後、再起動する\n\n## Windows StoreからUbuntuをインストールする\n\nスタートメニューから「Microsoft Store」を開く -> どれでもよいのでUbuntuをインストール\n\n## 初期ユーザー名を「root」で指定する\n\nスタートメニューからUbuntuを開き、ユーザー名を聞かれたら「root」と入力\n\n既に存在しているユーザーです！(英語)と言われるが、そのまま閉じる\n\n## 再度Ubuntuを起動する\n\nなんと、rootでログインしています。\n","source":"_posts/wsl-ubuntu-root.md","raw":"---\nlayout: post\ntitle: WSLのUbuntuの初期ユーザーをrootにする\ndate: 2020-01-29 22:39:26\ntags: [WSL,Ubuntu,BoW]\n---\n\nWSLのUbuntuを使っていて、sudoの度に「めんどくさいなあ」と思っていた時に見つけた方法です。\n\n# 環境\n\n- Windows 10\n  - Ubuntu18.04(WSL)\n  - Ubuntu16.04(WSL)\n\n# 手順\n\n## Windowsの機能「Windows Subsystem for Linux」を有効化する\n\nWindowsキー -> 「機能の有効化」と検索し、「Windowsの機能の有効化または無効化」を開く -> Windows Subsystem for Linuxを探してチェックする\n\nその後、再起動する\n\n## Windows StoreからUbuntuをインストールする\n\nスタートメニューから「Microsoft Store」を開く -> どれでもよいのでUbuntuをインストール\n\n## 初期ユーザー名を「root」で指定する\n\nスタートメニューからUbuntuを開き、ユーザー名を聞かれたら「root」と入力\n\n既に存在しているユーザーです！(英語)と言われるが、そのまま閉じる\n\n## 再度Ubuntuを起動する\n\nなんと、rootでログインしています。\n","slug":"wsl-ubuntu-root","published":1,"updated":"2020-01-29T13:49:30.263Z","_id":"ck6ku49tv001i8lvqt5glolkq","comments":1,"photos":[],"link":"","content":"<p>WSLのUbuntuを使っていて、sudoの度に「めんどくさいなあ」と思っていた時に見つけた方法です。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows 10<ul>\n<li>Ubuntu18.04(WSL)</li>\n<li>Ubuntu16.04(WSL)</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Windowsの機能「Windows-Subsystem-for-Linux」を有効化する\"><a href=\"#Windowsの機能「Windows-Subsystem-for-Linux」を有効化する\" class=\"headerlink\" title=\"Windowsの機能「Windows Subsystem for Linux」を有効化する\"></a>Windowsの機能「Windows Subsystem for Linux」を有効化する</h2><p>Windowsキー -&gt; 「機能の有効化」と検索し、「Windowsの機能の有効化または無効化」を開く -&gt; Windows Subsystem for Linuxを探してチェックする</p>\n<p>その後、再起動する</p>\n<h2 id=\"Windows-StoreからUbuntuをインストールする\"><a href=\"#Windows-StoreからUbuntuをインストールする\" class=\"headerlink\" title=\"Windows StoreからUbuntuをインストールする\"></a>Windows StoreからUbuntuをインストールする</h2><p>スタートメニューから「Microsoft Store」を開く -&gt; どれでもよいのでUbuntuをインストール</p>\n<h2 id=\"初期ユーザー名を「root」で指定する\"><a href=\"#初期ユーザー名を「root」で指定する\" class=\"headerlink\" title=\"初期ユーザー名を「root」で指定する\"></a>初期ユーザー名を「root」で指定する</h2><p>スタートメニューからUbuntuを開き、ユーザー名を聞かれたら「root」と入力</p>\n<p>既に存在しているユーザーです！(英語)と言われるが、そのまま閉じる</p>\n<h2 id=\"再度Ubuntuを起動する\"><a href=\"#再度Ubuntuを起動する\" class=\"headerlink\" title=\"再度Ubuntuを起動する\"></a>再度Ubuntuを起動する</h2><p>なんと、rootでログインしています。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>WSLのUbuntuを使っていて、sudoの度に「めんどくさいなあ」と思っていた時に見つけた方法です。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Windows 10<ul>\n<li>Ubuntu18.04(WSL)</li>\n<li>Ubuntu16.04(WSL)</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Windowsの機能「Windows-Subsystem-for-Linux」を有効化する\"><a href=\"#Windowsの機能「Windows-Subsystem-for-Linux」を有効化する\" class=\"headerlink\" title=\"Windowsの機能「Windows Subsystem for Linux」を有効化する\"></a>Windowsの機能「Windows Subsystem for Linux」を有効化する</h2><p>Windowsキー -&gt; 「機能の有効化」と検索し、「Windowsの機能の有効化または無効化」を開く -&gt; Windows Subsystem for Linuxを探してチェックする</p>\n<p>その後、再起動する</p>\n<h2 id=\"Windows-StoreからUbuntuをインストールする\"><a href=\"#Windows-StoreからUbuntuをインストールする\" class=\"headerlink\" title=\"Windows StoreからUbuntuをインストールする\"></a>Windows StoreからUbuntuをインストールする</h2><p>スタートメニューから「Microsoft Store」を開く -&gt; どれでもよいのでUbuntuをインストール</p>\n<h2 id=\"初期ユーザー名を「root」で指定する\"><a href=\"#初期ユーザー名を「root」で指定する\" class=\"headerlink\" title=\"初期ユーザー名を「root」で指定する\"></a>初期ユーザー名を「root」で指定する</h2><p>スタートメニューからUbuntuを開き、ユーザー名を聞かれたら「root」と入力</p>\n<p>既に存在しているユーザーです！(英語)と言われるが、そのまま閉じる</p>\n<h2 id=\"再度Ubuntuを起動する\"><a href=\"#再度Ubuntuを起動する\" class=\"headerlink\" title=\"再度Ubuntuを起動する\"></a>再度Ubuntuを起動する</h2><p>なんと、rootでログインしています。</p>\n"},{"title":"VDIでAndroidを起動する","_content":"","source":"_drafts/VDIでAndroidを起動する.md","raw":"---\ntitle: VDIでAndroidを起動する\ntags:\n---\n","slug":"VDIでAndroidを起動する","published":0,"date":"2019-11-17T14:34:52.477Z","updated":"2019-11-17T14:34:52.477Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6ku49tw001k8lvqsek1elhy","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","title":"コマンドラインの出力をクリップボードにコピー","date":"2020-01-11T19:03:19.000Z","_content":"\nターミナルに出てきた文字列をコピーしたい、\nただしマウス触るのがめんどくさい。。。\nそんな時に\n\n# 環境\n\n- Ubuntu18.04\n\n# インストール\n\n```bash\n$ apt update\n$ apt install xsel -y\n```\n\n# 使い方\n\n## 1. 出力をクリップボードにコピー\n\n```bash\n$ echo \"Hellow\" | xsel --clipboard --input\n```\n\nこの後右クリックやCtrl+Vで貼り付けできる様になっています。\n","source":"_posts/xsel-commandline-clipboard.md","raw":"---\nlayout: post\ntitle: コマンドラインの出力をクリップボードにコピー\ndate: 2020-01-12 04:03:19\ntags: [xsel,ubuntu]\n---\n\nターミナルに出てきた文字列をコピーしたい、\nただしマウス触るのがめんどくさい。。。\nそんな時に\n\n# 環境\n\n- Ubuntu18.04\n\n# インストール\n\n```bash\n$ apt update\n$ apt install xsel -y\n```\n\n# 使い方\n\n## 1. 出力をクリップボードにコピー\n\n```bash\n$ echo \"Hellow\" | xsel --clipboard --input\n```\n\nこの後右クリックやCtrl+Vで貼り付けできる様になっています。\n","slug":"xsel-commandline-clipboard","published":1,"updated":"2020-01-22T14:10:40.750Z","_id":"ck6ku49ty001m8lvq6655hig4","comments":1,"photos":[],"link":"","content":"<p>ターミナルに出てきた文字列をコピーしたい、<br>ただしマウス触るのがめんどくさい。。。<br>そんな時に</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\">$ apt install xsel -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"1-出力をクリップボードにコピー\"><a href=\"#1-出力をクリップボードにコピー\" class=\"headerlink\" title=\"1. 出力をクリップボードにコピー\"></a>1. 出力をクリップボードにコピー</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"Hellow\"</span> | xsel --clipboard --input</span><br></pre></td></tr></table></figure>\n\n<p>この後右クリックやCtrl+Vで貼り付けできる様になっています。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ターミナルに出てきた文字列をコピーしたい、<br>ただしマウス触るのがめんどくさい。。。<br>そんな時に</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"インストール\"><a href=\"#インストール\" class=\"headerlink\" title=\"インストール\"></a>インストール</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\">$ apt install xsel -y</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使い方\"><a href=\"#使い方\" class=\"headerlink\" title=\"使い方\"></a>使い方</h1><h2 id=\"1-出力をクリップボードにコピー\"><a href=\"#1-出力をクリップボードにコピー\" class=\"headerlink\" title=\"1. 出力をクリップボードにコピー\"></a>1. 出力をクリップボードにコピー</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"Hellow\"</span> | xsel --clipboard --input</span><br></pre></td></tr></table></figure>\n\n<p>この後右クリックやCtrl+Vで貼り付けできる様になっています。</p>\n"},{"layout":"post","title":"Golangをインストール","date":"2020-02-07T17:42:50.000Z","_content":"\n# 環境\n\n- Ubuntu 18.04\n\n#　手順\n\nhttp://golang.jp/install#windows\n\n##\n","source":"_drafts/go-install.md","raw":"---\nlayout: post\ntitle: Golangをインストール\ndate: 2020-02-08 02:42:50\ntags: [Go]\n---\n\n# 環境\n\n- Ubuntu 18.04\n\n#　手順\n\nhttp://golang.jp/install#windows\n\n##\n","slug":"go-install","published":0,"updated":"2020-02-07T17:44:15.049Z","comments":1,"photos":[],"link":"","_id":"ck6ku49tz001n8lvqdazbi3yu","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<p>#　手順</p>\n<p><a href=\"http://golang.jp/install#windows\" target=\"_blank\" rel=\"noopener\">http://golang.jp/install#windows</a></p>\n<p>##</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04</li>\n</ul>\n<p>#　手順</p>\n<p><a href=\"http://golang.jp/install#windows\" target=\"_blank\" rel=\"noopener\">http://golang.jp/install#windows</a></p>\n<p>##</p>\n"},{"title":"【2019年秋】RyzenとCore iシリーズ比較","_content":"","source":"_drafts/【2019年秋】RyzenとCore-iシリーズ比較.md","raw":"---\ntitle: 【2019年秋】RyzenとCore iシリーズ比較\ntags:\n---\n","slug":"【2019年秋】RyzenとCore-iシリーズ比較","published":0,"date":"2019-11-17T14:34:52.480Z","updated":"2019-11-17T14:34:52.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6ku49u0001o8lvq01hxp3e8","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"post","title":"Hugo + GitHub Pagesでブログを構築する【ユーザーサイト】","date":"2020-01-23T12:29:04.000Z","_content":"\n# 環境\n\n- Ubuntu 18.04(WSL)\n\n# Hugoとは\n\n静的サイトジェネレータ\n\nマークダウンで書いた記事を\n用意したテンプレートファイルに合わせてhtmlファイルにしてくれる\n\n※このブログはHexoを使用して作成されています。\n\n# GitHub Pagesとは\n\nGitHubに決まった形でリポジトリを置いておく事で、\nファイルをホスティングしてくれるサービス\nユーザーサイト、プロジェクトサイトの二種類がある\n\n- ユーザーサイト\n  - <username>.github.ioのmasterブランチをホスティングする\n  - URLは https://<ユーザー名>.github.io でアクセスできる\n- プロジェクトサイト\n  - プロジェクト名は何でも良く、gh-pagesブランチをホスティングする\n  - URLは https://<ユーザー名>.github.io/<プロジェクト名> でアクセスできる\n\n# 何故GitHub Pagesなのか\n\n- メリット\n  - WordPressの様に実行環境が要らない\n  - デフォルトでhttpsが使える\n  - 上記理由でVPSを借りたり、ドメインや証明書を取る必要がないためお金がかからない\n  - GitHubで記事を管理するので管理が楽、どこからでも出来る\n  - 定期アップデートが必要ない\n  - 引っ越ししやすい\n    - HugoからJekyllやHexoに移行する場合に移動させるマークダウンはほとんど同じルールで記述されるため\n\n# 前提\n\n- GitHubにSSH鍵が登録されている事\n  - やり方がわからない方は[こちら](https://sakkuntyo.github.io/2019/10/20/github-addkey/)の記事を参考にしてください\n- Hubコマンドがインストールされている事\n  - やり方がわからない方は[こちら](https://sakkuntyo.github.io/2019/12/27/github-command-operation/)の記事を参考にしてください\n\n# 手順\n\n## Hugoのダウンロード、インストール\n\n[GitHubリリースページ](https://github.com/gohugoio/hugo/releases)から環境にあった物をダウンロードし、インストールします。\n\nUbuntuの場合は以下コマンドでHugo0.62.2(現在最新)をダウンロードできます。\n\n```bash\n$ wget https://github.com/gohugoio/hugo/releases/download/v0.62.2/hugo_0.62.2_Linux-64bit.deb\n$ sudo dpkg -i hugo_0.62.2_Linux-64bit.deb\n```\n\n以下コマンドでHugoが使える事を確認しておきます。\n\n```bash\n$ hugo version\n```\n\n> **ポイント**\n> Windowsの場合はインストール形式になっていないため、環境変数のPATHにhugo.exeがあるフォルダを追加してあげる事で使用出来る様になります。\n\n## GitHubにリポジトリを作成する\n\nユーザーサイトのホスティングをする場合は、\nGitHubに以下の名前でリポジトリを作成します。\n\n```\n<ユーザー名>.github.io\n```\n\n私の場合はsakkuntyo.github.ioというリポジトリを作成します。\n\n今回はhubコマンドでリポジトリを作成します。\n\n```bash\n$ mkdir <ユーザー名>.github.io\n$ cd <ユーザー名>.github.io\n$ hub init\n$ hub create\nmasterを空のブランチでpushしておく\n$ git commit --allow-empty -m \"empty commit!\"\n```\n\n## 編集用ブランチに切り替える\n\nmasterにはホスティングするページのみを配置したいため、editブランチを作成し、editブランチで作業を行います。\n作業ブランチは別のリポジトリでも問題ありません。\n\n```bash\n$ git checkout -b edit\n```\n\n## プロジェクト作成\n\nHelloBlogという名前でブログを作成します、これは後から変更する事が可能です。\n\n```bash\nHelloBlogという名前でプロジェクトフォルダが作成されます\n$ hugo new site HelloBlog\n中身をリポジトリルートに移動します\n$ mv HelloBlog ./\nフォルダは必要ないので全て削除します\n$ rm -r HelloBlog\nプロジェクトの中身を確認します\n$ ls\narchetypes  config.toml  content  data  layouts  static  themes\n```\n\n## テンプレート追加\n\nHugoの作成するプロジェクトには初期テンプレートが入っていないため、\nテンプレートを自分で追加する必要があります。\n大抵のテンプレートはthemesフォルダにgit cloneしてあげる事でそのまま使用できます。\n\n今回は、[easybook](https://github.com/Y4er/hugo-theme-easybook.git)を使用したいと思います。\n\n```bash\nthemesフォルダにeasybookという名前で保存される様、cloneします\n$ git clone https://github.com/Y4er/hugo-theme-easybook.git theme/easybook\nconfig.tomlにテーマの設定を追記します。\n$ echo 'theme = easybook' >> config.toml\n```\n\n## 公開用ブランチをpublicフォルダとしてクローン\n\n```bash\n$ git clone git:<ユーザー名>/HelloBlog public\n```\n\n## 記事を書く\n\n```bash\nhugo newコマンドで記事を作成します。\n$ hugo new post/hello.md\n\n```\n\n## hugoサーバーを起動してレイアウトを確認\n\ngithubにpushする前に\n\n```bash\n$\n```\n\n","source":"_drafts/hugo-github-user-site-deploy.md","raw":"---\nlayout: post\ntitle: Hugo + GitHub Pagesでブログを構築する【ユーザーサイト】\ndate: 2020-01-23 21:29:04\ntags: [Hugo,GitHub]\n---\n\n# 環境\n\n- Ubuntu 18.04(WSL)\n\n# Hugoとは\n\n静的サイトジェネレータ\n\nマークダウンで書いた記事を\n用意したテンプレートファイルに合わせてhtmlファイルにしてくれる\n\n※このブログはHexoを使用して作成されています。\n\n# GitHub Pagesとは\n\nGitHubに決まった形でリポジトリを置いておく事で、\nファイルをホスティングしてくれるサービス\nユーザーサイト、プロジェクトサイトの二種類がある\n\n- ユーザーサイト\n  - <username>.github.ioのmasterブランチをホスティングする\n  - URLは https://<ユーザー名>.github.io でアクセスできる\n- プロジェクトサイト\n  - プロジェクト名は何でも良く、gh-pagesブランチをホスティングする\n  - URLは https://<ユーザー名>.github.io/<プロジェクト名> でアクセスできる\n\n# 何故GitHub Pagesなのか\n\n- メリット\n  - WordPressの様に実行環境が要らない\n  - デフォルトでhttpsが使える\n  - 上記理由でVPSを借りたり、ドメインや証明書を取る必要がないためお金がかからない\n  - GitHubで記事を管理するので管理が楽、どこからでも出来る\n  - 定期アップデートが必要ない\n  - 引っ越ししやすい\n    - HugoからJekyllやHexoに移行する場合に移動させるマークダウンはほとんど同じルールで記述されるため\n\n# 前提\n\n- GitHubにSSH鍵が登録されている事\n  - やり方がわからない方は[こちら](https://sakkuntyo.github.io/2019/10/20/github-addkey/)の記事を参考にしてください\n- Hubコマンドがインストールされている事\n  - やり方がわからない方は[こちら](https://sakkuntyo.github.io/2019/12/27/github-command-operation/)の記事を参考にしてください\n\n# 手順\n\n## Hugoのダウンロード、インストール\n\n[GitHubリリースページ](https://github.com/gohugoio/hugo/releases)から環境にあった物をダウンロードし、インストールします。\n\nUbuntuの場合は以下コマンドでHugo0.62.2(現在最新)をダウンロードできます。\n\n```bash\n$ wget https://github.com/gohugoio/hugo/releases/download/v0.62.2/hugo_0.62.2_Linux-64bit.deb\n$ sudo dpkg -i hugo_0.62.2_Linux-64bit.deb\n```\n\n以下コマンドでHugoが使える事を確認しておきます。\n\n```bash\n$ hugo version\n```\n\n> **ポイント**\n> Windowsの場合はインストール形式になっていないため、環境変数のPATHにhugo.exeがあるフォルダを追加してあげる事で使用出来る様になります。\n\n## GitHubにリポジトリを作成する\n\nユーザーサイトのホスティングをする場合は、\nGitHubに以下の名前でリポジトリを作成します。\n\n```\n<ユーザー名>.github.io\n```\n\n私の場合はsakkuntyo.github.ioというリポジトリを作成します。\n\n今回はhubコマンドでリポジトリを作成します。\n\n```bash\n$ mkdir <ユーザー名>.github.io\n$ cd <ユーザー名>.github.io\n$ hub init\n$ hub create\nmasterを空のブランチでpushしておく\n$ git commit --allow-empty -m \"empty commit!\"\n```\n\n## 編集用ブランチに切り替える\n\nmasterにはホスティングするページのみを配置したいため、editブランチを作成し、editブランチで作業を行います。\n作業ブランチは別のリポジトリでも問題ありません。\n\n```bash\n$ git checkout -b edit\n```\n\n## プロジェクト作成\n\nHelloBlogという名前でブログを作成します、これは後から変更する事が可能です。\n\n```bash\nHelloBlogという名前でプロジェクトフォルダが作成されます\n$ hugo new site HelloBlog\n中身をリポジトリルートに移動します\n$ mv HelloBlog ./\nフォルダは必要ないので全て削除します\n$ rm -r HelloBlog\nプロジェクトの中身を確認します\n$ ls\narchetypes  config.toml  content  data  layouts  static  themes\n```\n\n## テンプレート追加\n\nHugoの作成するプロジェクトには初期テンプレートが入っていないため、\nテンプレートを自分で追加する必要があります。\n大抵のテンプレートはthemesフォルダにgit cloneしてあげる事でそのまま使用できます。\n\n今回は、[easybook](https://github.com/Y4er/hugo-theme-easybook.git)を使用したいと思います。\n\n```bash\nthemesフォルダにeasybookという名前で保存される様、cloneします\n$ git clone https://github.com/Y4er/hugo-theme-easybook.git theme/easybook\nconfig.tomlにテーマの設定を追記します。\n$ echo 'theme = easybook' >> config.toml\n```\n\n## 公開用ブランチをpublicフォルダとしてクローン\n\n```bash\n$ git clone git:<ユーザー名>/HelloBlog public\n```\n\n## 記事を書く\n\n```bash\nhugo newコマンドで記事を作成します。\n$ hugo new post/hello.md\n\n```\n\n## hugoサーバーを起動してレイアウトを確認\n\ngithubにpushする前に\n\n```bash\n$\n```\n\n","slug":"hugo-github-user-site-deploy","published":0,"updated":"2020-01-27T14:35:37.988Z","comments":1,"photos":[],"link":"","_id":"ck6ku49u2001q8lvq6nmz94bx","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04(WSL)</li>\n</ul>\n<h1 id=\"Hugoとは\"><a href=\"#Hugoとは\" class=\"headerlink\" title=\"Hugoとは\"></a>Hugoとは</h1><p>静的サイトジェネレータ</p>\n<p>マークダウンで書いた記事を<br>用意したテンプレートファイルに合わせてhtmlファイルにしてくれる</p>\n<p>※このブログはHexoを使用して作成されています。</p>\n<h1 id=\"GitHub-Pagesとは\"><a href=\"#GitHub-Pagesとは\" class=\"headerlink\" title=\"GitHub Pagesとは\"></a>GitHub Pagesとは</h1><p>GitHubに決まった形でリポジトリを置いておく事で、<br>ファイルをホスティングしてくれるサービス<br>ユーザーサイト、プロジェクトサイトの二種類がある</p>\n<ul>\n<li>ユーザーサイト<ul>\n<li><username>.github.ioのmasterブランチをホスティングする</username></li>\n<li>URLは https://&lt;ユーザー名&gt;.github.io でアクセスできる</li>\n</ul>\n</li>\n<li>プロジェクトサイト<ul>\n<li>プロジェクト名は何でも良く、gh-pagesブランチをホスティングする</li>\n<li>URLは https://&lt;ユーザー名&gt;.github.io/&lt;プロジェクト名&gt; でアクセスできる</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"何故GitHub-Pagesなのか\"><a href=\"#何故GitHub-Pagesなのか\" class=\"headerlink\" title=\"何故GitHub Pagesなのか\"></a>何故GitHub Pagesなのか</h1><ul>\n<li>メリット<ul>\n<li>WordPressの様に実行環境が要らない</li>\n<li>デフォルトでhttpsが使える</li>\n<li>上記理由でVPSを借りたり、ドメインや証明書を取る必要がないためお金がかからない</li>\n<li>GitHubで記事を管理するので管理が楽、どこからでも出来る</li>\n<li>定期アップデートが必要ない</li>\n<li>引っ越ししやすい<ul>\n<li>HugoからJekyllやHexoに移行する場合に移動させるマークダウンはほとんど同じルールで記述されるため</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><ul>\n<li>GitHubにSSH鍵が登録されている事<ul>\n<li>やり方がわからない方は<a href=\"https://sakkuntyo.github.io/2019/10/20/github-addkey/\">こちら</a>の記事を参考にしてください</li>\n</ul>\n</li>\n<li>Hubコマンドがインストールされている事<ul>\n<li>やり方がわからない方は<a href=\"https://sakkuntyo.github.io/2019/12/27/github-command-operation/\">こちら</a>の記事を参考にしてください</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Hugoのダウンロード、インストール\"><a href=\"#Hugoのダウンロード、インストール\" class=\"headerlink\" title=\"Hugoのダウンロード、インストール\"></a>Hugoのダウンロード、インストール</h2><p><a href=\"https://github.com/gohugoio/hugo/releases\" target=\"_blank\" rel=\"noopener\">GitHubリリースページ</a>から環境にあった物をダウンロードし、インストールします。</p>\n<p>Ubuntuの場合は以下コマンドでHugo0.62.2(現在最新)をダウンロードできます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://github.com/gohugoio/hugo/releases/download/v0.62.2/hugo_0.62.2_Linux-64bit.deb</span><br><span class=\"line\">$ sudo dpkg -i hugo_0.62.2_Linux-64bit.deb</span><br></pre></td></tr></table></figure>\n\n<p>以下コマンドでHugoが使える事を確認しておきます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hugo version</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント</strong><br>Windowsの場合はインストール形式になっていないため、環境変数のPATHにhugo.exeがあるフォルダを追加してあげる事で使用出来る様になります。</p>\n</blockquote>\n<h2 id=\"GitHubにリポジトリを作成する\"><a href=\"#GitHubにリポジトリを作成する\" class=\"headerlink\" title=\"GitHubにリポジトリを作成する\"></a>GitHubにリポジトリを作成する</h2><p>ユーザーサイトのホスティングをする場合は、<br>GitHubに以下の名前でリポジトリを作成します。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ユーザー名&gt;.github.io</span><br></pre></td></tr></table></figure>\n\n<p>私の場合はsakkuntyo.github.ioというリポジトリを作成します。</p>\n<p>今回はhubコマンドでリポジトリを作成します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir &lt;ユーザー名&gt;.github.io</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;ユーザー名&gt;.github.io</span><br><span class=\"line\">$ hub init</span><br><span class=\"line\">$ hub create</span><br><span class=\"line\">masterを空のブランチでpushしておく</span><br><span class=\"line\">$ git commit --allow-empty -m <span class=\"string\">\"empty commit!\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"編集用ブランチに切り替える\"><a href=\"#編集用ブランチに切り替える\" class=\"headerlink\" title=\"編集用ブランチに切り替える\"></a>編集用ブランチに切り替える</h2><p>masterにはホスティングするページのみを配置したいため、editブランチを作成し、editブランチで作業を行います。<br>作業ブランチは別のリポジトリでも問題ありません。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b edit</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"プロジェクト作成\"><a href=\"#プロジェクト作成\" class=\"headerlink\" title=\"プロジェクト作成\"></a>プロジェクト作成</h2><p>HelloBlogという名前でブログを作成します、これは後から変更する事が可能です。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HelloBlogという名前でプロジェクトフォルダが作成されます</span><br><span class=\"line\">$ hugo new site HelloBlog</span><br><span class=\"line\">中身をリポジトリルートに移動します</span><br><span class=\"line\">$ mv HelloBlog ./</span><br><span class=\"line\">フォルダは必要ないので全て削除します</span><br><span class=\"line\">$ rm -r HelloBlog</span><br><span class=\"line\">プロジェクトの中身を確認します</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">archetypes  config.toml  content  data  layouts  static  themes</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"テンプレート追加\"><a href=\"#テンプレート追加\" class=\"headerlink\" title=\"テンプレート追加\"></a>テンプレート追加</h2><p>Hugoの作成するプロジェクトには初期テンプレートが入っていないため、<br>テンプレートを自分で追加する必要があります。<br>大抵のテンプレートはthemesフォルダにgit cloneしてあげる事でそのまま使用できます。</p>\n<p>今回は、<a href=\"https://github.com/Y4er/hugo-theme-easybook.git\" target=\"_blank\" rel=\"noopener\">easybook</a>を使用したいと思います。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">themesフォルダにeasybookという名前で保存される様、<span class=\"built_in\">clone</span>します</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/Y4er/hugo-theme-easybook.git theme/easybook</span><br><span class=\"line\">config.tomlにテーマの設定を追記します。</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'theme = easybook'</span> &gt;&gt; config.toml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"公開用ブランチをpublicフォルダとしてクローン\"><a href=\"#公開用ブランチをpublicフォルダとしてクローン\" class=\"headerlink\" title=\"公開用ブランチをpublicフォルダとしてクローン\"></a>公開用ブランチをpublicフォルダとしてクローン</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git:&lt;ユーザー名&gt;/HelloBlog public</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"記事を書く\"><a href=\"#記事を書く\" class=\"headerlink\" title=\"記事を書く\"></a>記事を書く</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hugo newコマンドで記事を作成します。</span><br><span class=\"line\">$ hugo new post/hello.md</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hugoサーバーを起動してレイアウトを確認\"><a href=\"#hugoサーバーを起動してレイアウトを確認\" class=\"headerlink\" title=\"hugoサーバーを起動してレイアウトを確認\"></a>hugoサーバーを起動してレイアウトを確認</h2><p>githubにpushする前に</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu 18.04(WSL)</li>\n</ul>\n<h1 id=\"Hugoとは\"><a href=\"#Hugoとは\" class=\"headerlink\" title=\"Hugoとは\"></a>Hugoとは</h1><p>静的サイトジェネレータ</p>\n<p>マークダウンで書いた記事を<br>用意したテンプレートファイルに合わせてhtmlファイルにしてくれる</p>\n<p>※このブログはHexoを使用して作成されています。</p>\n<h1 id=\"GitHub-Pagesとは\"><a href=\"#GitHub-Pagesとは\" class=\"headerlink\" title=\"GitHub Pagesとは\"></a>GitHub Pagesとは</h1><p>GitHubに決まった形でリポジトリを置いておく事で、<br>ファイルをホスティングしてくれるサービス<br>ユーザーサイト、プロジェクトサイトの二種類がある</p>\n<ul>\n<li>ユーザーサイト<ul>\n<li><username>.github.ioのmasterブランチをホスティングする</username></li>\n<li>URLは https://&lt;ユーザー名&gt;.github.io でアクセスできる</li>\n</ul>\n</li>\n<li>プロジェクトサイト<ul>\n<li>プロジェクト名は何でも良く、gh-pagesブランチをホスティングする</li>\n<li>URLは https://&lt;ユーザー名&gt;.github.io/&lt;プロジェクト名&gt; でアクセスできる</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"何故GitHub-Pagesなのか\"><a href=\"#何故GitHub-Pagesなのか\" class=\"headerlink\" title=\"何故GitHub Pagesなのか\"></a>何故GitHub Pagesなのか</h1><ul>\n<li>メリット<ul>\n<li>WordPressの様に実行環境が要らない</li>\n<li>デフォルトでhttpsが使える</li>\n<li>上記理由でVPSを借りたり、ドメインや証明書を取る必要がないためお金がかからない</li>\n<li>GitHubで記事を管理するので管理が楽、どこからでも出来る</li>\n<li>定期アップデートが必要ない</li>\n<li>引っ越ししやすい<ul>\n<li>HugoからJekyllやHexoに移行する場合に移動させるマークダウンはほとんど同じルールで記述されるため</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><ul>\n<li>GitHubにSSH鍵が登録されている事<ul>\n<li>やり方がわからない方は<a href=\"https://sakkuntyo.github.io/2019/10/20/github-addkey/\">こちら</a>の記事を参考にしてください</li>\n</ul>\n</li>\n<li>Hubコマンドがインストールされている事<ul>\n<li>やり方がわからない方は<a href=\"https://sakkuntyo.github.io/2019/12/27/github-command-operation/\">こちら</a>の記事を参考にしてください</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"Hugoのダウンロード、インストール\"><a href=\"#Hugoのダウンロード、インストール\" class=\"headerlink\" title=\"Hugoのダウンロード、インストール\"></a>Hugoのダウンロード、インストール</h2><p><a href=\"https://github.com/gohugoio/hugo/releases\" target=\"_blank\" rel=\"noopener\">GitHubリリースページ</a>から環境にあった物をダウンロードし、インストールします。</p>\n<p>Ubuntuの場合は以下コマンドでHugo0.62.2(現在最新)をダウンロードできます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://github.com/gohugoio/hugo/releases/download/v0.62.2/hugo_0.62.2_Linux-64bit.deb</span><br><span class=\"line\">$ sudo dpkg -i hugo_0.62.2_Linux-64bit.deb</span><br></pre></td></tr></table></figure>\n\n<p>以下コマンドでHugoが使える事を確認しておきます。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hugo version</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>ポイント</strong><br>Windowsの場合はインストール形式になっていないため、環境変数のPATHにhugo.exeがあるフォルダを追加してあげる事で使用出来る様になります。</p>\n</blockquote>\n<h2 id=\"GitHubにリポジトリを作成する\"><a href=\"#GitHubにリポジトリを作成する\" class=\"headerlink\" title=\"GitHubにリポジトリを作成する\"></a>GitHubにリポジトリを作成する</h2><p>ユーザーサイトのホスティングをする場合は、<br>GitHubに以下の名前でリポジトリを作成します。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;ユーザー名&gt;.github.io</span><br></pre></td></tr></table></figure>\n\n<p>私の場合はsakkuntyo.github.ioというリポジトリを作成します。</p>\n<p>今回はhubコマンドでリポジトリを作成します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir &lt;ユーザー名&gt;.github.io</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;ユーザー名&gt;.github.io</span><br><span class=\"line\">$ hub init</span><br><span class=\"line\">$ hub create</span><br><span class=\"line\">masterを空のブランチでpushしておく</span><br><span class=\"line\">$ git commit --allow-empty -m <span class=\"string\">\"empty commit!\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"編集用ブランチに切り替える\"><a href=\"#編集用ブランチに切り替える\" class=\"headerlink\" title=\"編集用ブランチに切り替える\"></a>編集用ブランチに切り替える</h2><p>masterにはホスティングするページのみを配置したいため、editブランチを作成し、editブランチで作業を行います。<br>作業ブランチは別のリポジトリでも問題ありません。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b edit</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"プロジェクト作成\"><a href=\"#プロジェクト作成\" class=\"headerlink\" title=\"プロジェクト作成\"></a>プロジェクト作成</h2><p>HelloBlogという名前でブログを作成します、これは後から変更する事が可能です。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HelloBlogという名前でプロジェクトフォルダが作成されます</span><br><span class=\"line\">$ hugo new site HelloBlog</span><br><span class=\"line\">中身をリポジトリルートに移動します</span><br><span class=\"line\">$ mv HelloBlog ./</span><br><span class=\"line\">フォルダは必要ないので全て削除します</span><br><span class=\"line\">$ rm -r HelloBlog</span><br><span class=\"line\">プロジェクトの中身を確認します</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">archetypes  config.toml  content  data  layouts  static  themes</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"テンプレート追加\"><a href=\"#テンプレート追加\" class=\"headerlink\" title=\"テンプレート追加\"></a>テンプレート追加</h2><p>Hugoの作成するプロジェクトには初期テンプレートが入っていないため、<br>テンプレートを自分で追加する必要があります。<br>大抵のテンプレートはthemesフォルダにgit cloneしてあげる事でそのまま使用できます。</p>\n<p>今回は、<a href=\"https://github.com/Y4er/hugo-theme-easybook.git\" target=\"_blank\" rel=\"noopener\">easybook</a>を使用したいと思います。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">themesフォルダにeasybookという名前で保存される様、<span class=\"built_in\">clone</span>します</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/Y4er/hugo-theme-easybook.git theme/easybook</span><br><span class=\"line\">config.tomlにテーマの設定を追記します。</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">'theme = easybook'</span> &gt;&gt; config.toml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"公開用ブランチをpublicフォルダとしてクローン\"><a href=\"#公開用ブランチをpublicフォルダとしてクローン\" class=\"headerlink\" title=\"公開用ブランチをpublicフォルダとしてクローン\"></a>公開用ブランチをpublicフォルダとしてクローン</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git:&lt;ユーザー名&gt;/HelloBlog public</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"記事を書く\"><a href=\"#記事を書く\" class=\"headerlink\" title=\"記事を書く\"></a>記事を書く</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hugo newコマンドで記事を作成します。</span><br><span class=\"line\">$ hugo new post/hello.md</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hugoサーバーを起動してレイアウトを確認\"><a href=\"#hugoサーバーを起動してレイアウトを確認\" class=\"headerlink\" title=\"hugoサーバーを起動してレイアウトを確認\"></a>hugoサーバーを起動してレイアウトを確認</h2><p>githubにpushする前に</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"post","title":"UbuntuとNginxでウェブサーバを構築","date":"2020-01-22T14:16:15.000Z","_content":"\n# 環境\n\n- Ubuntu16.04(KAGOYA VPS KVM)\n\n# Nginxって何\n- Apacheの代替となり得るWebサーバ\n\n# Apacheとの違い\n- C10Kをクリアしていて静的コンテンツを返すレスポンスが早い\n  - C10Kとは・・・クライアント一万人接続問題の事\n- イベント駆動\n  - イベント駆動のおかげでスレッドを有効に使う事ができるため早い\n  - 一応Apacheでもイベント駆動には出来るがNginxの方が早い\n\n# じゃあApacheは良くないの？\n\nApacheの武器はそこではなく、Nginxよりも古くからユーザーに使われているため、\n\n様々なモジュールがあり、色々な用途に使う事ができます。\n\n> Nginxとは？Apacheとの違いについてエンジニアに聞いてみた\n> https://academy.gmocloud.com/qa/20160616/2761\n\nphpやCGIを使用した動的な処理をしたい場合にはApache\n速度やアクセス数を求めたい場合にはNginx\nといった使い方がよさそうです。\nどっちも使って、お互いのデメリットを埋める事も出来るそうです\n\n# 初期ページを表示するまでの手順\n## ポート解放とNginxのインストール、起動\n```shell-session\n$ apt update\n\nufw(ファイアウォール)をインストール\n$ apt install ufw\nインストール直後はufwはファイアウォールとして指定されないためufwを有効化\n$ ufw enable\n「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter\n\nsshのポートを開く\nこれを行わないとssh切断したあと接続出来なくなってしまいます！\n$ ufw allow 22\n\nNginxが使用するポートを開く\n$ ufw allow 80\n\nNginxをインストールする\n$ apt install nginx\n\nNginxが稼働している事を確認する\n$ curl localhost\ncurlでウェブページにアクセスすると、そのページのhtmlの内容が帰って来ます\n\n自分のIPアドレスを確認する\n$ ifconfig | grep \"inet addr:\"\n192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います\nこれらはローカルIPや、グローバルIPと呼ばれます。\n127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。\n```\n\n## 実際にページを表示してみる\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。\n\nこのような画面が表示されると思います。\n![スクリーンショット 2018-07-01 23.47.42.png](https://qiita-image-store.s3.amazonaws.com/0/266455/0dc1527c-4bac-7fc5-df5a-1f8bdfebda1a.png)\n\nNginxではこれが初期ページとして設定されています。\n\n# ページを追加、変更する\n## ドキュメントルートを確認する\n```shell-session\n$ grep \"root\" -r /etc/nginx/ | grep \"html\"\n/etc/nginx/sites-available/default:     root /var/www/html;\n```\n私の場合はこう表示されました。\nNginxのバージョンなどによってパスが違う様なので、このように調べるのが確実です。\nどうやらページとなるhtmlファイルが保存されているのは　/var/www/html　ディレクトリの様です。\nここを ドキュメントルート と呼びます。\n## ページを追加する\n```shell-session\nドキュメントルートに移動する\n$ cd /var/www/html/\n新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします\n$ echo \"Hello World!\" > ./test.html\n```\n\n## 実際にページを表示してみる\n他のPCからページを\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、下記のようにアドレスバーに入力します。\n```IPアドレス/test.html\n```\n\nこの様な画面が表示されます。\n![スクリーンショット 2018-07-02 0.07.53.png](https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png)\n以上となります。\n\nApacheが気になる方はこちら\n> [UbuntuとApacheでウェブサーバを立てる - Qiita](https://qiita.com/noma3629/items/03742bad0f57a4f46b07)\n","source":"_posts/ubuntu-nginx-webserver-md.md","raw":"---\nlayout: post\ntitle: UbuntuとNginxでウェブサーバを構築\ndate: 2020-01-22 23:16:15\ntags: [nginx,Ubuntu]\n---\n\n# 環境\n\n- Ubuntu16.04(KAGOYA VPS KVM)\n\n# Nginxって何\n- Apacheの代替となり得るWebサーバ\n\n# Apacheとの違い\n- C10Kをクリアしていて静的コンテンツを返すレスポンスが早い\n  - C10Kとは・・・クライアント一万人接続問題の事\n- イベント駆動\n  - イベント駆動のおかげでスレッドを有効に使う事ができるため早い\n  - 一応Apacheでもイベント駆動には出来るがNginxの方が早い\n\n# じゃあApacheは良くないの？\n\nApacheの武器はそこではなく、Nginxよりも古くからユーザーに使われているため、\n\n様々なモジュールがあり、色々な用途に使う事ができます。\n\n> Nginxとは？Apacheとの違いについてエンジニアに聞いてみた\n> https://academy.gmocloud.com/qa/20160616/2761\n\nphpやCGIを使用した動的な処理をしたい場合にはApache\n速度やアクセス数を求めたい場合にはNginx\nといった使い方がよさそうです。\nどっちも使って、お互いのデメリットを埋める事も出来るそうです\n\n# 初期ページを表示するまでの手順\n## ポート解放とNginxのインストール、起動\n```shell-session\n$ apt update\n\nufw(ファイアウォール)をインストール\n$ apt install ufw\nインストール直後はufwはファイアウォールとして指定されないためufwを有効化\n$ ufw enable\n「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter\n\nsshのポートを開く\nこれを行わないとssh切断したあと接続出来なくなってしまいます！\n$ ufw allow 22\n\nNginxが使用するポートを開く\n$ ufw allow 80\n\nNginxをインストールする\n$ apt install nginx\n\nNginxが稼働している事を確認する\n$ curl localhost\ncurlでウェブページにアクセスすると、そのページのhtmlの内容が帰って来ます\n\n自分のIPアドレスを確認する\n$ ifconfig | grep \"inet addr:\"\n192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います\nこれらはローカルIPや、グローバルIPと呼ばれます。\n127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。\n```\n\n## 実際にページを表示してみる\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。\n\nこのような画面が表示されると思います。\n![スクリーンショット 2018-07-01 23.47.42.png](https://qiita-image-store.s3.amazonaws.com/0/266455/0dc1527c-4bac-7fc5-df5a-1f8bdfebda1a.png)\n\nNginxではこれが初期ページとして設定されています。\n\n# ページを追加、変更する\n## ドキュメントルートを確認する\n```shell-session\n$ grep \"root\" -r /etc/nginx/ | grep \"html\"\n/etc/nginx/sites-available/default:     root /var/www/html;\n```\n私の場合はこう表示されました。\nNginxのバージョンなどによってパスが違う様なので、このように調べるのが確実です。\nどうやらページとなるhtmlファイルが保存されているのは　/var/www/html　ディレクトリの様です。\nここを ドキュメントルート と呼びます。\n## ページを追加する\n```shell-session\nドキュメントルートに移動する\n$ cd /var/www/html/\n新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします\n$ echo \"Hello World!\" > ./test.html\n```\n\n## 実際にページを表示してみる\n他のPCからページを\n同じネットワーク内の他のPCからウェブサーバを利用してみます。\nブラウザを起動し、下記のようにアドレスバーに入力します。\n```IPアドレス/test.html\n```\n\nこの様な画面が表示されます。\n![スクリーンショット 2018-07-02 0.07.53.png](https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png)\n以上となります。\n\nApacheが気になる方はこちら\n> [UbuntuとApacheでウェブサーバを立てる - Qiita](https://qiita.com/noma3629/items/03742bad0f57a4f46b07)\n","slug":"ubuntu-nginx-webserver-md","published":1,"updated":"2020-02-09T16:04:09.585Z","_id":"ck6ku49u4001r8lvqp93n8k35","comments":1,"photos":[],"link":"","content":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu16.04(KAGOYA VPS KVM)</li>\n</ul>\n<h1 id=\"Nginxって何\"><a href=\"#Nginxって何\" class=\"headerlink\" title=\"Nginxって何\"></a>Nginxって何</h1><ul>\n<li>Apacheの代替となり得るWebサーバ</li>\n</ul>\n<h1 id=\"Apacheとの違い\"><a href=\"#Apacheとの違い\" class=\"headerlink\" title=\"Apacheとの違い\"></a>Apacheとの違い</h1><ul>\n<li>C10Kをクリアしていて静的コンテンツを返すレスポンスが早い<ul>\n<li>C10Kとは・・・クライアント一万人接続問題の事</li>\n</ul>\n</li>\n<li>イベント駆動<ul>\n<li>イベント駆動のおかげでスレッドを有効に使う事ができるため早い</li>\n<li>一応Apacheでもイベント駆動には出来るがNginxの方が早い</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"じゃあApacheは良くないの？\"><a href=\"#じゃあApacheは良くないの？\" class=\"headerlink\" title=\"じゃあApacheは良くないの？\"></a>じゃあApacheは良くないの？</h1><p>Apacheの武器はそこではなく、Nginxよりも古くからユーザーに使われているため、</p>\n<p>様々なモジュールがあり、色々な用途に使う事ができます。</p>\n<blockquote>\n<p>Nginxとは？Apacheとの違いについてエンジニアに聞いてみた<br><a href=\"https://academy.gmocloud.com/qa/20160616/2761\" target=\"_blank\" rel=\"noopener\">https://academy.gmocloud.com/qa/20160616/2761</a></p>\n</blockquote>\n<p>phpやCGIを使用した動的な処理をしたい場合にはApache<br>速度やアクセス数を求めたい場合にはNginx<br>といった使い方がよさそうです。<br>どっちも使って、お互いのデメリットを埋める事も出来るそうです</p>\n<h1 id=\"初期ページを表示するまでの手順\"><a href=\"#初期ページを表示するまでの手順\" class=\"headerlink\" title=\"初期ページを表示するまでの手順\"></a>初期ページを表示するまでの手順</h1><h2 id=\"ポート解放とNginxのインストール、起動\"><a href=\"#ポート解放とNginxのインストール、起動\" class=\"headerlink\" title=\"ポート解放とNginxのインストール、起動\"></a>ポート解放とNginxのインストール、起動</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\"></span><br><span class=\"line\">ufw(ファイアウォール)をインストール</span><br><span class=\"line\">$ apt install ufw</span><br><span class=\"line\">インストール直後はufwはファイアウォールとして指定されないためufwを有効化</span><br><span class=\"line\">$ ufw enable</span><br><span class=\"line\">「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter</span><br><span class=\"line\"></span><br><span class=\"line\">sshのポートを開く</span><br><span class=\"line\">これを行わないとssh切断したあと接続出来なくなってしまいます！</span><br><span class=\"line\">$ ufw allow 22</span><br><span class=\"line\"></span><br><span class=\"line\">Nginxが使用するポートを開く</span><br><span class=\"line\">$ ufw allow 80</span><br><span class=\"line\"></span><br><span class=\"line\">Nginxをインストールする</span><br><span class=\"line\">$ apt install nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Nginxが稼働している事を確認する</span><br><span class=\"line\">$ curl localhost</span><br><span class=\"line\">curlでウェブページにアクセスすると、そのページのhtmlの内容が帰って来ます</span><br><span class=\"line\"></span><br><span class=\"line\">自分のIPアドレスを確認する</span><br><span class=\"line\">$ ifconfig | grep &quot;inet addr:&quot;</span><br><span class=\"line\">192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います</span><br><span class=\"line\">これらはローカルIPや、グローバルIPと呼ばれます。</span><br><span class=\"line\">127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる\"><a href=\"#実際にページを表示してみる\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。</p>\n<p>このような画面が表示されると思います。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/0dc1527c-4bac-7fc5-df5a-1f8bdfebda1a.png\" alt=\"スクリーンショット 2018-07-01 23.47.42.png\"></p>\n<p>Nginxではこれが初期ページとして設定されています。</p>\n<h1 id=\"ページを追加、変更する\"><a href=\"#ページを追加、変更する\" class=\"headerlink\" title=\"ページを追加、変更する\"></a>ページを追加、変更する</h1><h2 id=\"ドキュメントルートを確認する\"><a href=\"#ドキュメントルートを確認する\" class=\"headerlink\" title=\"ドキュメントルートを確認する\"></a>ドキュメントルートを確認する</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ grep &quot;root&quot; -r /etc/nginx/ | grep &quot;html&quot;</span><br><span class=\"line\">/etc/nginx/sites-available/default:     root /var/www/html;</span><br></pre></td></tr></table></figure>\n\n<p>私の場合はこう表示されました。<br>Nginxのバージョンなどによってパスが違う様なので、このように調べるのが確実です。<br>どうやらページとなるhtmlファイルが保存されているのは　/var/www/html　ディレクトリの様です。<br>ここを ドキュメントルート と呼びます。</p>\n<h2 id=\"ページを追加する\"><a href=\"#ページを追加する\" class=\"headerlink\" title=\"ページを追加する\"></a>ページを追加する</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ドキュメントルートに移動する</span><br><span class=\"line\">$ cd /var/www/html/</span><br><span class=\"line\">新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします</span><br><span class=\"line\">$ echo &quot;Hello World!&quot; &gt; ./test.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる-1\"><a href=\"#実際にページを表示してみる-1\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>他のPCからページを<br>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、下記のようにアドレスバーに入力します。</p>\n<pre><code class=\"IPアドレス/test.html\"></code></pre>\n<p>この様な画面が表示されます。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png\" alt=\"スクリーンショット 2018-07-02 0.07.53.png\"><br>以上となります。</p>\n<p>Apacheが気になる方はこちら</p>\n<blockquote>\n<p><a href=\"https://qiita.com/noma3629/items/03742bad0f57a4f46b07\" target=\"_blank\" rel=\"noopener\">UbuntuとApacheでウェブサーバを立てる - Qiita</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu16.04(KAGOYA VPS KVM)</li>\n</ul>\n<h1 id=\"Nginxって何\"><a href=\"#Nginxって何\" class=\"headerlink\" title=\"Nginxって何\"></a>Nginxって何</h1><ul>\n<li>Apacheの代替となり得るWebサーバ</li>\n</ul>\n<h1 id=\"Apacheとの違い\"><a href=\"#Apacheとの違い\" class=\"headerlink\" title=\"Apacheとの違い\"></a>Apacheとの違い</h1><ul>\n<li>C10Kをクリアしていて静的コンテンツを返すレスポンスが早い<ul>\n<li>C10Kとは・・・クライアント一万人接続問題の事</li>\n</ul>\n</li>\n<li>イベント駆動<ul>\n<li>イベント駆動のおかげでスレッドを有効に使う事ができるため早い</li>\n<li>一応Apacheでもイベント駆動には出来るがNginxの方が早い</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"じゃあApacheは良くないの？\"><a href=\"#じゃあApacheは良くないの？\" class=\"headerlink\" title=\"じゃあApacheは良くないの？\"></a>じゃあApacheは良くないの？</h1><p>Apacheの武器はそこではなく、Nginxよりも古くからユーザーに使われているため、</p>\n<p>様々なモジュールがあり、色々な用途に使う事ができます。</p>\n<blockquote>\n<p>Nginxとは？Apacheとの違いについてエンジニアに聞いてみた<br><a href=\"https://academy.gmocloud.com/qa/20160616/2761\" target=\"_blank\" rel=\"noopener\">https://academy.gmocloud.com/qa/20160616/2761</a></p>\n</blockquote>\n<p>phpやCGIを使用した動的な処理をしたい場合にはApache<br>速度やアクセス数を求めたい場合にはNginx<br>といった使い方がよさそうです。<br>どっちも使って、お互いのデメリットを埋める事も出来るそうです</p>\n<h1 id=\"初期ページを表示するまでの手順\"><a href=\"#初期ページを表示するまでの手順\" class=\"headerlink\" title=\"初期ページを表示するまでの手順\"></a>初期ページを表示するまでの手順</h1><h2 id=\"ポート解放とNginxのインストール、起動\"><a href=\"#ポート解放とNginxのインストール、起動\" class=\"headerlink\" title=\"ポート解放とNginxのインストール、起動\"></a>ポート解放とNginxのインストール、起動</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ apt update</span><br><span class=\"line\"></span><br><span class=\"line\">ufw(ファイアウォール)をインストール</span><br><span class=\"line\">$ apt install ufw</span><br><span class=\"line\">インストール直後はufwはファイアウォールとして指定されないためufwを有効化</span><br><span class=\"line\">$ ufw enable</span><br><span class=\"line\">「このコマンドを実行するとssh接続が切れるかも知れませんがいいですか？」と聞かれるので y を入力してEnter</span><br><span class=\"line\"></span><br><span class=\"line\">sshのポートを開く</span><br><span class=\"line\">これを行わないとssh切断したあと接続出来なくなってしまいます！</span><br><span class=\"line\">$ ufw allow 22</span><br><span class=\"line\"></span><br><span class=\"line\">Nginxが使用するポートを開く</span><br><span class=\"line\">$ ufw allow 80</span><br><span class=\"line\"></span><br><span class=\"line\">Nginxをインストールする</span><br><span class=\"line\">$ apt install nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Nginxが稼働している事を確認する</span><br><span class=\"line\">$ curl localhost</span><br><span class=\"line\">curlでウェブページにアクセスすると、そのページのhtmlの内容が帰って来ます</span><br><span class=\"line\"></span><br><span class=\"line\">自分のIPアドレスを確認する</span><br><span class=\"line\">$ ifconfig | grep &quot;inet addr:&quot;</span><br><span class=\"line\">192.168.1.xや127.0.0.1といったIPアドレスが表示されると思います</span><br><span class=\"line\">これらはローカルIPや、グローバルIPと呼ばれます。</span><br><span class=\"line\">127.0.0.1は、ループバックアドレスと呼ばれ、自分自身を表すIPアドレスとなります。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる\"><a href=\"#実際にページを表示してみる\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、先ほど確認したローカルIP、又はグローバルIPをアドレスバーに入力します。</p>\n<p>このような画面が表示されると思います。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/0dc1527c-4bac-7fc5-df5a-1f8bdfebda1a.png\" alt=\"スクリーンショット 2018-07-01 23.47.42.png\"></p>\n<p>Nginxではこれが初期ページとして設定されています。</p>\n<h1 id=\"ページを追加、変更する\"><a href=\"#ページを追加、変更する\" class=\"headerlink\" title=\"ページを追加、変更する\"></a>ページを追加、変更する</h1><h2 id=\"ドキュメントルートを確認する\"><a href=\"#ドキュメントルートを確認する\" class=\"headerlink\" title=\"ドキュメントルートを確認する\"></a>ドキュメントルートを確認する</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ grep &quot;root&quot; -r /etc/nginx/ | grep &quot;html&quot;</span><br><span class=\"line\">/etc/nginx/sites-available/default:     root /var/www/html;</span><br></pre></td></tr></table></figure>\n\n<p>私の場合はこう表示されました。<br>Nginxのバージョンなどによってパスが違う様なので、このように調べるのが確実です。<br>どうやらページとなるhtmlファイルが保存されているのは　/var/www/html　ディレクトリの様です。<br>ここを ドキュメントルート と呼びます。</p>\n<h2 id=\"ページを追加する\"><a href=\"#ページを追加する\" class=\"headerlink\" title=\"ページを追加する\"></a>ページを追加する</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ドキュメントルートに移動する</span><br><span class=\"line\">$ cd /var/www/html/</span><br><span class=\"line\">新しいページのファイルを作成する、アクセスする際のページ名は「test.html」とします</span><br><span class=\"line\">$ echo &quot;Hello World!&quot; &gt; ./test.html</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"実際にページを表示してみる-1\"><a href=\"#実際にページを表示してみる-1\" class=\"headerlink\" title=\"実際にページを表示してみる\"></a>実際にページを表示してみる</h2><p>他のPCからページを<br>同じネットワーク内の他のPCからウェブサーバを利用してみます。<br>ブラウザを起動し、下記のようにアドレスバーに入力します。</p>\n<pre><code class=\"IPアドレス/test.html\"></code></pre>\n<p>この様な画面が表示されます。<br><img src=\"https://qiita-image-store.s3.amazonaws.com/0/266455/a7714f81-4a06-a4f4-4d12-09b361f9d3d1.png\" alt=\"スクリーンショット 2018-07-02 0.07.53.png\"><br>以上となります。</p>\n<p>Apacheが気になる方はこちら</p>\n<blockquote>\n<p><a href=\"https://qiita.com/noma3629/items/03742bad0f57a4f46b07\" target=\"_blank\" rel=\"noopener\">UbuntuとApacheでウェブサーバを立てる - Qiita</a></p>\n</blockquote>\n"},{"layout":"post","title":"「npm install -g」はもう要らない！npxの使い方","date":"2020-01-31T15:11:50.000Z","_content":"\n今まで、hexoやexpress-generatorのコマンドラインツールを使用するためには、\nnpm install -g をしてプロジェクト外にインストールする必要がありました。\nnpm5.2.0ではnpxが追加され、プロジェクト内にインストールした場合でも使用出来る様になりました。\n\nこれからは、プロジェクト内にhexoやexpress-generator等をインストールしておけば使えます。\n\n# 環境\n\n- Ubuntu18.04\n\n# npxを使わない場合\n\n```bash\nexpressが見つからないと言われる\n$ express express-project\n\nグローバルインストールする\n$ npm install -g express-generator\n\nコマンドが使える様になる\n$ express express-project\n```\n\n# npxを使う場合\n\n```bash\nexpressが見つからないと言われる\n$ express express-project\n\nプロジェクトにインストールする\n$ npm install express-generator\n\nnpxでプロジェクト内のexpressを実行\n$ npx express express-project\n```\n","source":"_posts/npx.md","raw":"---\nlayout: post\ntitle: 「npm install -g」はもう要らない！npxの使い方\ndate: 2020-02-01 00:11:50\ntags: [npm,npx]\n---\n\n今まで、hexoやexpress-generatorのコマンドラインツールを使用するためには、\nnpm install -g をしてプロジェクト外にインストールする必要がありました。\nnpm5.2.0ではnpxが追加され、プロジェクト内にインストールした場合でも使用出来る様になりました。\n\nこれからは、プロジェクト内にhexoやexpress-generator等をインストールしておけば使えます。\n\n# 環境\n\n- Ubuntu18.04\n\n# npxを使わない場合\n\n```bash\nexpressが見つからないと言われる\n$ express express-project\n\nグローバルインストールする\n$ npm install -g express-generator\n\nコマンドが使える様になる\n$ express express-project\n```\n\n# npxを使う場合\n\n```bash\nexpressが見つからないと言われる\n$ express express-project\n\nプロジェクトにインストールする\n$ npm install express-generator\n\nnpxでプロジェクト内のexpressを実行\n$ npx express express-project\n```\n","slug":"npx","published":1,"updated":"2020-02-01T18:40:44.955Z","_id":"ck6ku49u5001t8lvqql4vrchv","comments":1,"photos":[],"link":"","content":"<p>今まで、hexoやexpress-generatorのコマンドラインツールを使用するためには、<br>npm install -g をしてプロジェクト外にインストールする必要がありました。<br>npm5.2.0ではnpxが追加され、プロジェクト内にインストールした場合でも使用出来る様になりました。</p>\n<p>これからは、プロジェクト内にhexoやexpress-generator等をインストールしておけば使えます。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"npxを使わない場合\"><a href=\"#npxを使わない場合\" class=\"headerlink\" title=\"npxを使わない場合\"></a>npxを使わない場合</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expressが見つからないと言われる</span><br><span class=\"line\">$ express express-project</span><br><span class=\"line\"></span><br><span class=\"line\">グローバルインストールする</span><br><span class=\"line\">$ npm install -g express-generator</span><br><span class=\"line\"></span><br><span class=\"line\">コマンドが使える様になる</span><br><span class=\"line\">$ express express-project</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"npxを使う場合\"><a href=\"#npxを使う場合\" class=\"headerlink\" title=\"npxを使う場合\"></a>npxを使う場合</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expressが見つからないと言われる</span><br><span class=\"line\">$ express express-project</span><br><span class=\"line\"></span><br><span class=\"line\">プロジェクトにインストールする</span><br><span class=\"line\">$ npm install express-generator</span><br><span class=\"line\"></span><br><span class=\"line\">npxでプロジェクト内のexpressを実行</span><br><span class=\"line\">$ npx express express-project</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>今まで、hexoやexpress-generatorのコマンドラインツールを使用するためには、<br>npm install -g をしてプロジェクト外にインストールする必要がありました。<br>npm5.2.0ではnpxが追加され、プロジェクト内にインストールした場合でも使用出来る様になりました。</p>\n<p>これからは、プロジェクト内にhexoやexpress-generator等をインストールしておけば使えます。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Ubuntu18.04</li>\n</ul>\n<h1 id=\"npxを使わない場合\"><a href=\"#npxを使わない場合\" class=\"headerlink\" title=\"npxを使わない場合\"></a>npxを使わない場合</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expressが見つからないと言われる</span><br><span class=\"line\">$ express express-project</span><br><span class=\"line\"></span><br><span class=\"line\">グローバルインストールする</span><br><span class=\"line\">$ npm install -g express-generator</span><br><span class=\"line\"></span><br><span class=\"line\">コマンドが使える様になる</span><br><span class=\"line\">$ express express-project</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"npxを使う場合\"><a href=\"#npxを使う場合\" class=\"headerlink\" title=\"npxを使う場合\"></a>npxを使う場合</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expressが見つからないと言われる</span><br><span class=\"line\">$ express express-project</span><br><span class=\"line\"></span><br><span class=\"line\">プロジェクトにインストールする</span><br><span class=\"line\">$ npm install express-generator</span><br><span class=\"line\"></span><br><span class=\"line\">npxでプロジェクト内のexpressを実行</span><br><span class=\"line\">$ npx express express-project</span><br></pre></td></tr></table></figure>\n\n"},{"title":"initrdを展開・編集・作成","date":"2019-10-20T06:25:37.000Z","_content":"\nUbuntuOSベースのシンクライアントを作成していた時、\n起動時のスプラッシュロゴ表示や、ファイルシステムの復号化処理を行うため、\ninitrd内部の書き換えを行っていました\n\nなかなかプライベートで触る事は少ないため、書き残しておきます。\n\n# 環境\n\n- Linux Mint 19\n\n# initrdとは\n\nLinuxを起動する際に、各ディストリビューションとして動作するために必要なサービスやドライバが含まれたファイル群を固めた物\n\nLinuxが起動する時には、基本的に以下の順序で読み込まれていく\n\n- 1.UEFI\n- 2.ブートローダ\n- 3.カーネル\n- 4.init\n\nカーネルを読み込み基本的なコマンドを使用できる状態にしてから、initrdをマウント、initrd内部の/initを実行する\n\nLinux起動時に黒画面に出現するログは、大半がinitを実行している時に出ている\n\n# 手順\n\n## initrdを作業ディレクトリにコピーする\n\n/bootフォルダ以下に似たような名前のファイルがあるため、それをコピーしてください\n\n```bash\n$ mkdir work # 作業フォルダ作成\n$ cd work\n$ cp /boot/initrd.img-4.15.0-54-generic ./initrd\n```\n\n## zcatで復号しつつ、ファイルとして出力\n\n```bash\n$ mkdir initrdfiles\n$ cd initrdfiles\n$ zcat ../initrd | cpio -idmv\n```\n\n## ファイルを確認\n\n```bash\n$ ls\nbin  conf  etc  init  lib  lib64  run  sbin  scripts  usr  var\n```\n\n## initを見てみる\n\n```bash\n$ vi init\n```\n\n詳しくは触れませんが、shによって実行できる形で書かれている事がわかります。\n\n```bash\n#!/bin/sh\n\n# Default PATH differs between shells, and is not automatically exported\n# by klibc dash.  Make it consistent.\nexport PATH=/sbin:/usr/sbin:/bin:/usr/bin\n\n[ -d /dev ] || mkdir -m 0755 /dev\n[ -d /root ] || mkdir -m 0700 /root\n[ -d /sys ] || mkdir /sys\n[ -d /proc ] || mkdir /proc\n[ -d /tmp ] || mkdir /tmp\nmkdir -p /var/lock\nmount -t sysfs -o nodev,noexec,nosuid sysfs /sys\nmount -t proc -o nodev,noexec,nosuid proc /proc\n\ncase \" $(cat /proc/cmdline) \" in\n*\\ quiet\\ *)\n\tquiet=y\n\t;;\n*)\n\tquiet=n\n\techo \"Loading, please wait...\"\n\t;;\nesac\nexport quiet\n\n# Note that this only becomes /dev on the real filesystem if udev's scripts\n# are used; which they will be, but it's worth pointing out\nmount -t devtmpfs -o nosuid,mode=0755 udev /dev\nmkdir /dev/pts\nmount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || true\nmount -t tmpfs -o \"noexec,nosuid,size=10%,mode=0755\" tmpfs /run\nmkdir -m 0755 /run/initramfs\n\n# Export the dpkg architecture\nexport DPKG_ARCH=\n. /conf/arch.conf\n\n# Set modprobe env\nexport MODPROBE_OPTIONS=\"-qb\"\n\n# Export relevant variables\nexport ROOT=\nexport ROOTDELAY=\nexport ROOTFLAGS=\nexport ROOTFSTYPE=\nexport IP=\nexport IP6=\nexport BOOT=\nexport BOOTIF=\nexport UBIMTD=\nexport break=\nexport init=/sbin/init\nexport readonly=y\nexport rootmnt=/root\nexport debug=\nexport panic=\nexport blacklist=\nexport resume=\nexport resume_offset=\nexport drop_caps=\nexport fastboot=n\nexport forcefsck=n\nexport fsckfix=\nexport recovery=\nexport NETWORK_SKIP_ENSLAVED=\n\n\n# mdadm needs hostname to be set. This has to be done before the udev rules are called!\nif [ -f \"/etc/hostname\" ]; then\n        /bin/hostname -F /etc/hostname >/dev/null 2>&1\nfi\n\n# Bring in the main config\n. /conf/initramfs.conf\nfor conf in conf/conf.d/*; do\n\t[ -f ${conf} ] && . ${conf}\ndone\n. /scripts/functions\n\n# Parse command line options\nfor x in $(cat /proc/cmdline); do\n\tcase $x in\n\tinit=*)\n\t\tinit=${x#init=}\n\t\t;;\n\troot=*)\n\t\tROOT=${x#root=}\n\t\tif [ -z \"${BOOT}\" ] && [ \"$ROOT\" = \"/dev/nfs\" ]; then\n\t\t\tBOOT=nfs\n\t\tfi\n                ;;\n\trootflags=*)\n\t\tROOTFLAGS=\"-o ${x#rootflags=}\"\n\t\t;;\n\trootfstype=*)\n\t\tROOTFSTYPE=\"${x#rootfstype=}\"\n\t\t;;\n\trootdelay=*)\n\t\tROOTDELAY=\"${x#rootdelay=}\"\n\t\tcase ${ROOTDELAY} in\n\t\t*[![:digit:].]*)\n\t\t\tROOTDELAY=\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tresumedelay=*)\n\t\tRESUMEDELAY=\"${x#resumedelay=}\"\n\t\t;;\n\tloop=*)\n\t\tLOOP=\"${x#loop=}\"\n\t\t;;\n\tloopflags=*)\n\t\tLOOPFLAGS=\"-o ${x#loopflags=}\"\n\t\t;;\n\tloopfstype=*)\n\t\tLOOPFSTYPE=\"${x#loopfstype=}\"\n\t\t;;\n\tcryptopts=*)\n\t\tcryptopts=\"${x#cryptopts=}\"\n\t\t;;\n\tnfsroot=*)\n\t\tNFSROOT=\"${x#nfsroot=}\"\n\t\t;;\n\tnetboot=*)\n\t\tNETBOOT=\"${x#netboot=}\"\n\t\t;;\n\tip=*)\n\t\tIP=\"${x#ip=}\"\n\t\t;;\n\tip6=*)\n\t\tIP6=\"${x#ip6=}\"\n\t\t;;\n\tboot=*)\n\t\tBOOT=${x#boot=}\n\t\t;;\n\tubi.mtd=*)\n\t\tUBIMTD=${x#ubi.mtd=}\n\t\t;;\n\tresume=*)\n\t\tRESUME=\"${x#resume=}\"\n\t\tcase $RESUME in\n\t        UUID=*)\n\t\t\tRESUME=\"/dev/disk/by-uuid/${RESUME#UUID=}\"\n\t\tesac\n\t\t;;\n\tresume_offset=*)\n\t\tresume_offset=\"${x#resume_offset=}\"\n\t\t;;\n\tnoresume)\n\t\tnoresume=y\n\t\t;;\n\tdrop_capabilities=*)\n\t\tdrop_caps=\"-d ${x#drop_capabilities=}\"\n\t\t;;\n\tpanic=*)\n\t\tpanic=\"${x#panic=}\"\n\t\tcase ${panic} in\n\t\t*[![:digit:].]*)\n\t\t\tpanic=\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tro)\n\t\treadonly=y\n\t\t;;\n\trw)\n\t\treadonly=n\n\t\t;;\n\tdebug)\n\t\tdebug=y\n\t\tquiet=n\n\t\tif [ -n \"${netconsole}\" ]; then\n\t\t\texec >/dev/kmsg 2>&1\n\t\telse\n\t\t\texec >/run/initramfs/initramfs.debug 2>&1\n\t\tfi\n\t\tset -x\n\t\t;;\n\tdebug=*)\n\t\tdebug=y\n\t\tquiet=n\n\t\tset -x\n\t\t;;\n\tbreak=*)\n\t\tbreak=${x#break=}\n\t\t;;\n\tbreak)\n\t\tbreak=premount\n\t\t;;\n\tblacklist=*)\n\t\tblacklist=${x#blacklist=}\n\t\t;;\n\tnetconsole=*)\n\t\tnetconsole=${x#netconsole=}\n\t\t[ \"x$debug\" = \"xy\" ] && exec >/dev/kmsg 2>&1\n\t\t;;\n\tBOOTIF=*)\n\t\tBOOTIF=${x#BOOTIF=}\n\t\t;;\n\thwaddr=*)\n\t\tBOOTIF=${x#hwaddr=}\n\t\t;;\n\tfastboot|fsck.mode=skip)\n\t\tfastboot=y\n\t\t;;\n\tforcefsck|fsck.mode=force)\n\t\tforcefsck=y\n\t\t;;\n\tfsckfix|fsck.repair=yes)\n\t\tfsckfix=y\n\t\t;;\n\tfsck.repair=no)\n\t\tfsckfix=n\n\t\t;;\n\trecovery)\n\t\trecovery=y\n\t\t;;\n\tesac\ndone\n\n# Default to BOOT=local if no boot script defined.\nif [ -z \"${BOOT}\" ]; then\n\tBOOT=local\nfi\n\nif [ -n \"${noresume}\" ] || [ \"$RESUME\" = none ]; then\n\texport noresume=y\n\tunset resume\nelse\n\tresume=${RESUME:-}\nfi\n\nmaybe_break top\n\n# export BOOT variable value for compcache,\n# so we know if we run from casper\nexport BOOT\n\n# Don't do log messages here to avoid confusing graphical boots\nrun_scripts /scripts/init-top\n\nmaybe_break modules\n[ \"$quiet\" != \"y\" ] && log_begin_msg \"Loading essential drivers\"\n[ -n \"${netconsole}\" ] && modprobe netconsole netconsole=\"${netconsole}\"\nload_modules\n[ \"$quiet\" != \"y\" ] && log_end_msg\n\nmaybe_break premount\n[ \"$quiet\" != \"y\" ] && log_begin_msg \"Running /scripts/init-premount\"\nrun_scripts /scripts/init-premount\n[ \"$quiet\" != \"y\" ] && log_end_msg\n\nmaybe_break mount\nlog_begin_msg \"Mounting root file system\"\n# Always load local and nfs (since these might be needed for /etc or\n# /usr, irrespective of the boot script used to mount the rootfs).\n. /scripts/local\n. /scripts/nfs\n. /scripts/${BOOT}\nparse_numeric ${ROOT}\nmaybe_break mountroot\nmount_top\nmount_premount\nmountroot\nlog_end_msg\n\nif read_fstab_entry /usr; then\n\tlog_begin_msg \"Mounting /usr file system\"\n\tmountfs /usr\n\tlog_end_msg\nfi\n\n# Mount cleanup\nmount_bottom\nnfs_bottom\nlocal_bottom\n\nmaybe_break bottom\n[ \"$quiet\" != \"y\" ] && log_begin_msg \"Running /scripts/init-bottom\"\n# We expect udev's init-bottom script to move /dev to ${rootmnt}/dev\nrun_scripts /scripts/init-bottom\n[ \"$quiet\" != \"y\" ] && log_end_msg\n\n# Move /run to the root\nmount -n -o move /run ${rootmnt}/run\n\nvalidate_init() {\n\trun-init -n \"${rootmnt}\" \"${1}\"\n}\n\n# Check init is really there\nif ! validate_init \"$init\"; then\n\techo \"Target filesystem doesn't have requested ${init}.\"\n\tinit=\n\tfor inittest in /sbin/init /etc/init /bin/init /bin/sh; do\n\t\tif validate_init \"${inittest}\"; then\n\t\t\tinit=\"$inittest\"\n\t\t\tbreak\n\t\tfi\n\tdone\nfi\n\n# No init on rootmount\nif ! validate_init \"${init}\" ; then\n\tpanic \"No init found. Try passing init= bootarg.\"\nfi\n\nmaybe_break init\n\n# don't leak too much of env - some init(8) don't clear it\n# (keep init, rootmnt, drop_caps)\nunset debug\nunset MODPROBE_OPTIONS\nunset DPKG_ARCH\nunset ROOTFLAGS\nunset ROOTFSTYPE\nunset ROOTDELAY\nunset ROOT\nunset IP\nunset IP6\nunset BOOT\nunset BOOTIF\nunset UBIMTD\nunset blacklist\nunset break\nunset noresume\nunset panic\nunset quiet\nunset readonly\nunset resume\nunset resume_offset\nunset fastboot\nunset forcefsck\nunset fsckfix\n\n# Move virtual filesystems over to the real filesystem\nmount -n -o move /sys ${rootmnt}/sys\nmount -n -o move /proc ${rootmnt}/proc\n\n# Chain to real filesystem\nexec run-init ${drop_caps} ${rootmnt} ${init} \"$@\" ${recovery:+--startup-event=recovery} <${rootmnt}/dev/console >${rootmnt}/dev/console 2>&1\necho \"Something went badly wrong in the initramfs.\"\npanic \"Please file a bug on initramfs-tools.\"\n```\n\nまたこのinitを実行するタイミングではルートファイルをマウントしていないため、ルートにある/binや/sbinを利用できません。\n\n代わりに、initrd内部の/binや/sbinを利用しています。\n\nそのため、ここにバイナリを配置しておく事で起動中に使用できる様になります。\n\n> **注意**\n> バイナリの実行のために、別途moduleの追加が必要だったりもします。\n\n## initrdを作成する\n\n展開後のファイルが配置されているフォルダで行います。\ncpioによるアーカイブ化、gzipによる圧縮を同時に行い元の状態に戻します。\n\n```bash\n$ find | cpio -o -H newc  | gzip -c > ../initrd.img-4.15.0-54-generic\n```\n\n作成されたinitrdを元の/boot/initrdと入れ替えても起動する事が確認できるかと思います。\n\ninitrdの編集は以上の操作で行います。\n\n## init実行中に処理を止める\n\n/boot/grub/grub.cfgのlinuxオプションが書かれている箇所にbreak=initとオプションを追加する事で処理が停止します。\ninitrd内のデバッグは、このタイミングで一旦止め、initrd内のリソースを使用したコマンド操作が可能です。\n処理を進める場合には、exitコマンドを実行し、続行させる事ができます。\n\n> **注意**\n> HyperV上に起動したLinuxMint19では、このタイミングではコンソールの描画が行われませんでした。\n> そのため実機で行う事をおすすめします。\n","source":"_posts/initrd-unpack-edit-compress.md","raw":"---\ntitle: initrdを展開・編集・作成\ndate: 2019-10-20 15:25:37\ntags: [Linux,init]\n---\n\nUbuntuOSベースのシンクライアントを作成していた時、\n起動時のスプラッシュロゴ表示や、ファイルシステムの復号化処理を行うため、\ninitrd内部の書き換えを行っていました\n\nなかなかプライベートで触る事は少ないため、書き残しておきます。\n\n# 環境\n\n- Linux Mint 19\n\n# initrdとは\n\nLinuxを起動する際に、各ディストリビューションとして動作するために必要なサービスやドライバが含まれたファイル群を固めた物\n\nLinuxが起動する時には、基本的に以下の順序で読み込まれていく\n\n- 1.UEFI\n- 2.ブートローダ\n- 3.カーネル\n- 4.init\n\nカーネルを読み込み基本的なコマンドを使用できる状態にしてから、initrdをマウント、initrd内部の/initを実行する\n\nLinux起動時に黒画面に出現するログは、大半がinitを実行している時に出ている\n\n# 手順\n\n## initrdを作業ディレクトリにコピーする\n\n/bootフォルダ以下に似たような名前のファイルがあるため、それをコピーしてください\n\n```bash\n$ mkdir work # 作業フォルダ作成\n$ cd work\n$ cp /boot/initrd.img-4.15.0-54-generic ./initrd\n```\n\n## zcatで復号しつつ、ファイルとして出力\n\n```bash\n$ mkdir initrdfiles\n$ cd initrdfiles\n$ zcat ../initrd | cpio -idmv\n```\n\n## ファイルを確認\n\n```bash\n$ ls\nbin  conf  etc  init  lib  lib64  run  sbin  scripts  usr  var\n```\n\n## initを見てみる\n\n```bash\n$ vi init\n```\n\n詳しくは触れませんが、shによって実行できる形で書かれている事がわかります。\n\n```bash\n#!/bin/sh\n\n# Default PATH differs between shells, and is not automatically exported\n# by klibc dash.  Make it consistent.\nexport PATH=/sbin:/usr/sbin:/bin:/usr/bin\n\n[ -d /dev ] || mkdir -m 0755 /dev\n[ -d /root ] || mkdir -m 0700 /root\n[ -d /sys ] || mkdir /sys\n[ -d /proc ] || mkdir /proc\n[ -d /tmp ] || mkdir /tmp\nmkdir -p /var/lock\nmount -t sysfs -o nodev,noexec,nosuid sysfs /sys\nmount -t proc -o nodev,noexec,nosuid proc /proc\n\ncase \" $(cat /proc/cmdline) \" in\n*\\ quiet\\ *)\n\tquiet=y\n\t;;\n*)\n\tquiet=n\n\techo \"Loading, please wait...\"\n\t;;\nesac\nexport quiet\n\n# Note that this only becomes /dev on the real filesystem if udev's scripts\n# are used; which they will be, but it's worth pointing out\nmount -t devtmpfs -o nosuid,mode=0755 udev /dev\nmkdir /dev/pts\nmount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || true\nmount -t tmpfs -o \"noexec,nosuid,size=10%,mode=0755\" tmpfs /run\nmkdir -m 0755 /run/initramfs\n\n# Export the dpkg architecture\nexport DPKG_ARCH=\n. /conf/arch.conf\n\n# Set modprobe env\nexport MODPROBE_OPTIONS=\"-qb\"\n\n# Export relevant variables\nexport ROOT=\nexport ROOTDELAY=\nexport ROOTFLAGS=\nexport ROOTFSTYPE=\nexport IP=\nexport IP6=\nexport BOOT=\nexport BOOTIF=\nexport UBIMTD=\nexport break=\nexport init=/sbin/init\nexport readonly=y\nexport rootmnt=/root\nexport debug=\nexport panic=\nexport blacklist=\nexport resume=\nexport resume_offset=\nexport drop_caps=\nexport fastboot=n\nexport forcefsck=n\nexport fsckfix=\nexport recovery=\nexport NETWORK_SKIP_ENSLAVED=\n\n\n# mdadm needs hostname to be set. This has to be done before the udev rules are called!\nif [ -f \"/etc/hostname\" ]; then\n        /bin/hostname -F /etc/hostname >/dev/null 2>&1\nfi\n\n# Bring in the main config\n. /conf/initramfs.conf\nfor conf in conf/conf.d/*; do\n\t[ -f ${conf} ] && . ${conf}\ndone\n. /scripts/functions\n\n# Parse command line options\nfor x in $(cat /proc/cmdline); do\n\tcase $x in\n\tinit=*)\n\t\tinit=${x#init=}\n\t\t;;\n\troot=*)\n\t\tROOT=${x#root=}\n\t\tif [ -z \"${BOOT}\" ] && [ \"$ROOT\" = \"/dev/nfs\" ]; then\n\t\t\tBOOT=nfs\n\t\tfi\n                ;;\n\trootflags=*)\n\t\tROOTFLAGS=\"-o ${x#rootflags=}\"\n\t\t;;\n\trootfstype=*)\n\t\tROOTFSTYPE=\"${x#rootfstype=}\"\n\t\t;;\n\trootdelay=*)\n\t\tROOTDELAY=\"${x#rootdelay=}\"\n\t\tcase ${ROOTDELAY} in\n\t\t*[![:digit:].]*)\n\t\t\tROOTDELAY=\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tresumedelay=*)\n\t\tRESUMEDELAY=\"${x#resumedelay=}\"\n\t\t;;\n\tloop=*)\n\t\tLOOP=\"${x#loop=}\"\n\t\t;;\n\tloopflags=*)\n\t\tLOOPFLAGS=\"-o ${x#loopflags=}\"\n\t\t;;\n\tloopfstype=*)\n\t\tLOOPFSTYPE=\"${x#loopfstype=}\"\n\t\t;;\n\tcryptopts=*)\n\t\tcryptopts=\"${x#cryptopts=}\"\n\t\t;;\n\tnfsroot=*)\n\t\tNFSROOT=\"${x#nfsroot=}\"\n\t\t;;\n\tnetboot=*)\n\t\tNETBOOT=\"${x#netboot=}\"\n\t\t;;\n\tip=*)\n\t\tIP=\"${x#ip=}\"\n\t\t;;\n\tip6=*)\n\t\tIP6=\"${x#ip6=}\"\n\t\t;;\n\tboot=*)\n\t\tBOOT=${x#boot=}\n\t\t;;\n\tubi.mtd=*)\n\t\tUBIMTD=${x#ubi.mtd=}\n\t\t;;\n\tresume=*)\n\t\tRESUME=\"${x#resume=}\"\n\t\tcase $RESUME in\n\t        UUID=*)\n\t\t\tRESUME=\"/dev/disk/by-uuid/${RESUME#UUID=}\"\n\t\tesac\n\t\t;;\n\tresume_offset=*)\n\t\tresume_offset=\"${x#resume_offset=}\"\n\t\t;;\n\tnoresume)\n\t\tnoresume=y\n\t\t;;\n\tdrop_capabilities=*)\n\t\tdrop_caps=\"-d ${x#drop_capabilities=}\"\n\t\t;;\n\tpanic=*)\n\t\tpanic=\"${x#panic=}\"\n\t\tcase ${panic} in\n\t\t*[![:digit:].]*)\n\t\t\tpanic=\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tro)\n\t\treadonly=y\n\t\t;;\n\trw)\n\t\treadonly=n\n\t\t;;\n\tdebug)\n\t\tdebug=y\n\t\tquiet=n\n\t\tif [ -n \"${netconsole}\" ]; then\n\t\t\texec >/dev/kmsg 2>&1\n\t\telse\n\t\t\texec >/run/initramfs/initramfs.debug 2>&1\n\t\tfi\n\t\tset -x\n\t\t;;\n\tdebug=*)\n\t\tdebug=y\n\t\tquiet=n\n\t\tset -x\n\t\t;;\n\tbreak=*)\n\t\tbreak=${x#break=}\n\t\t;;\n\tbreak)\n\t\tbreak=premount\n\t\t;;\n\tblacklist=*)\n\t\tblacklist=${x#blacklist=}\n\t\t;;\n\tnetconsole=*)\n\t\tnetconsole=${x#netconsole=}\n\t\t[ \"x$debug\" = \"xy\" ] && exec >/dev/kmsg 2>&1\n\t\t;;\n\tBOOTIF=*)\n\t\tBOOTIF=${x#BOOTIF=}\n\t\t;;\n\thwaddr=*)\n\t\tBOOTIF=${x#hwaddr=}\n\t\t;;\n\tfastboot|fsck.mode=skip)\n\t\tfastboot=y\n\t\t;;\n\tforcefsck|fsck.mode=force)\n\t\tforcefsck=y\n\t\t;;\n\tfsckfix|fsck.repair=yes)\n\t\tfsckfix=y\n\t\t;;\n\tfsck.repair=no)\n\t\tfsckfix=n\n\t\t;;\n\trecovery)\n\t\trecovery=y\n\t\t;;\n\tesac\ndone\n\n# Default to BOOT=local if no boot script defined.\nif [ -z \"${BOOT}\" ]; then\n\tBOOT=local\nfi\n\nif [ -n \"${noresume}\" ] || [ \"$RESUME\" = none ]; then\n\texport noresume=y\n\tunset resume\nelse\n\tresume=${RESUME:-}\nfi\n\nmaybe_break top\n\n# export BOOT variable value for compcache,\n# so we know if we run from casper\nexport BOOT\n\n# Don't do log messages here to avoid confusing graphical boots\nrun_scripts /scripts/init-top\n\nmaybe_break modules\n[ \"$quiet\" != \"y\" ] && log_begin_msg \"Loading essential drivers\"\n[ -n \"${netconsole}\" ] && modprobe netconsole netconsole=\"${netconsole}\"\nload_modules\n[ \"$quiet\" != \"y\" ] && log_end_msg\n\nmaybe_break premount\n[ \"$quiet\" != \"y\" ] && log_begin_msg \"Running /scripts/init-premount\"\nrun_scripts /scripts/init-premount\n[ \"$quiet\" != \"y\" ] && log_end_msg\n\nmaybe_break mount\nlog_begin_msg \"Mounting root file system\"\n# Always load local and nfs (since these might be needed for /etc or\n# /usr, irrespective of the boot script used to mount the rootfs).\n. /scripts/local\n. /scripts/nfs\n. /scripts/${BOOT}\nparse_numeric ${ROOT}\nmaybe_break mountroot\nmount_top\nmount_premount\nmountroot\nlog_end_msg\n\nif read_fstab_entry /usr; then\n\tlog_begin_msg \"Mounting /usr file system\"\n\tmountfs /usr\n\tlog_end_msg\nfi\n\n# Mount cleanup\nmount_bottom\nnfs_bottom\nlocal_bottom\n\nmaybe_break bottom\n[ \"$quiet\" != \"y\" ] && log_begin_msg \"Running /scripts/init-bottom\"\n# We expect udev's init-bottom script to move /dev to ${rootmnt}/dev\nrun_scripts /scripts/init-bottom\n[ \"$quiet\" != \"y\" ] && log_end_msg\n\n# Move /run to the root\nmount -n -o move /run ${rootmnt}/run\n\nvalidate_init() {\n\trun-init -n \"${rootmnt}\" \"${1}\"\n}\n\n# Check init is really there\nif ! validate_init \"$init\"; then\n\techo \"Target filesystem doesn't have requested ${init}.\"\n\tinit=\n\tfor inittest in /sbin/init /etc/init /bin/init /bin/sh; do\n\t\tif validate_init \"${inittest}\"; then\n\t\t\tinit=\"$inittest\"\n\t\t\tbreak\n\t\tfi\n\tdone\nfi\n\n# No init on rootmount\nif ! validate_init \"${init}\" ; then\n\tpanic \"No init found. Try passing init= bootarg.\"\nfi\n\nmaybe_break init\n\n# don't leak too much of env - some init(8) don't clear it\n# (keep init, rootmnt, drop_caps)\nunset debug\nunset MODPROBE_OPTIONS\nunset DPKG_ARCH\nunset ROOTFLAGS\nunset ROOTFSTYPE\nunset ROOTDELAY\nunset ROOT\nunset IP\nunset IP6\nunset BOOT\nunset BOOTIF\nunset UBIMTD\nunset blacklist\nunset break\nunset noresume\nunset panic\nunset quiet\nunset readonly\nunset resume\nunset resume_offset\nunset fastboot\nunset forcefsck\nunset fsckfix\n\n# Move virtual filesystems over to the real filesystem\nmount -n -o move /sys ${rootmnt}/sys\nmount -n -o move /proc ${rootmnt}/proc\n\n# Chain to real filesystem\nexec run-init ${drop_caps} ${rootmnt} ${init} \"$@\" ${recovery:+--startup-event=recovery} <${rootmnt}/dev/console >${rootmnt}/dev/console 2>&1\necho \"Something went badly wrong in the initramfs.\"\npanic \"Please file a bug on initramfs-tools.\"\n```\n\nまたこのinitを実行するタイミングではルートファイルをマウントしていないため、ルートにある/binや/sbinを利用できません。\n\n代わりに、initrd内部の/binや/sbinを利用しています。\n\nそのため、ここにバイナリを配置しておく事で起動中に使用できる様になります。\n\n> **注意**\n> バイナリの実行のために、別途moduleの追加が必要だったりもします。\n\n## initrdを作成する\n\n展開後のファイルが配置されているフォルダで行います。\ncpioによるアーカイブ化、gzipによる圧縮を同時に行い元の状態に戻します。\n\n```bash\n$ find | cpio -o -H newc  | gzip -c > ../initrd.img-4.15.0-54-generic\n```\n\n作成されたinitrdを元の/boot/initrdと入れ替えても起動する事が確認できるかと思います。\n\ninitrdの編集は以上の操作で行います。\n\n## init実行中に処理を止める\n\n/boot/grub/grub.cfgのlinuxオプションが書かれている箇所にbreak=initとオプションを追加する事で処理が停止します。\ninitrd内のデバッグは、このタイミングで一旦止め、initrd内のリソースを使用したコマンド操作が可能です。\n処理を進める場合には、exitコマンドを実行し、続行させる事ができます。\n\n> **注意**\n> HyperV上に起動したLinuxMint19では、このタイミングではコンソールの描画が行われませんでした。\n> そのため実機で行う事をおすすめします。\n","slug":"initrd-unpack-edit-compress","published":1,"updated":"2020-02-09T16:05:07.001Z","_id":"ck6ku49vn003q8lvq4xcd2rrp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>UbuntuOSベースのシンクライアントを作成していた時、<br>起動時のスプラッシュロゴ表示や、ファイルシステムの復号化処理を行うため、<br>initrd内部の書き換えを行っていました</p>\n<p>なかなかプライベートで触る事は少ないため、書き残しておきます。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Linux Mint 19</li>\n</ul>\n<h1 id=\"initrdとは\"><a href=\"#initrdとは\" class=\"headerlink\" title=\"initrdとは\"></a>initrdとは</h1><p>Linuxを起動する際に、各ディストリビューションとして動作するために必要なサービスやドライバが含まれたファイル群を固めた物</p>\n<p>Linuxが起動する時には、基本的に以下の順序で読み込まれていく</p>\n<ul>\n<li>1.UEFI</li>\n<li>2.ブートローダ</li>\n<li>3.カーネル</li>\n<li>4.init</li>\n</ul>\n<p>カーネルを読み込み基本的なコマンドを使用できる状態にしてから、initrdをマウント、initrd内部の/initを実行する</p>\n<p>Linux起動時に黒画面に出現するログは、大半がinitを実行している時に出ている</p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"initrdを作業ディレクトリにコピーする\"><a href=\"#initrdを作業ディレクトリにコピーする\" class=\"headerlink\" title=\"initrdを作業ディレクトリにコピーする\"></a>initrdを作業ディレクトリにコピーする</h2><p>/bootフォルダ以下に似たような名前のファイルがあるため、それをコピーしてください</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir work <span class=\"comment\"># 作業フォルダ作成</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> work</span><br><span class=\"line\">$ cp /boot/initrd.img-4.15.0-54-generic ./initrd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"zcatで復号しつつ、ファイルとして出力\"><a href=\"#zcatで復号しつつ、ファイルとして出力\" class=\"headerlink\" title=\"zcatで復号しつつ、ファイルとして出力\"></a>zcatで復号しつつ、ファイルとして出力</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir initrdfiles</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> initrdfiles</span><br><span class=\"line\">$ zcat ../initrd | cpio -idmv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ファイルを確認\"><a href=\"#ファイルを確認\" class=\"headerlink\" title=\"ファイルを確認\"></a>ファイルを確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls</span><br><span class=\"line\">bin  conf  etc  init  lib  lib64  run  sbin  scripts  usr  var</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"initを見てみる\"><a href=\"#initを見てみる\" class=\"headerlink\" title=\"initを見てみる\"></a>initを見てみる</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi init</span><br></pre></td></tr></table></figure>\n\n<p>詳しくは触れませんが、shによって実行できる形で書かれている事がわかります。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Default PATH differs between shells, and is not automatically exported</span></span><br><span class=\"line\"><span class=\"comment\"># by klibc dash.  Make it consistent.</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=/sbin:/usr/sbin:/bin:/usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\">[ -d /dev ] || mkdir -m 0755 /dev</span><br><span class=\"line\">[ -d /root ] || mkdir -m 0700 /root</span><br><span class=\"line\">[ -d /sys ] || mkdir /sys</span><br><span class=\"line\">[ -d /proc ] || mkdir /proc</span><br><span class=\"line\">[ -d /tmp ] || mkdir /tmp</span><br><span class=\"line\">mkdir -p /var/lock</span><br><span class=\"line\">mount -t sysfs -o nodev,noexec,nosuid sysfs /sys</span><br><span class=\"line\">mount -t proc -o nodev,noexec,nosuid proc /proc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\" <span class=\"variable\">$(cat /proc/cmdline)</span> \"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">*\\ quiet\\ *)</span><br><span class=\"line\">\tquiet=y</span><br><span class=\"line\">\t;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">\tquiet=n</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Loading, please wait...\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> quiet</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Note that this only becomes /dev on the real filesystem if udev's scripts</span></span><br><span class=\"line\"><span class=\"comment\"># are used; which they will be, but it's worth pointing out</span></span><br><span class=\"line\">mount -t devtmpfs -o nosuid,mode=0755 udev /dev</span><br><span class=\"line\">mkdir /dev/pts</span><br><span class=\"line\">mount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || <span class=\"literal\">true</span></span><br><span class=\"line\">mount -t tmpfs -o <span class=\"string\">\"noexec,nosuid,size=10%,mode=0755\"</span> tmpfs /run</span><br><span class=\"line\">mkdir -m 0755 /run/initramfs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Export the dpkg architecture</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DPKG_ARCH=</span><br><span class=\"line\">. /conf/arch.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set modprobe env</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MODPROBE_OPTIONS=<span class=\"string\">\"-qb\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Export relevant variables</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOT=</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOTDELAY=</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOTFLAGS=</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOTFSTYPE=</span><br><span class=\"line\"><span class=\"built_in\">export</span> IP=</span><br><span class=\"line\"><span class=\"built_in\">export</span> IP6=</span><br><span class=\"line\"><span class=\"built_in\">export</span> BOOT=</span><br><span class=\"line\"><span class=\"built_in\">export</span> BOOTIF=</span><br><span class=\"line\"><span class=\"built_in\">export</span> UBIMTD=</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"built_in\">break</span>=</span><br><span class=\"line\"><span class=\"built_in\">export</span> init=/sbin/init</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"built_in\">readonly</span>=y</span><br><span class=\"line\"><span class=\"built_in\">export</span> rootmnt=/root</span><br><span class=\"line\"><span class=\"built_in\">export</span> debug=</span><br><span class=\"line\"><span class=\"built_in\">export</span> panic=</span><br><span class=\"line\"><span class=\"built_in\">export</span> blacklist=</span><br><span class=\"line\"><span class=\"built_in\">export</span> resume=</span><br><span class=\"line\"><span class=\"built_in\">export</span> resume_offset=</span><br><span class=\"line\"><span class=\"built_in\">export</span> drop_caps=</span><br><span class=\"line\"><span class=\"built_in\">export</span> fastboot=n</span><br><span class=\"line\"><span class=\"built_in\">export</span> forcefsck=n</span><br><span class=\"line\"><span class=\"built_in\">export</span> fsckfix=</span><br><span class=\"line\"><span class=\"built_in\">export</span> recovery=</span><br><span class=\"line\"><span class=\"built_in\">export</span> NETWORK_SKIP_ENSLAVED=</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mdadm needs hostname to be set. This has to be done before the udev rules are called!</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f <span class=\"string\">\"/etc/hostname\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        /bin/hostname -F /etc/hostname &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bring in the main config</span></span><br><span class=\"line\">. /conf/initramfs.conf</span><br><span class=\"line\"><span class=\"keyword\">for</span> conf <span class=\"keyword\">in</span> conf/conf.d/*; <span class=\"keyword\">do</span></span><br><span class=\"line\">\t[ -f <span class=\"variable\">$&#123;conf&#125;</span> ] &amp;&amp; . <span class=\"variable\">$&#123;conf&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">. /scripts/<span class=\"built_in\">functions</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Parse command line options</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> $(cat /proc/cmdline); <span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$x</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\tinit=*)</span><br><span class=\"line\">\t\tinit=<span class=\"variable\">$&#123;x#init=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\troot=*)</span><br><span class=\"line\">\t\tROOT=<span class=\"variable\">$&#123;x#root=&#125;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;BOOT&#125;</span>\"</span> ] &amp;&amp; [ <span class=\"string\">\"<span class=\"variable\">$ROOT</span>\"</span> = <span class=\"string\">\"/dev/nfs\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\tBOOT=nfs</span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">\trootflags=*)</span><br><span class=\"line\">\t\tROOTFLAGS=<span class=\"string\">\"-o <span class=\"variable\">$&#123;x#rootflags=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trootfstype=*)</span><br><span class=\"line\">\t\tROOTFSTYPE=<span class=\"string\">\"<span class=\"variable\">$&#123;x#rootfstype=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trootdelay=*)</span><br><span class=\"line\">\t\tROOTDELAY=<span class=\"string\">\"<span class=\"variable\">$&#123;x#rootdelay=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"variable\">$&#123;ROOTDELAY&#125;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t*[![:digit:].]*)</span><br><span class=\"line\">\t\t\tROOTDELAY=</span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tresumedelay=*)</span><br><span class=\"line\">\t\tRESUMEDELAY=<span class=\"string\">\"<span class=\"variable\">$&#123;x#resumedelay=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tloop=*)</span><br><span class=\"line\">\t\tLOOP=<span class=\"string\">\"<span class=\"variable\">$&#123;x#loop=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tloopflags=*)</span><br><span class=\"line\">\t\tLOOPFLAGS=<span class=\"string\">\"-o <span class=\"variable\">$&#123;x#loopflags=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tloopfstype=*)</span><br><span class=\"line\">\t\tLOOPFSTYPE=<span class=\"string\">\"<span class=\"variable\">$&#123;x#loopfstype=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tcryptopts=*)</span><br><span class=\"line\">\t\tcryptopts=<span class=\"string\">\"<span class=\"variable\">$&#123;x#cryptopts=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnfsroot=*)</span><br><span class=\"line\">\t\tNFSROOT=<span class=\"string\">\"<span class=\"variable\">$&#123;x#nfsroot=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnetboot=*)</span><br><span class=\"line\">\t\tNETBOOT=<span class=\"string\">\"<span class=\"variable\">$&#123;x#netboot=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tip=*)</span><br><span class=\"line\">\t\tIP=<span class=\"string\">\"<span class=\"variable\">$&#123;x#ip=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tip6=*)</span><br><span class=\"line\">\t\tIP6=<span class=\"string\">\"<span class=\"variable\">$&#123;x#ip6=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tboot=*)</span><br><span class=\"line\">\t\tBOOT=<span class=\"variable\">$&#123;x#boot=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tubi.mtd=*)</span><br><span class=\"line\">\t\tUBIMTD=<span class=\"variable\">$&#123;x#ubi.mtd=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tresume=*)</span><br><span class=\"line\">\t\tRESUME=<span class=\"string\">\"<span class=\"variable\">$&#123;x#resume=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"variable\">$RESUME</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t        UUID=*)</span><br><span class=\"line\">\t\t\tRESUME=<span class=\"string\">\"/dev/disk/by-uuid/<span class=\"variable\">$&#123;RESUME#UUID=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tresume_offset=*)</span><br><span class=\"line\">\t\tresume_offset=<span class=\"string\">\"<span class=\"variable\">$&#123;x#resume_offset=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnoresume)</span><br><span class=\"line\">\t\tnoresume=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tdrop_capabilities=*)</span><br><span class=\"line\">\t\tdrop_caps=<span class=\"string\">\"-d <span class=\"variable\">$&#123;x#drop_capabilities=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tpanic=*)</span><br><span class=\"line\">\t\tpanic=<span class=\"string\">\"<span class=\"variable\">$&#123;x#panic=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"variable\">$&#123;panic&#125;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t*[![:digit:].]*)</span><br><span class=\"line\">\t\t\tpanic=</span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tro)</span><br><span class=\"line\">\t\t<span class=\"built_in\">readonly</span>=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trw)</span><br><span class=\"line\">\t\t<span class=\"built_in\">readonly</span>=n</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tdebug)</span><br><span class=\"line\">\t\tdebug=y</span><br><span class=\"line\">\t\tquiet=n</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$&#123;netconsole&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exec</span> &gt;/dev/kmsg 2&gt;&amp;1</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exec</span> &gt;/run/initramfs/initramfs.debug 2&gt;&amp;1</span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">set</span> -x</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tdebug=*)</span><br><span class=\"line\">\t\tdebug=y</span><br><span class=\"line\">\t\tquiet=n</span><br><span class=\"line\">\t\t<span class=\"built_in\">set</span> -x</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"built_in\">break</span>=*)</span><br><span class=\"line\">\t\t<span class=\"built_in\">break</span>=<span class=\"variable\">$&#123;x#break=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"built_in\">break</span>)</span><br><span class=\"line\">\t\t<span class=\"built_in\">break</span>=premount</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tblacklist=*)</span><br><span class=\"line\">\t\tblacklist=<span class=\"variable\">$&#123;x#blacklist=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnetconsole=*)</span><br><span class=\"line\">\t\tnetconsole=<span class=\"variable\">$&#123;x#netconsole=&#125;</span></span><br><span class=\"line\">\t\t[ <span class=\"string\">\"x<span class=\"variable\">$debug</span>\"</span> = <span class=\"string\">\"xy\"</span> ] &amp;&amp; <span class=\"built_in\">exec</span> &gt;/dev/kmsg 2&gt;&amp;1</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tBOOTIF=*)</span><br><span class=\"line\">\t\tBOOTIF=<span class=\"variable\">$&#123;x#BOOTIF=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\thwaddr=*)</span><br><span class=\"line\">\t\tBOOTIF=<span class=\"variable\">$&#123;x#hwaddr=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tfastboot|fsck.mode=skip)</span><br><span class=\"line\">\t\tfastboot=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tforcefsck|fsck.mode=force)</span><br><span class=\"line\">\t\tforcefsck=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tfsckfix|fsck.repair=yes)</span><br><span class=\"line\">\t\tfsckfix=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tfsck.repair=no)</span><br><span class=\"line\">\t\tfsckfix=n</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trecovery)</span><br><span class=\"line\">\t\trecovery=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Default to BOOT=local if no boot script defined.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;BOOT&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tBOOT=<span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$&#123;noresume&#125;</span>\"</span> ] || [ <span class=\"string\">\"<span class=\"variable\">$RESUME</span>\"</span> = none ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">export</span> noresume=y</span><br><span class=\"line\">\t<span class=\"built_in\">unset</span> resume</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tresume=<span class=\"variable\">$&#123;RESUME:-&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break top</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># export BOOT variable value for compcache,</span></span><br><span class=\"line\"><span class=\"comment\"># so we know if we run from casper</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> BOOT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Don't do log messages here to avoid confusing graphical boots</span></span><br><span class=\"line\">run_scripts /scripts/init-top</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break modules</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_begin_msg <span class=\"string\">\"Loading essential drivers\"</span></span><br><span class=\"line\">[ -n <span class=\"string\">\"<span class=\"variable\">$&#123;netconsole&#125;</span>\"</span> ] &amp;&amp; modprobe netconsole netconsole=<span class=\"string\">\"<span class=\"variable\">$&#123;netconsole&#125;</span>\"</span></span><br><span class=\"line\">load_modules</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break premount</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_begin_msg <span class=\"string\">\"Running /scripts/init-premount\"</span></span><br><span class=\"line\">run_scripts /scripts/init-premount</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break mount</span><br><span class=\"line\">log_begin_msg <span class=\"string\">\"Mounting root file system\"</span></span><br><span class=\"line\"><span class=\"comment\"># Always load local and nfs (since these might be needed for /etc or</span></span><br><span class=\"line\"><span class=\"comment\"># /usr, irrespective of the boot script used to mount the rootfs).</span></span><br><span class=\"line\">. /scripts/<span class=\"built_in\">local</span></span><br><span class=\"line\">. /scripts/nfs</span><br><span class=\"line\">. /scripts/<span class=\"variable\">$&#123;BOOT&#125;</span></span><br><span class=\"line\">parse_numeric <span class=\"variable\">$&#123;ROOT&#125;</span></span><br><span class=\"line\">maybe_break mountroot</span><br><span class=\"line\">mount_top</span><br><span class=\"line\">mount_premount</span><br><span class=\"line\">mountroot</span><br><span class=\"line\">log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> read_fstab_entry /usr; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tlog_begin_msg <span class=\"string\">\"Mounting /usr file system\"</span></span><br><span class=\"line\">\tmountfs /usr</span><br><span class=\"line\">\tlog_end_msg</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Mount cleanup</span></span><br><span class=\"line\">mount_bottom</span><br><span class=\"line\">nfs_bottom</span><br><span class=\"line\">local_bottom</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break bottom</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_begin_msg <span class=\"string\">\"Running /scripts/init-bottom\"</span></span><br><span class=\"line\"><span class=\"comment\"># We expect udev's init-bottom script to move /dev to $&#123;rootmnt&#125;/dev</span></span><br><span class=\"line\">run_scripts /scripts/init-bottom</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Move /run to the root</span></span><br><span class=\"line\">mount -n -o move /run <span class=\"variable\">$&#123;rootmnt&#125;</span>/run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">validate_init</span></span>() &#123;</span><br><span class=\"line\">\trun-init -n <span class=\"string\">\"<span class=\"variable\">$&#123;rootmnt&#125;</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$&#123;1&#125;</span>\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Check init is really there</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ! validate_init <span class=\"string\">\"<span class=\"variable\">$init</span>\"</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Target filesystem doesn't have requested <span class=\"variable\">$&#123;init&#125;</span>.\"</span></span><br><span class=\"line\">\tinit=</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> inittest <span class=\"keyword\">in</span> /sbin/init /etc/init /bin/init /bin/sh; <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> validate_init <span class=\"string\">\"<span class=\"variable\">$&#123;inittest&#125;</span>\"</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\tinit=<span class=\"string\">\"<span class=\"variable\">$inittest</span>\"</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">break</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">\t<span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># No init on rootmount</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ! validate_init <span class=\"string\">\"<span class=\"variable\">$&#123;init&#125;</span>\"</span> ; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tpanic <span class=\"string\">\"No init found. Try passing init= bootarg.\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># don't leak too much of env - some init(8) don't clear it</span></span><br><span class=\"line\"><span class=\"comment\"># (keep init, rootmnt, drop_caps)</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> debug</span><br><span class=\"line\"><span class=\"built_in\">unset</span> MODPROBE_OPTIONS</span><br><span class=\"line\"><span class=\"built_in\">unset</span> DPKG_ARCH</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOTFLAGS</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOTFSTYPE</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOTDELAY</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOT</span><br><span class=\"line\"><span class=\"built_in\">unset</span> IP</span><br><span class=\"line\"><span class=\"built_in\">unset</span> IP6</span><br><span class=\"line\"><span class=\"built_in\">unset</span> BOOT</span><br><span class=\"line\"><span class=\"built_in\">unset</span> BOOTIF</span><br><span class=\"line\"><span class=\"built_in\">unset</span> UBIMTD</span><br><span class=\"line\"><span class=\"built_in\">unset</span> blacklist</span><br><span class=\"line\"><span class=\"built_in\">unset</span> <span class=\"built_in\">break</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> noresume</span><br><span class=\"line\"><span class=\"built_in\">unset</span> panic</span><br><span class=\"line\"><span class=\"built_in\">unset</span> quiet</span><br><span class=\"line\"><span class=\"built_in\">unset</span> <span class=\"built_in\">readonly</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> resume</span><br><span class=\"line\"><span class=\"built_in\">unset</span> resume_offset</span><br><span class=\"line\"><span class=\"built_in\">unset</span> fastboot</span><br><span class=\"line\"><span class=\"built_in\">unset</span> forcefsck</span><br><span class=\"line\"><span class=\"built_in\">unset</span> fsckfix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Move virtual filesystems over to the real filesystem</span></span><br><span class=\"line\">mount -n -o move /sys <span class=\"variable\">$&#123;rootmnt&#125;</span>/sys</span><br><span class=\"line\">mount -n -o move /proc <span class=\"variable\">$&#123;rootmnt&#125;</span>/proc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Chain to real filesystem</span></span><br><span class=\"line\"><span class=\"built_in\">exec</span> run-init <span class=\"variable\">$&#123;drop_caps&#125;</span> <span class=\"variable\">$&#123;rootmnt&#125;</span> <span class=\"variable\">$&#123;init&#125;</span> <span class=\"string\">\"<span class=\"variable\">$@</span>\"</span> <span class=\"variable\">$&#123;recovery:+--startup-event=recovery&#125;</span> &lt;<span class=\"variable\">$&#123;rootmnt&#125;</span>/dev/console &gt;<span class=\"variable\">$&#123;rootmnt&#125;</span>/dev/console 2&gt;&amp;1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Something went badly wrong in the initramfs.\"</span></span><br><span class=\"line\">panic <span class=\"string\">\"Please file a bug on initramfs-tools.\"</span></span><br></pre></td></tr></table></figure>\n\n<p>またこのinitを実行するタイミングではルートファイルをマウントしていないため、ルートにある/binや/sbinを利用できません。</p>\n<p>代わりに、initrd内部の/binや/sbinを利用しています。</p>\n<p>そのため、ここにバイナリを配置しておく事で起動中に使用できる様になります。</p>\n<blockquote>\n<p><strong>注意</strong><br>バイナリの実行のために、別途moduleの追加が必要だったりもします。</p>\n</blockquote>\n<h2 id=\"initrdを作成する\"><a href=\"#initrdを作成する\" class=\"headerlink\" title=\"initrdを作成する\"></a>initrdを作成する</h2><p>展開後のファイルが配置されているフォルダで行います。<br>cpioによるアーカイブ化、gzipによる圧縮を同時に行い元の状態に戻します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ find | cpio -o -H newc  | gzip -c &gt; ../initrd.img-4.15.0-54-generic</span><br></pre></td></tr></table></figure>\n\n<p>作成されたinitrdを元の/boot/initrdと入れ替えても起動する事が確認できるかと思います。</p>\n<p>initrdの編集は以上の操作で行います。</p>\n<h2 id=\"init実行中に処理を止める\"><a href=\"#init実行中に処理を止める\" class=\"headerlink\" title=\"init実行中に処理を止める\"></a>init実行中に処理を止める</h2><p>/boot/grub/grub.cfgのlinuxオプションが書かれている箇所にbreak=initとオプションを追加する事で処理が停止します。<br>initrd内のデバッグは、このタイミングで一旦止め、initrd内のリソースを使用したコマンド操作が可能です。<br>処理を進める場合には、exitコマンドを実行し、続行させる事ができます。</p>\n<blockquote>\n<p><strong>注意</strong><br>HyperV上に起動したLinuxMint19では、このタイミングではコンソールの描画が行われませんでした。<br>そのため実機で行う事をおすすめします。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>UbuntuOSベースのシンクライアントを作成していた時、<br>起動時のスプラッシュロゴ表示や、ファイルシステムの復号化処理を行うため、<br>initrd内部の書き換えを行っていました</p>\n<p>なかなかプライベートで触る事は少ないため、書き残しておきます。</p>\n<h1 id=\"環境\"><a href=\"#環境\" class=\"headerlink\" title=\"環境\"></a>環境</h1><ul>\n<li>Linux Mint 19</li>\n</ul>\n<h1 id=\"initrdとは\"><a href=\"#initrdとは\" class=\"headerlink\" title=\"initrdとは\"></a>initrdとは</h1><p>Linuxを起動する際に、各ディストリビューションとして動作するために必要なサービスやドライバが含まれたファイル群を固めた物</p>\n<p>Linuxが起動する時には、基本的に以下の順序で読み込まれていく</p>\n<ul>\n<li>1.UEFI</li>\n<li>2.ブートローダ</li>\n<li>3.カーネル</li>\n<li>4.init</li>\n</ul>\n<p>カーネルを読み込み基本的なコマンドを使用できる状態にしてから、initrdをマウント、initrd内部の/initを実行する</p>\n<p>Linux起動時に黒画面に出現するログは、大半がinitを実行している時に出ている</p>\n<h1 id=\"手順\"><a href=\"#手順\" class=\"headerlink\" title=\"手順\"></a>手順</h1><h2 id=\"initrdを作業ディレクトリにコピーする\"><a href=\"#initrdを作業ディレクトリにコピーする\" class=\"headerlink\" title=\"initrdを作業ディレクトリにコピーする\"></a>initrdを作業ディレクトリにコピーする</h2><p>/bootフォルダ以下に似たような名前のファイルがあるため、それをコピーしてください</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir work <span class=\"comment\"># 作業フォルダ作成</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> work</span><br><span class=\"line\">$ cp /boot/initrd.img-4.15.0-54-generic ./initrd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"zcatで復号しつつ、ファイルとして出力\"><a href=\"#zcatで復号しつつ、ファイルとして出力\" class=\"headerlink\" title=\"zcatで復号しつつ、ファイルとして出力\"></a>zcatで復号しつつ、ファイルとして出力</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir initrdfiles</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> initrdfiles</span><br><span class=\"line\">$ zcat ../initrd | cpio -idmv</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"ファイルを確認\"><a href=\"#ファイルを確認\" class=\"headerlink\" title=\"ファイルを確認\"></a>ファイルを確認</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls</span><br><span class=\"line\">bin  conf  etc  init  lib  lib64  run  sbin  scripts  usr  var</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"initを見てみる\"><a href=\"#initを見てみる\" class=\"headerlink\" title=\"initを見てみる\"></a>initを見てみる</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi init</span><br></pre></td></tr></table></figure>\n\n<p>詳しくは触れませんが、shによって実行できる形で書かれている事がわかります。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Default PATH differs between shells, and is not automatically exported</span></span><br><span class=\"line\"><span class=\"comment\"># by klibc dash.  Make it consistent.</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=/sbin:/usr/sbin:/bin:/usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\">[ -d /dev ] || mkdir -m 0755 /dev</span><br><span class=\"line\">[ -d /root ] || mkdir -m 0700 /root</span><br><span class=\"line\">[ -d /sys ] || mkdir /sys</span><br><span class=\"line\">[ -d /proc ] || mkdir /proc</span><br><span class=\"line\">[ -d /tmp ] || mkdir /tmp</span><br><span class=\"line\">mkdir -p /var/lock</span><br><span class=\"line\">mount -t sysfs -o nodev,noexec,nosuid sysfs /sys</span><br><span class=\"line\">mount -t proc -o nodev,noexec,nosuid proc /proc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\" <span class=\"variable\">$(cat /proc/cmdline)</span> \"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">*\\ quiet\\ *)</span><br><span class=\"line\">\tquiet=y</span><br><span class=\"line\">\t;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">\tquiet=n</span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Loading, please wait...\"</span></span><br><span class=\"line\">\t;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> quiet</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Note that this only becomes /dev on the real filesystem if udev's scripts</span></span><br><span class=\"line\"><span class=\"comment\"># are used; which they will be, but it's worth pointing out</span></span><br><span class=\"line\">mount -t devtmpfs -o nosuid,mode=0755 udev /dev</span><br><span class=\"line\">mkdir /dev/pts</span><br><span class=\"line\">mount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || <span class=\"literal\">true</span></span><br><span class=\"line\">mount -t tmpfs -o <span class=\"string\">\"noexec,nosuid,size=10%,mode=0755\"</span> tmpfs /run</span><br><span class=\"line\">mkdir -m 0755 /run/initramfs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Export the dpkg architecture</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DPKG_ARCH=</span><br><span class=\"line\">. /conf/arch.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set modprobe env</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MODPROBE_OPTIONS=<span class=\"string\">\"-qb\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Export relevant variables</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOT=</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOTDELAY=</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOTFLAGS=</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROOTFSTYPE=</span><br><span class=\"line\"><span class=\"built_in\">export</span> IP=</span><br><span class=\"line\"><span class=\"built_in\">export</span> IP6=</span><br><span class=\"line\"><span class=\"built_in\">export</span> BOOT=</span><br><span class=\"line\"><span class=\"built_in\">export</span> BOOTIF=</span><br><span class=\"line\"><span class=\"built_in\">export</span> UBIMTD=</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"built_in\">break</span>=</span><br><span class=\"line\"><span class=\"built_in\">export</span> init=/sbin/init</span><br><span class=\"line\"><span class=\"built_in\">export</span> <span class=\"built_in\">readonly</span>=y</span><br><span class=\"line\"><span class=\"built_in\">export</span> rootmnt=/root</span><br><span class=\"line\"><span class=\"built_in\">export</span> debug=</span><br><span class=\"line\"><span class=\"built_in\">export</span> panic=</span><br><span class=\"line\"><span class=\"built_in\">export</span> blacklist=</span><br><span class=\"line\"><span class=\"built_in\">export</span> resume=</span><br><span class=\"line\"><span class=\"built_in\">export</span> resume_offset=</span><br><span class=\"line\"><span class=\"built_in\">export</span> drop_caps=</span><br><span class=\"line\"><span class=\"built_in\">export</span> fastboot=n</span><br><span class=\"line\"><span class=\"built_in\">export</span> forcefsck=n</span><br><span class=\"line\"><span class=\"built_in\">export</span> fsckfix=</span><br><span class=\"line\"><span class=\"built_in\">export</span> recovery=</span><br><span class=\"line\"><span class=\"built_in\">export</span> NETWORK_SKIP_ENSLAVED=</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># mdadm needs hostname to be set. This has to be done before the udev rules are called!</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -f <span class=\"string\">\"/etc/hostname\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        /bin/hostname -F /etc/hostname &gt;/dev/null 2&gt;&amp;1</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bring in the main config</span></span><br><span class=\"line\">. /conf/initramfs.conf</span><br><span class=\"line\"><span class=\"keyword\">for</span> conf <span class=\"keyword\">in</span> conf/conf.d/*; <span class=\"keyword\">do</span></span><br><span class=\"line\">\t[ -f <span class=\"variable\">$&#123;conf&#125;</span> ] &amp;&amp; . <span class=\"variable\">$&#123;conf&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">. /scripts/<span class=\"built_in\">functions</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Parse command line options</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> $(cat /proc/cmdline); <span class=\"keyword\">do</span></span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"variable\">$x</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\tinit=*)</span><br><span class=\"line\">\t\tinit=<span class=\"variable\">$&#123;x#init=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\troot=*)</span><br><span class=\"line\">\t\tROOT=<span class=\"variable\">$&#123;x#root=&#125;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;BOOT&#125;</span>\"</span> ] &amp;&amp; [ <span class=\"string\">\"<span class=\"variable\">$ROOT</span>\"</span> = <span class=\"string\">\"/dev/nfs\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\tBOOT=nfs</span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">                ;;</span><br><span class=\"line\">\trootflags=*)</span><br><span class=\"line\">\t\tROOTFLAGS=<span class=\"string\">\"-o <span class=\"variable\">$&#123;x#rootflags=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trootfstype=*)</span><br><span class=\"line\">\t\tROOTFSTYPE=<span class=\"string\">\"<span class=\"variable\">$&#123;x#rootfstype=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trootdelay=*)</span><br><span class=\"line\">\t\tROOTDELAY=<span class=\"string\">\"<span class=\"variable\">$&#123;x#rootdelay=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"variable\">$&#123;ROOTDELAY&#125;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t*[![:digit:].]*)</span><br><span class=\"line\">\t\t\tROOTDELAY=</span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tresumedelay=*)</span><br><span class=\"line\">\t\tRESUMEDELAY=<span class=\"string\">\"<span class=\"variable\">$&#123;x#resumedelay=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tloop=*)</span><br><span class=\"line\">\t\tLOOP=<span class=\"string\">\"<span class=\"variable\">$&#123;x#loop=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tloopflags=*)</span><br><span class=\"line\">\t\tLOOPFLAGS=<span class=\"string\">\"-o <span class=\"variable\">$&#123;x#loopflags=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tloopfstype=*)</span><br><span class=\"line\">\t\tLOOPFSTYPE=<span class=\"string\">\"<span class=\"variable\">$&#123;x#loopfstype=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tcryptopts=*)</span><br><span class=\"line\">\t\tcryptopts=<span class=\"string\">\"<span class=\"variable\">$&#123;x#cryptopts=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnfsroot=*)</span><br><span class=\"line\">\t\tNFSROOT=<span class=\"string\">\"<span class=\"variable\">$&#123;x#nfsroot=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnetboot=*)</span><br><span class=\"line\">\t\tNETBOOT=<span class=\"string\">\"<span class=\"variable\">$&#123;x#netboot=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tip=*)</span><br><span class=\"line\">\t\tIP=<span class=\"string\">\"<span class=\"variable\">$&#123;x#ip=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tip6=*)</span><br><span class=\"line\">\t\tIP6=<span class=\"string\">\"<span class=\"variable\">$&#123;x#ip6=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tboot=*)</span><br><span class=\"line\">\t\tBOOT=<span class=\"variable\">$&#123;x#boot=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tubi.mtd=*)</span><br><span class=\"line\">\t\tUBIMTD=<span class=\"variable\">$&#123;x#ubi.mtd=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tresume=*)</span><br><span class=\"line\">\t\tRESUME=<span class=\"string\">\"<span class=\"variable\">$&#123;x#resume=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"variable\">$RESUME</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t        UUID=*)</span><br><span class=\"line\">\t\t\tRESUME=<span class=\"string\">\"/dev/disk/by-uuid/<span class=\"variable\">$&#123;RESUME#UUID=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tresume_offset=*)</span><br><span class=\"line\">\t\tresume_offset=<span class=\"string\">\"<span class=\"variable\">$&#123;x#resume_offset=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnoresume)</span><br><span class=\"line\">\t\tnoresume=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tdrop_capabilities=*)</span><br><span class=\"line\">\t\tdrop_caps=<span class=\"string\">\"-d <span class=\"variable\">$&#123;x#drop_capabilities=&#125;</span>\"</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tpanic=*)</span><br><span class=\"line\">\t\tpanic=<span class=\"string\">\"<span class=\"variable\">$&#123;x#panic=&#125;</span>\"</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"variable\">$&#123;panic&#125;</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\t*[![:digit:].]*)</span><br><span class=\"line\">\t\t\tpanic=</span><br><span class=\"line\">\t\t\t;;</span><br><span class=\"line\">\t\t<span class=\"keyword\">esac</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tro)</span><br><span class=\"line\">\t\t<span class=\"built_in\">readonly</span>=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trw)</span><br><span class=\"line\">\t\t<span class=\"built_in\">readonly</span>=n</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tdebug)</span><br><span class=\"line\">\t\tdebug=y</span><br><span class=\"line\">\t\tquiet=n</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$&#123;netconsole&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exec</span> &gt;/dev/kmsg 2&gt;&amp;1</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">exec</span> &gt;/run/initramfs/initramfs.debug 2&gt;&amp;1</span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">set</span> -x</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tdebug=*)</span><br><span class=\"line\">\t\tdebug=y</span><br><span class=\"line\">\t\tquiet=n</span><br><span class=\"line\">\t\t<span class=\"built_in\">set</span> -x</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"built_in\">break</span>=*)</span><br><span class=\"line\">\t\t<span class=\"built_in\">break</span>=<span class=\"variable\">$&#123;x#break=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"built_in\">break</span>)</span><br><span class=\"line\">\t\t<span class=\"built_in\">break</span>=premount</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tblacklist=*)</span><br><span class=\"line\">\t\tblacklist=<span class=\"variable\">$&#123;x#blacklist=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tnetconsole=*)</span><br><span class=\"line\">\t\tnetconsole=<span class=\"variable\">$&#123;x#netconsole=&#125;</span></span><br><span class=\"line\">\t\t[ <span class=\"string\">\"x<span class=\"variable\">$debug</span>\"</span> = <span class=\"string\">\"xy\"</span> ] &amp;&amp; <span class=\"built_in\">exec</span> &gt;/dev/kmsg 2&gt;&amp;1</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tBOOTIF=*)</span><br><span class=\"line\">\t\tBOOTIF=<span class=\"variable\">$&#123;x#BOOTIF=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\thwaddr=*)</span><br><span class=\"line\">\t\tBOOTIF=<span class=\"variable\">$&#123;x#hwaddr=&#125;</span></span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tfastboot|fsck.mode=skip)</span><br><span class=\"line\">\t\tfastboot=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tforcefsck|fsck.mode=force)</span><br><span class=\"line\">\t\tforcefsck=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tfsckfix|fsck.repair=yes)</span><br><span class=\"line\">\t\tfsckfix=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\tfsck.repair=no)</span><br><span class=\"line\">\t\tfsckfix=n</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\trecovery)</span><br><span class=\"line\">\t\trecovery=y</span><br><span class=\"line\">\t\t;;</span><br><span class=\"line\">\t<span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Default to BOOT=local if no boot script defined.</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;BOOT&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tBOOT=<span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">\"<span class=\"variable\">$&#123;noresume&#125;</span>\"</span> ] || [ <span class=\"string\">\"<span class=\"variable\">$RESUME</span>\"</span> = none ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">export</span> noresume=y</span><br><span class=\"line\">\t<span class=\"built_in\">unset</span> resume</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tresume=<span class=\"variable\">$&#123;RESUME:-&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break top</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># export BOOT variable value for compcache,</span></span><br><span class=\"line\"><span class=\"comment\"># so we know if we run from casper</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> BOOT</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Don't do log messages here to avoid confusing graphical boots</span></span><br><span class=\"line\">run_scripts /scripts/init-top</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break modules</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_begin_msg <span class=\"string\">\"Loading essential drivers\"</span></span><br><span class=\"line\">[ -n <span class=\"string\">\"<span class=\"variable\">$&#123;netconsole&#125;</span>\"</span> ] &amp;&amp; modprobe netconsole netconsole=<span class=\"string\">\"<span class=\"variable\">$&#123;netconsole&#125;</span>\"</span></span><br><span class=\"line\">load_modules</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break premount</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_begin_msg <span class=\"string\">\"Running /scripts/init-premount\"</span></span><br><span class=\"line\">run_scripts /scripts/init-premount</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break mount</span><br><span class=\"line\">log_begin_msg <span class=\"string\">\"Mounting root file system\"</span></span><br><span class=\"line\"><span class=\"comment\"># Always load local and nfs (since these might be needed for /etc or</span></span><br><span class=\"line\"><span class=\"comment\"># /usr, irrespective of the boot script used to mount the rootfs).</span></span><br><span class=\"line\">. /scripts/<span class=\"built_in\">local</span></span><br><span class=\"line\">. /scripts/nfs</span><br><span class=\"line\">. /scripts/<span class=\"variable\">$&#123;BOOT&#125;</span></span><br><span class=\"line\">parse_numeric <span class=\"variable\">$&#123;ROOT&#125;</span></span><br><span class=\"line\">maybe_break mountroot</span><br><span class=\"line\">mount_top</span><br><span class=\"line\">mount_premount</span><br><span class=\"line\">mountroot</span><br><span class=\"line\">log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> read_fstab_entry /usr; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tlog_begin_msg <span class=\"string\">\"Mounting /usr file system\"</span></span><br><span class=\"line\">\tmountfs /usr</span><br><span class=\"line\">\tlog_end_msg</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Mount cleanup</span></span><br><span class=\"line\">mount_bottom</span><br><span class=\"line\">nfs_bottom</span><br><span class=\"line\">local_bottom</span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break bottom</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_begin_msg <span class=\"string\">\"Running /scripts/init-bottom\"</span></span><br><span class=\"line\"><span class=\"comment\"># We expect udev's init-bottom script to move /dev to $&#123;rootmnt&#125;/dev</span></span><br><span class=\"line\">run_scripts /scripts/init-bottom</span><br><span class=\"line\">[ <span class=\"string\">\"<span class=\"variable\">$quiet</span>\"</span> != <span class=\"string\">\"y\"</span> ] &amp;&amp; log_end_msg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Move /run to the root</span></span><br><span class=\"line\">mount -n -o move /run <span class=\"variable\">$&#123;rootmnt&#125;</span>/run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">validate_init</span></span>() &#123;</span><br><span class=\"line\">\trun-init -n <span class=\"string\">\"<span class=\"variable\">$&#123;rootmnt&#125;</span>\"</span> <span class=\"string\">\"<span class=\"variable\">$&#123;1&#125;</span>\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Check init is really there</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ! validate_init <span class=\"string\">\"<span class=\"variable\">$init</span>\"</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">echo</span> <span class=\"string\">\"Target filesystem doesn't have requested <span class=\"variable\">$&#123;init&#125;</span>.\"</span></span><br><span class=\"line\">\tinit=</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> inittest <span class=\"keyword\">in</span> /sbin/init /etc/init /bin/init /bin/sh; <span class=\"keyword\">do</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> validate_init <span class=\"string\">\"<span class=\"variable\">$&#123;inittest&#125;</span>\"</span>; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\tinit=<span class=\"string\">\"<span class=\"variable\">$inittest</span>\"</span></span><br><span class=\"line\">\t\t\t<span class=\"built_in\">break</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\">\t<span class=\"keyword\">done</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># No init on rootmount</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ! validate_init <span class=\"string\">\"<span class=\"variable\">$&#123;init&#125;</span>\"</span> ; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tpanic <span class=\"string\">\"No init found. Try passing init= bootarg.\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">maybe_break init</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># don't leak too much of env - some init(8) don't clear it</span></span><br><span class=\"line\"><span class=\"comment\"># (keep init, rootmnt, drop_caps)</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> debug</span><br><span class=\"line\"><span class=\"built_in\">unset</span> MODPROBE_OPTIONS</span><br><span class=\"line\"><span class=\"built_in\">unset</span> DPKG_ARCH</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOTFLAGS</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOTFSTYPE</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOTDELAY</span><br><span class=\"line\"><span class=\"built_in\">unset</span> ROOT</span><br><span class=\"line\"><span class=\"built_in\">unset</span> IP</span><br><span class=\"line\"><span class=\"built_in\">unset</span> IP6</span><br><span class=\"line\"><span class=\"built_in\">unset</span> BOOT</span><br><span class=\"line\"><span class=\"built_in\">unset</span> BOOTIF</span><br><span class=\"line\"><span class=\"built_in\">unset</span> UBIMTD</span><br><span class=\"line\"><span class=\"built_in\">unset</span> blacklist</span><br><span class=\"line\"><span class=\"built_in\">unset</span> <span class=\"built_in\">break</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> noresume</span><br><span class=\"line\"><span class=\"built_in\">unset</span> panic</span><br><span class=\"line\"><span class=\"built_in\">unset</span> quiet</span><br><span class=\"line\"><span class=\"built_in\">unset</span> <span class=\"built_in\">readonly</span></span><br><span class=\"line\"><span class=\"built_in\">unset</span> resume</span><br><span class=\"line\"><span class=\"built_in\">unset</span> resume_offset</span><br><span class=\"line\"><span class=\"built_in\">unset</span> fastboot</span><br><span class=\"line\"><span class=\"built_in\">unset</span> forcefsck</span><br><span class=\"line\"><span class=\"built_in\">unset</span> fsckfix</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Move virtual filesystems over to the real filesystem</span></span><br><span class=\"line\">mount -n -o move /sys <span class=\"variable\">$&#123;rootmnt&#125;</span>/sys</span><br><span class=\"line\">mount -n -o move /proc <span class=\"variable\">$&#123;rootmnt&#125;</span>/proc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Chain to real filesystem</span></span><br><span class=\"line\"><span class=\"built_in\">exec</span> run-init <span class=\"variable\">$&#123;drop_caps&#125;</span> <span class=\"variable\">$&#123;rootmnt&#125;</span> <span class=\"variable\">$&#123;init&#125;</span> <span class=\"string\">\"<span class=\"variable\">$@</span>\"</span> <span class=\"variable\">$&#123;recovery:+--startup-event=recovery&#125;</span> &lt;<span class=\"variable\">$&#123;rootmnt&#125;</span>/dev/console &gt;<span class=\"variable\">$&#123;rootmnt&#125;</span>/dev/console 2&gt;&amp;1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Something went badly wrong in the initramfs.\"</span></span><br><span class=\"line\">panic <span class=\"string\">\"Please file a bug on initramfs-tools.\"</span></span><br></pre></td></tr></table></figure>\n\n<p>またこのinitを実行するタイミングではルートファイルをマウントしていないため、ルートにある/binや/sbinを利用できません。</p>\n<p>代わりに、initrd内部の/binや/sbinを利用しています。</p>\n<p>そのため、ここにバイナリを配置しておく事で起動中に使用できる様になります。</p>\n<blockquote>\n<p><strong>注意</strong><br>バイナリの実行のために、別途moduleの追加が必要だったりもします。</p>\n</blockquote>\n<h2 id=\"initrdを作成する\"><a href=\"#initrdを作成する\" class=\"headerlink\" title=\"initrdを作成する\"></a>initrdを作成する</h2><p>展開後のファイルが配置されているフォルダで行います。<br>cpioによるアーカイブ化、gzipによる圧縮を同時に行い元の状態に戻します。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ find | cpio -o -H newc  | gzip -c &gt; ../initrd.img-4.15.0-54-generic</span><br></pre></td></tr></table></figure>\n\n<p>作成されたinitrdを元の/boot/initrdと入れ替えても起動する事が確認できるかと思います。</p>\n<p>initrdの編集は以上の操作で行います。</p>\n<h2 id=\"init実行中に処理を止める\"><a href=\"#init実行中に処理を止める\" class=\"headerlink\" title=\"init実行中に処理を止める\"></a>init実行中に処理を止める</h2><p>/boot/grub/grub.cfgのlinuxオプションが書かれている箇所にbreak=initとオプションを追加する事で処理が停止します。<br>initrd内のデバッグは、このタイミングで一旦止め、initrd内のリソースを使用したコマンド操作が可能です。<br>処理を進める場合には、exitコマンドを実行し、続行させる事ができます。</p>\n<blockquote>\n<p><strong>注意</strong><br>HyperV上に起動したLinuxMint19では、このタイミングではコンソールの描画が行われませんでした。<br>そのため実機で行う事をおすすめします。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck6ku49pt00008lvq1w2onfmu","tag_id":"ck6ku49q400028lvqir4npij0","_id":"ck6ku49qa00078lvqwmvdqw5r"},{"post_id":"ck6ku49q200018lvqyz99qb5e","tag_id":"ck6ku49qa00068lvqc1o7bl2l","_id":"ck6ku49qd00098lvqalglz27u"},{"post_id":"ck6ku49q600038lvqlhpigu98","tag_id":"ck6ku49qc00088lvq2x89ca2t","_id":"ck6ku49qg000e8lvqslz9y25q"},{"post_id":"ck6ku49q600038lvqlhpigu98","tag_id":"ck6ku49qe000a8lvqci8ibdkr","_id":"ck6ku49qg000f8lvq06mi2e6r"},{"post_id":"ck6ku49q600038lvqlhpigu98","tag_id":"ck6ku49qe000b8lvqll5j6ouq","_id":"ck6ku49qh000h8lvqdhh3o0x0"},{"post_id":"ck6ku49q600038lvqlhpigu98","tag_id":"ck6ku49qe000c8lvqq4qp8v7j","_id":"ck6ku49qh000i8lvq6ymbo710"},{"post_id":"ck6ku49q700048lvqm6k12ysj","tag_id":"ck6ku49qc00088lvq2x89ca2t","_id":"ck6ku49qh000j8lvqppxsvagx"},{"post_id":"ck6ku49q900058lvqkbyg0res","tag_id":"ck6ku49qg000g8lvq4ieipp0b","_id":"ck6ku49qi000k8lvqfuewu6tb"},{"post_id":"ck6ku49t8000l8lvqhey6udv8","tag_id":"ck6ku49tc000n8lvq9dd327gr","_id":"ck6ku49tl000z8lvqbif27yuq"},{"post_id":"ck6ku49t8000l8lvqhey6udv8","tag_id":"ck6ku49tf000r8lvqofxbc0qo","_id":"ck6ku49tm00118lvqyg0ndihs"},{"post_id":"ck6ku49t8000l8lvqhey6udv8","tag_id":"ck6ku49ti000u8lvq9fhe18p8","_id":"ck6ku49tn00148lvql6fz6nlc"},{"post_id":"ck6ku49ta000m8lvq45u0ewzf","tag_id":"ck6ku49qa00068lvqc1o7bl2l","_id":"ck6ku49to00168lvqnhc2r3aa"},{"post_id":"ck6ku49ta000m8lvq45u0ewzf","tag_id":"ck6ku49tk000x8lvqh1zzftp5","_id":"ck6ku49tq00198lvqppjj9myy"},{"post_id":"ck6ku49td000o8lvqzkpt5csu","tag_id":"ck6ku49tm00128lvqwmnjv5xj","_id":"ck6ku49tt001e8lvqb5pgzlyy"},{"post_id":"ck6ku49td000o8lvqzkpt5csu","tag_id":"ck6ku49tp00188lvqre3e9152","_id":"ck6ku49tv001g8lvq1ty77454"},{"post_id":"ck6ku49te000p8lvqax2frgm3","tag_id":"ck6ku49ts001c8lvq9k7fidgr","_id":"ck6ku49tw001j8lvq41qt0wvp"},{"post_id":"ck6ku49tf000q8lvq72lnv06l","tag_id":"ck6ku49tv001h8lvq8rjahswk","_id":"ck6ku49u6001w8lvqc3977690"},{"post_id":"ck6ku49tf000q8lvq72lnv06l","tag_id":"ck6ku49ty001l8lvq1gjacioa","_id":"ck6ku49u7001x8lvqvatguzt6"},{"post_id":"ck6ku49tf000q8lvq72lnv06l","tag_id":"ck6ku49u4001s8lvqro9hq99r","_id":"ck6ku49u700208lvqivrzs57o"},{"post_id":"ck6ku49tf000q8lvq72lnv06l","tag_id":"ck6ku49u6001u8lvqmb7auuvp","_id":"ck6ku49u800228lvq97x3z8sf"},{"post_id":"ck6ku49tg000s8lvq5ptxixie","tag_id":"ck6ku49u6001v8lvqhn06xswh","_id":"ck6ku49u800238lvqzjfrolyu"},{"post_id":"ck6ku49th000t8lvq2v0wjqgc","tag_id":"ck6ku49u7001y8lvqz9w4oerv","_id":"ck6ku49u900258lvqnj0j1k62"},{"post_id":"ck6ku49ti000v8lvq983jk4lh","tag_id":"ck6ku49u700218lvql0567hm8","_id":"ck6ku49uc00298lvqvr6gosmm"},{"post_id":"ck6ku49ti000v8lvq983jk4lh","tag_id":"ck6ku49u900248lvqjcgjwi0v","_id":"ck6ku49uc002a8lvqb3xx3xu2"},{"post_id":"ck6ku49ti000v8lvq983jk4lh","tag_id":"ck6ku49ua00268lvqdwwvodys","_id":"ck6ku49uc002c8lvqk91nqcph"},{"post_id":"ck6ku49ti000v8lvq983jk4lh","tag_id":"ck6ku49ub00278lvqlek3oqjy","_id":"ck6ku49uf002d8lvqvx2ig5cz"},{"post_id":"ck6ku49tj000w8lvqe2j77di7","tag_id":"ck6ku49ub00288lvqwm9cssl2","_id":"ck6ku49uh002g8lvq7f5sbud8"},{"post_id":"ck6ku49tj000w8lvqe2j77di7","tag_id":"ck6ku49uc002b8lvqaun4s7d6","_id":"ck6ku49uh002h8lvqko1dfthh"},{"post_id":"ck6ku49tj000w8lvqe2j77di7","tag_id":"ck6ku49uf002e8lvqzu2wv7q7","_id":"ck6ku49uh002j8lvqbvkjdzh4"},{"post_id":"ck6ku49tk000y8lvqez9625q1","tag_id":"ck6ku49ug002f8lvqzbypxibl","_id":"ck6ku49uh002k8lvqknaysjpz"},{"post_id":"ck6ku49tl00108lvquuvus3nq","tag_id":"ck6ku49uh002i8lvquurvduit","_id":"ck6ku49ui002m8lvqp5j9587c"},{"post_id":"ck6ku49tm00138lvq5wm0glpp","tag_id":"ck6ku49u4001s8lvqro9hq99r","_id":"ck6ku49uj002o8lvqh3x5zs7v"},{"post_id":"ck6ku49tn00158lvquxpolg1w","tag_id":"ck6ku49uj002n8lvq58kgbsgm","_id":"ck6ku49uk002r8lvq60nbya5x"},{"post_id":"ck6ku49tn00158lvquxpolg1w","tag_id":"ck6ku49uk002p8lvqo96ntdgu","_id":"ck6ku49ul002s8lvqq6uxxuqg"},{"post_id":"ck6ku49tp00178lvqfvku42w0","tag_id":"ck6ku49uk002q8lvqqqmdycwm","_id":"ck6ku49um002v8lvqc8owsa80"},{"post_id":"ck6ku49tp00178lvqfvku42w0","tag_id":"ck6ku49ul002t8lvqb4vqnrfh","_id":"ck6ku49un002w8lvqln2b6mlf"},{"post_id":"ck6ku49tq001a8lvqvd62rel0","tag_id":"ck6ku49ug002f8lvqzbypxibl","_id":"ck6ku49un002y8lvq03lz6dsq"},{"post_id":"ck6ku49tq001a8lvqvd62rel0","tag_id":"ck6ku49qg000g8lvq4ieipp0b","_id":"ck6ku49uo002z8lvq58ye10cn"},{"post_id":"ck6ku49tt001d8lvqs53d3b4s","tag_id":"ck6ku49ug002f8lvqzbypxibl","_id":"ck6ku49up00318lvqo2ivza6w"},{"post_id":"ck6ku49tu001f8lvqp2rpnc9l","tag_id":"ck6ku49uo00308lvqv9x0i6bb","_id":"ck6ku49uq00338lvqo0ir5vom"},{"post_id":"ck6ku49tv001i8lvqt5glolkq","tag_id":"ck6ku49uq00328lvq1nhvu1wt","_id":"ck6ku49ur00378lvqy8u24m4k"},{"post_id":"ck6ku49tv001i8lvqt5glolkq","tag_id":"ck6ku49ul002t8lvqb4vqnrfh","_id":"ck6ku49us00388lvqi79g3joy"},{"post_id":"ck6ku49tv001i8lvqt5glolkq","tag_id":"ck6ku49ur00358lvq4s4r1r5i","_id":"ck6ku49us003a8lvql8fw8uj5"},{"post_id":"ck6ku49ty001m8lvq6655hig4","tag_id":"ck6ku49ur00368lvqj1jww3id","_id":"ck6ku49us003c8lvquetxgxce"},{"post_id":"ck6ku49ty001m8lvq6655hig4","tag_id":"ck6ku49us00398lvqhczndiu0","_id":"ck6ku49ut003d8lvquxpcipc8"},{"post_id":"ck6ku49tz001n8lvqdazbi3yu","tag_id":"ck6ku49us003b8lvqsb45unn9","_id":"ck6ku49ut003f8lvqgobp0xgk"},{"post_id":"ck6ku49u2001q8lvq6nmz94bx","tag_id":"ck6ku49ut003e8lvqmx7kqfxu","_id":"ck6ku49uu003h8lvq5lhjao56"},{"post_id":"ck6ku49u2001q8lvq6nmz94bx","tag_id":"ck6ku49qa00068lvqc1o7bl2l","_id":"ck6ku49uu003i8lvq1tgpmz84"},{"post_id":"ck6ku49u4001r8lvqp93n8k35","tag_id":"ck6ku49ut003g8lvqklhjf0h2","_id":"ck6ku49uu003l8lvq0yelxek2"},{"post_id":"ck6ku49u4001r8lvqp93n8k35","tag_id":"ck6ku49ul002t8lvqb4vqnrfh","_id":"ck6ku49uv003m8lvq2262lwml"},{"post_id":"ck6ku49u5001t8lvqql4vrchv","tag_id":"ck6ku49uu003k8lvqmq1p3gsb","_id":"ck6ku49uv003o8lvqjvhzkkye"},{"post_id":"ck6ku49u5001t8lvqql4vrchv","tag_id":"ck6ku49uv003n8lvq97e7sigc","_id":"ck6ku49uv003p8lvq5yj0hghq"},{"post_id":"ck6ku49vn003q8lvq4xcd2rrp","tag_id":"ck6ku49uc002b8lvqaun4s7d6","_id":"ck6ku49vp003s8lvqylxwvuob"},{"post_id":"ck6ku49vn003q8lvq4xcd2rrp","tag_id":"ck6ku49vo003r8lvqgsvvlrki","_id":"ck6ku49vp003t8lvql551h5ih"}],"Tag":[{"name":"anyenv","_id":"ck6ku49q400028lvqir4npij0"},{"name":"GitHub","_id":"ck6ku49qa00068lvqc1o7bl2l"},{"name":"Git","_id":"ck6ku49qc00088lvq2x89ca2t"},{"name":"GitBash","_id":"ck6ku49qe000a8lvqci8ibdkr"},{"name":"gcc","_id":"ck6ku49qe000b8lvqll5j6ouq"},{"name":"mingw","_id":"ck6ku49qe000c8lvqq4qp8v7j"},{"name":"byobu","_id":"ck6ku49qg000g8lvq4ieipp0b"},{"name":"golang","_id":"ck6ku49tc000n8lvq9dd327gr"},{"name":"cmd","_id":"ck6ku49tf000r8lvqofxbc0qo"},{"name":"ponzu","_id":"ck6ku49ti000u8lvq9fhe18p8"},{"name":"hub","_id":"ck6ku49tk000x8lvqh1zzftp5"},{"name":"Hexo","_id":"ck6ku49tm00128lvqwmnjv5xj"},{"name":"sitemap.xml","_id":"ck6ku49tp00188lvqre3e9152"},{"name":"php","_id":"ck6ku49ts001c8lvq9k7fidgr"},{"name":"windows","_id":"ck6ku49tv001h8lvq8rjahswk"},{"name":"mac","_id":"ck6ku49ty001l8lvq1gjacioa"},{"name":"nodejs","_id":"ck6ku49u4001s8lvqro9hq99r"},{"name":"map","_id":"ck6ku49u6001u8lvqmb7auuvp"},{"name":"miniconda","_id":"ck6ku49u6001v8lvqhn06xswh"},{"name":"nmon","_id":"ck6ku49u7001y8lvqz9w4oerv"},{"name":"vim","_id":"ck6ku49u700218lvql0567hm8"},{"name":"Neovim","_id":"ck6ku49u900248lvqjcgjwi0v"},{"name":"vim-plug","_id":"ck6ku49ua00268lvqdwwvodys"},{"name":"vim-lsp","_id":"ck6ku49ub00278lvqlek3oqjy"},{"name":"Debian","_id":"ck6ku49ub00288lvqwm9cssl2"},{"name":"Linux","_id":"ck6ku49uc002b8lvqaun4s7d6"},{"name":"timedatectl","_id":"ck6ku49uf002e8lvqzu2wv7q7"},{"name":"wsl","_id":"ck6ku49ug002f8lvqzbypxibl"},{"name":"PowerShell","_id":"ck6ku49uh002i8lvquurvduit"},{"name":"sh","_id":"ck6ku49uj002n8lvq58kgbsgm"},{"name":"basename","_id":"ck6ku49uk002p8lvqo96ntdgu"},{"name":"Apache","_id":"ck6ku49uk002q8lvqqqmdycwm"},{"name":"Ubuntu","_id":"ck6ku49ul002t8lvqb4vqnrfh"},{"name":"vagrant","_id":"ck6ku49uo00308lvqv9x0i6bb"},{"name":"WSL","_id":"ck6ku49uq00328lvq1nhvu1wt"},{"name":"BoW","_id":"ck6ku49ur00358lvq4s4r1r5i"},{"name":"xsel","_id":"ck6ku49ur00368lvqj1jww3id"},{"name":"ubuntu","_id":"ck6ku49us00398lvqhczndiu0"},{"name":"Go","_id":"ck6ku49us003b8lvqsb45unn9"},{"name":"Hugo","_id":"ck6ku49ut003e8lvqmx7kqfxu"},{"name":"nginx","_id":"ck6ku49ut003g8lvqklhjf0h2"},{"name":"npm","_id":"ck6ku49uu003k8lvqmq1p3gsb"},{"name":"npx","_id":"ck6ku49uv003n8lvq97e7sigc"},{"name":"init","_id":"ck6ku49vo003r8lvqgsvvlrki"}]}}